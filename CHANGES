===========================
2008-03-25 20:09:15 v1_0000
===========================

  2008-03-25 20:08:47 (r2301) by rcaputo; poe/lib/POE.pm M

    At long last, it is time.

  2008-03-24 05:11:33 (r2299) by rcaputo
  poe-test-loops/t/01_no_tests.t M;
  poe-test-loops/lib/POE/Test/Loops/k_signals_rerun.pm M;
  poe-test-loops/lib/POE/Test/Loops/comp_tcp_concurrent.pm M;
  poe-test-loops/MANIFEST M;
  poe-test-loops/lib/POE/Test/Loops/wheel_readline.pm M;
  poe-test-loops/lib/POE/Test/DondeEstan.pm M; poe-test-loops/Makefile.PL
  M; poe-test-loops/lib/POE/Test/Loops/wheel_curses.pm M;
  poe-test-loops/lib/POE/Test/Loops/wheel_run.pm M;
  poe-test-loops/lib/POE/Test/Loops/wheel_sf_ipv6.pm M;
  poe-test-loops/lib/POE/Test/Loops.pm A;
  poe-test-loops/bin/poe-gen-tests M

    Update tests to match POE 0.9999_03.
    
    Add POE::Test::Loops and move the VERSION number there so that the
    package name can be installed and/or depended upon.
    
    Add keyword expansion to files that didn't have it set.
    
    Bump the version to 0.98. 

  2008-03-23 01:43:22 (r2298) by rcaputo; poe/lib/POE.pm M

    Addressed several of the CPAN testers failures. Releasing a new test
    version to flush out any new issues. 

  2008-03-23 01:42:40 (r2297) by rcaputo
  poe/t/10_units/04_drivers/01_sysrw.t M

    Simulate a driver get() error by reading from a write-only
    filehandle. I suspect that Perl 5.6.2 is reporting the act of reading
    from a closed fielhandle as an EOF rather than an error, so reading
    from a write-only filehandle may trigger different behavior. 

  2008-03-23 01:31:21 (r2296) by rcaputo
  poe/t/10_units/05_filters/03_http.t M

    Looks like Perl 5.8.7 mistreats my @x = $o->method() =~ m//g; as an
    lvalue subroutine motification, or something. Split it into a scalar
    assign, and bind the match to the scalar rather than a method return
    value. 

  2008-03-23 01:28:18 (r2295) by rcaputo
  poe/t/30_loops/00_base/wheel_sf_ipv6.pm M

    Can't use AF_INET6 directly. Needed to fully qualify its package. 

  2008-03-23 01:23:36 (r2294) by rcaputo; poe/lib/POE/Wheel/Run.pm M

    Contrary to the docs, IO::Pty's clone_winsize_from() seems to die
    noisily if the source filehandle isn't a tty. 

  2008-03-23 01:19:48 (r2293) by rcaputo; poe/lib/POE/Wheel/ReadLine.pm M

    Fall back to an 80x25 terminal size if Term::ReadKey::GetTerminalSize
    fails. 

  2008-03-22 22:22:40 (r2292) by rcaputo; poe/lib/POE.pm M

    Bump up the version for the 2nd pre-release test.

  2008-03-22 22:21:42 (r2291) by rcaputo
  poe/t/30_loops/00_base/wheel_run.pm M

    Tweak the debugging output in a vain attempt to address rt 28804. 

  2008-03-19 21:09:44 (r2290) by nothingmuch
  poe/lib/POE/Wheel/Run.pm M; poe/lib/POE/Kernel.pm M

    Demonstrate usage of POE::Kernel->stop in L<POE::Wheel::Run/TIPS AND
    TRICKS>

  2008-03-19 15:38:58 (r2289) by rcaputo
  poe/lib/POE/Kernel.pm M; poe/t/10_units/01_pod/02_pod_coverage.t M

    Solve POD test coverage issues.

  2008-03-14 18:55:13 (r2288) by rcaputo; poe/lib/POE.pm M

    Packaging up a release for the testers.

  2008-03-10 19:59:47 (r2287) by cfedde; poe/Makefile.PL M

    backing out -r2277:2278 sense of network tests restored

  2008-03-10 08:32:44 (r2286) by rcaputo; poe/mylib/Makefile-5005.pm M

    Remove the AF_INET6 warnings when running Makefile.PL on MSWin32.

  2008-03-10 08:11:30 (r2285) by rcaputo
  poe/t/30_loops/00_base/comp_tcp_concurrent.pm M

    Apply SREZIC's patch to work around an issue on 64-bit FreeBSD 6.2.
    Resolves rt.cpan.org #32034. 

  2008-03-10 08:04:27 (r2284) by rcaputo
  poe/lib/POE/Resource/Events.pm M; poe/lib/POE/Kernel.pm M

    Apply RDB's patches to update tracing. Closes rt.cpan.org 30342. 

  2008-03-10 07:55:29 (r2283) by rcaputo
  poe/lib/POE/Wheel/Run.pm M; poe/t/30_loops/00_base/wheel_readline.pm M;
  poe/t/30_loops/00_base/wheel_curses.pm M

    Use IO::Pty helper methods to condition the slave pty rather than the
    APITUE based low-level calls. Sorry, Mr. Stevens. 

  2008-03-10 07:02:30 (r2282) by rcaputo; poe/lib/POE.pm M

    Add a reference to POE's subversion repository, per Zoffix's
    suggestion. Resolves rt.cpan.org #33835. 

  2008-03-10 06:33:00 (r2281) by rcaputo; poe/README M

    Minor tweaks. 

  2008-03-10 06:08:01 (r2280) by rcaputo
  poe/lib/POE/Loop.pm M; poe/lib/POE/Loop/PerlSignals.pm M;
  poe/lib/POE/Wheel.pm M

    Redocument POE::Loop. 

  2008-03-09 21:53:28 (r2279) by rcaputo
  poe/t/30_loops/00_base/k_signals_rerun.pm M;
  poe/t/30_loops/00_base/wheel_run.pm M;
  poe/t/30_loops/00_base/wheel_sf_ipv6.pm M

    Socket6 and Socket both export AF_INET6, but their prototypes don't
    match. Ask Socket6 to keep its symbols to itself.
    
    Skip even more tests that crash perl on Win32. 

  2008-03-08 03:54:34 (r2278) by cfedde; poe/Makefile.PL M

    Make the sense of the network test use positive logic interactive use
    defaults to "do not grant permission" non interactive defaults to
    "grant permission" 

  2008-03-08 03:51:14 (r2277) by cfedde
  poe/t/90_regression/agaran-filter-httpd.t M

    #33901: Patch to re-work exit in
    t/90_regression/agaran-filter-httpd.t thanks pravus 

  2008-02-29 20:38:17 (r2276) by cfedde
  poe/t/90_regression/cfedde-filter-httpd.t M

    RT#33718: pravus' patch for mst's error report

  2008-02-29 09:00:54 (r2275) by rcaputo
  poe/t/90_regression/steinert-recursive-signal.t D;
  poe/t/30_loops/00_base/k_signals_rerun.pm M;
  poe/t/90_regression/whelan-dieprop.t A; poe/lib/POE/Kernel.pm M;
  poe/MANIFEST M

    Make SIGDIE asynchronous. It will no longer interrupt long chains of
    events (such as _parent/_child chains during session creation and
    destruction).
    
    Exceptions in _stop is currently untrappable, as the asynchronous
    SIGDIE will have nowhere to be delivered. They will cause POE::Kernel
    to "gracefully" die at the end of _stop's dispatch.
    
    SIGDIE propagation follows the normal rules with one new addition:
    The signal also proragates from the target session upwards through
    parent, grandparent, and so on. It will not be dispatched to children
    of ancestor sessions. It will not be dispatched to POE::Kernel
    itself.
    
    Nearly all regression tests pass. The notable exception is Jonathan
    Steinert's recursive signal tests. They have become moot since SIGDIE
    is not recursive anymore. 

  2008-02-25 05:56:36 (r2274) by rcaputo
  poe/lib/POE/Pipe.pm M; poe/lib/POE/Resource/FileHandles.pm M

    Add prototypes to F_GETFL and F_SETFL. 

  2008-02-20 10:45:43 (r2273) by bingosnet
  poe/t/10_units/02_pipes/02_oneway.t M;
  poe/t/90_regression/cfedde-filter-httpd.t M;
  poe/t/20_resources/00_base/filehandles.pm M;
  poe/t/10_units/02_pipes/03_twoway.t M

    Patch from Martin Ferrari to fix tests not honouring the "don't use
    the network" flag. RT #33276 

  2008-02-20 10:18:36 (r2272) by bingosnet; poe/lib/POE/Filter/HTTPD.pm M

    Patch from agaran to fix a problem with his original patch to
    Filter-HTTPD. Adjusted so the tests pass. 

  2008-02-19 20:21:48 (r2271) by rcaputo
  poe/lib/POE/Loader.pm M; poe/t/90_regression/rt23181-sigchld-rc.t M;
  poe/t/90_regression/whjackson-followtail.t M

    Add svn:keywords where they are missing.

  2008-02-18 10:45:45 (r2270) by bingosnet
  poe/t/90_regression/agaran-filter-httpd.t A;
  poe/lib/POE/Filter/HTTPD.pm M; poe/MANIFEST M

    Applied a patch to Filter::HTTPD from Maciej Pijanka (agaran).
    Created applicable regression test. 

  2008-01-21 19:09:06 (r2269) by rcaputo
  poe/lib/POE/Kernel.pm M; poe/lib/POE/Filter.pm M

    Comment on sub-second accuracy requiring Time::HiRes::time(). Based
    on a discussion with and test case from Sjors Gielen.

  2008-01-12 12:36:44 (r2268) by bingosnet
  poe/MANIFEST M; poe/mylib/PoeBuildInfo.pm M;
  poe/t/90_regression/bingos-followtail.t A

    Added a regression test for the FollowTail problem on *BSD. 

  2008-01-11 15:50:02 (r2267) by bingosnet
  poe/lib/POE/Driver.pm M; poe/lib/POE/Wheel/FollowTail.pm M

    Fixed a pod error that was making pod test fail.
    
    Applied a patch from pravus to fix double InputEvents being triggered
    when tailing an empty file on *BSD.
    
    <+pravus> basically what i am seeing is that if you create a file and
    stat() it before you

    write to it, rdev will be 0. then, once the file is written to, the
    rdev changes. <+pravus> that's causing Wheel::FollowTail to read
    until EOF (getting the line you just wrote),

    reset the file and then re-read (getting the line again).

  2008-01-07 06:09:02 (r2266) by rcaputo; poe/lib/POE/Driver.pm M

    Redocument. 

  2008-01-07 05:23:42 (r2265) by rcaputo; poe/lib/POE/Wheel.pm M

    See also: POE::Driver and POE::Filter. 

  2008-01-07 05:21:25 (r2264) by rcaputo; poe/lib/POE/Wheel.pm M

    Discuss how filters and drivers interact with wheels. 

  2008-01-06 05:38:06 (r2263) by rcaputo; poe/lib/POE/Wheel.pm M

    Redocument! 

  2007-12-12 03:18:11 (r2262) by gwyn17; poe/lib/POE/Session.pm M

    Mid-sized review of POE::Session documentation

  2007-12-12 01:33:51 (r2261) by gwyn17; poe/lib/POE/Session.pm M

    Small POE::Session doco patch from pravus. 

  2007-12-09 08:45:26 (r2260) by rcaputo
  poe/lib/POE/Kernel.pm M; poe/lib/POE/Session.pm M

    Finish the first redocumentation pass on POE::Session. Migrate some
    stuff to POE::Kernel. Align Philip Gwyn's changes to POE::Kernel with
    standard style guidelines. 

  2007-12-08 12:10:57 (r2259) by gwyn17; poe/lib/POE.pm M

    All L<module> to L<module|module> to prevent pod2html outputing 'the
    module manapge'

  2007-12-08 11:50:48 (r2258) by gwyn17; poe/lib/POE/Kernel.pm M

    Middle-sized documentation review

  2007-12-08 02:27:54 (r2257) by gwyn17; poe/lib/POE.pm M

    Mid-sized documenation update

  2007-12-03 06:45:05 (r2256) by rcaputo; poe/lib/POE/Session.pm M

    Initial stab at _default docs.

  2007-12-03 01:53:58 (r2255) by rcaputo; poe/lib/POE/Session.pm M

    Incorporate some older event parameter constant documentation into
    the recently rewritten version. Mostly by adopting the older
    examples. 

  2007-12-02 19:09:24 (r2254) by rcaputo; poe/lib/POE/Session.pm M

    Rewrite docs for postback(), callback() and get_heap(). 

  2007-12-01 21:05:54 (r2253) by rcaputo; poe/lib/POE/Session.pm M

    Rewrite option() documentation.

  2007-11-23 03:45:35 (r2252) by rcaputo; poe/lib/POE/Session.pm M

    Make more progress on POE::Session

  2007-11-14 03:52:49 (r2251) by immute; poe/MANIFEST M

    Removed the test from MANIFEST.

  2007-11-02 17:44:18 (r2250) by bingosnet; poe/lib/POE/Session.pm M

    Borland C++ doesn't specify ENOSYS in Errno.h. Check for existence of
    ENOSYS and substitute EIO if not found. 

  2007-10-26 20:47:22 (r2249) by immute
  poe/t/90_regression/immute-server-tcp-filter.t D

    Removed my old, godawful slow test.

  2007-10-26 07:38:17 (r2248) by rcaputo
  poe/lib/POE/Kernel.pm M; poe/lib/POE.pm M; poe/lib/POE/Session.pm M

    Minor edits to POE and POE::Kernel. Major revisions to POE::Session.
    Still nowhere near done, however. 

  2007-10-13 05:36:32 (r2247) by rcaputo; poe/Makefile.PL M

    Oops... reversed the sense of the want-to-run-tests question.

  2007-10-13 05:21:52 (r2246) by rcaputo; poe/MANIFEST M

    Remove some obsolete tests from the manifest.

  2007-10-13 05:18:39 (r2245) by rcaputo
  poe/lib/POE/Resource/Signals.pm M; poe/lib/POE/Resource/Aliases.pm M;
  poe/lib/POE/API/ResLoader.pm D;
  poe/t/10_units/03_base/02_api_resloader.t D;
  poe/lib/POE/Resource/SIDs.pm M; poe/lib/POE/Resource/Sessions.pm M;
  poe/MANIFEST M; poe/lib/POE/Resource/FileHandles.pm M

    Remove POE::API::ResLoader. 

  2007-10-13 01:39:58 (r2244) by rcaputo
  poe/lib/POE/Resource/Controls.pm D; poe/lib/POE/Resources.pm M;
  poe/lib/POE/API/Ctl.pm D; poe/t/10_units/03_base/02_api_ctl.t D;
  poe/lib/POE/Kernel.pm M; poe/lib/POE.pm M;
  poe/t/20_resources/00_base/controls.pm D; poe/MANIFEST M

    Remove POE::Api::Ctl per the warning on the mailing list. 

  2007-10-08 06:45:59 (r2243) by rcaputo; poe/lib/POE/Kernel.pm M

    Add a print() to the SYNOPSIS.

  2007-10-08 05:26:29 (r2242) by rcaputo; poe/lib/POE/Kernel.pm M

    Finish first pass through POE::Kernel. There are a lot of TODOs
    however.

  2007-10-07 22:06:48 (r2241) by rcaputo; poe/lib/POE/Kernel.pm M

    Document why sessions remain active.

  2007-10-07 03:38:21 (r2240) by rcaputo; poe/lib/POE/Kernel.pm M

    Redocument Kernel accessors and lesser-used utility methods.

  2007-10-07 02:59:02 (r2239) by rcaputo; poe/lib/POE/Kernel.pm M

    Redocument Kernel state accessors.

  2007-10-07 01:43:17 (r2238) by rcaputo; poe/lib/POE/Kernel.pm M

    Redocument reference counters.

  2007-10-03 08:15:02 (r2237) by rcaputo; poe/lib/POE/Kernel.pm M

    Fix a typo.

  2007-10-03 08:13:24 (r2236) by rcaputo; poe/lib/POE/Kernel.pm M

    Fix a couple typos.

  2007-10-03 07:54:55 (r2235) by rcaputo; poe/lib/POE/Kernel.pm M

    Rewrite state() docs. 

  2007-10-01 04:12:00 (r2234) by rcaputo; poe/lib/POE/Kernel.pm M

    Make editorial decisions on Matt Sickler's doc contributions (thanks,
    Matt!).
    
    Do the initial rewrite of the signals docs. There are still some
    straggling TODOs. 

  2007-10-01 04:09:10 (r2233) by rcaputo; poe/Makefile.PL M

    Clean up the prompts a little. 

  2007-09-27 17:36:26 (r2232) by bingosnet
  poe/lib/POE/Wheel/ReadWrite.pm M

    Fixed a mistake in the documentation 

  2007-09-18 03:41:45 (r2231) by immute; poe/lib/POE/Kernel.pm M

    Documentation edits.

  2007-09-09 00:15:32 (r2230) by rcaputo; poe/lib/POE/Kernel.pm M

    Rewrite the I/O watcher methods. 

  2007-09-08 08:13:31 (r2229) by rcaputo; poe/lib/POE/Kernel.pm M

    Make a little more progress on the docs. 

  2007-08-20 17:34:39 (r2228) by rcaputo; poe/lib/POE/Kernel.pm M

    Make a little more progress on POE::Kernel before going to work.

  2007-08-20 05:38:13 (r2227) by rcaputo; poe/lib/POE/Kernel.pm M

    Partial revision. Documentation is currently complete but the
    structure is broken.

  2007-08-20 05:32:39 (r2226) by teknikill; poe/lib/POE.pm M

    add blurb about myself to the contributers list

  2007-08-19 18:15:59 (r2225) by rcaputo; poe/lib/POE.pm M

    Move the POE.pm use lines to POE::Kernel. Mark that contributors need
    to be documented.

  2007-08-19 13:42:54 (r2224) by bingosnet; poe/lib/POE/Wheel.pm M

    Minor documentation fix to amend typo of filter when wheel was meant

  2007-08-19 05:57:08 (r2223) by rcaputo; poe/lib/POE.pm M

    Document "use POE" magic.

  2007-08-19 05:02:19 (r2222) by rcaputo
  poe/lib/POE/Loop/IO_Poll.pm M; poe/lib/POE/Resource/Extrefs.pm M;
  poe/lib/POE/Wheel/Run.pm M; poe/lib/POE/Resource/Aliases.pm M;
  poe/lib/POE/Filter/HTTPD.pm M; poe/lib/POE/Filter/Line.pm M;
  poe/lib/POE/Kernel.pm M; poe/lib/POE/Session.pm M;
  poe/lib/POE/Loop/TkActiveState.pm M; poe/lib/POE/Wheel/SocketFactory.pm
  M; poe/lib/POE/Wheel/ReadLine.pm M; poe/lib/POE/Resource/Signals.pm M;
  poe/lib/POE/Loop/Select.pm M; poe/lib/POE/Resource/Events.pm M;
  poe/lib/POE/Resource/Sessions.pm M; poe/lib/POE/Queue/Array.pm M;
  poe/lib/POE/Resource/FileHandles.pm M

    Replace the symbol of Eris with the usual TODO.

  2007-08-19 02:45:16 (r2221) by rcaputo; poe/lib/POE/Filter/Block.pm M

    Technically it is not a TODO.

  2007-08-19 00:59:33 (r2220) by rcaputo
  poe/lib/POE/Component/Client/TCP.pm M; poe/lib/POE/Loader.pm M;
  poe/lib/POE/Wheel/Curses.pm M; poe/lib/POE/Filter/HTTPD.pm M;
  poe/lib/POE/Loop.pm M; poe/lib/POE/Resources.pm M;
  poe/lib/POE/Filter/Stackable.pm M; poe/lib/POE/Wheel/FollowTail.pm M;
  poe/lib/POE/Kernel.pm M; poe/lib/POE/Filter/Stream.pm M;
  poe/lib/POE/Resource/Statistics.pm M; poe/lib/POE/Wheel/ListenAccept.pm
  M; poe/lib/POE/Session.pm M; poe/lib/POE/Filter.pm M;
  poe/lib/POE/Wheel/ReadLine.pm M; poe/lib/POE/API/ResLoader.pm M;
  poe/lib/POE/Resource/SIDs.pm M; poe/lib/POE/API/Ctl.pm M;
  poe/lib/POE/Resource/Events.pm M; poe/lib/POE/Pipe.pm M;
  poe/lib/POE/Resource/Sessions.pm M; poe/lib/POE/Component/Server/TCP.pm
  M; poe/lib/POE.pm M; poe/lib/POE/Queue/Array.pm M;
  poe/lib/POE/Resource/Extrefs.pm M; poe/lib/POE/Resource/Aliases.pm M;
  poe/lib/POE/Wheel/Run.pm M; poe/lib/POE/Filter/Line.pm M;
  poe/lib/POE/Filter/RecordBlock.pm M; poe/lib/POE/Filter/Block.pm M;
  poe/lib/POE/Driver/SysRW.pm M; poe/lib/POE/Filter/Grep.pm M;
  poe/lib/POE/Filter/Reference.pm M; poe/lib/POE/Wheel/SocketFactory.pm
  M; poe/lib/POE/Queue.pm M; poe/lib/POE/Pipe/TwoWay.pm M;
  poe/lib/POE/Resource/Signals.pm M; poe/lib/POE/Resource.pm M;
  poe/lib/POE/Resource/Controls.pm M; poe/lib/POE/Wheel/ReadWrite.pm M;
  poe/lib/POE/Driver.pm M; poe/lib/POE/Pipe/OneWay.pm M;
  poe/lib/POE/Filter/Map.pm M; poe/lib/POE/Component.pm M;
  poe/lib/POE/NFA.pm M; poe/lib/POE/Wheel.pm M;
  poe/lib/POE/Resource/FileHandles.pm M

    Mark files that need to be redocumented.

  2007-08-19 00:54:55 (r2219) by rcaputo
  poe/lib/POE/Loop/IO_Poll.pm M; poe/lib/POE/Loop/Tk.pm M;
  poe/lib/POE/Loop/Select.pm M; poe/lib/POE/Loop/Event.pm M;
  poe/lib/POE/Loop/PerlSignals.pm M; poe/lib/POE/Loop/Gtk.pm M;
  poe/lib/POE/Loop/TkCommon.pm M; poe/lib/POE/Loop/TkActiveState.pm M

    Need to redocument these. Also added configuration info. for the
    common loop tests when they are distributed separately.

  2007-08-18 06:26:43 (r2218) by rcaputo; poe/lib/POE.pm M

    Revise documentation in a major way. 

  2007-08-13 06:52:41 (r2216) by rcaputo
  poe-test-loops/bin/poe-gen-tests M

    Roll the version back to 0.97 for release.

  2007-08-13 06:52:24 (r2215) by rcaputo; poe-test-loops/Makefile.PL M

    Only report on tags matching ^ptl- 

  2007-08-12 22:48:36 (r2214) by rcaputo
  poe-test-loops/bin/poe-gen-tests M

    Majorly simplify the code. Document the new conventions. 

  2007-08-12 05:46:32 (r2213) by rcaputo
  poe-test-loops/bin/poe-gen-tests M

    Document how to specify more tests.

  2007-08-11 18:12:49 (r2212) by rcaputo; poe-test-loops/Makefile.PL M

    Add poe-gen-tests to EXE_FILES, ensuring it will be installed
    somewhere good.

  2007-08-11 18:08:55 (r2211) by rcaputo
  poe-test-loops/Makefile.PL M; poe-test-loops/bin/poe-gen-tests M

    Document more magic, converting it to merely technology. 

  2007-08-11 09:18:48 (r2210) by rcaputo
  poe-test-loops/t/01_no_tests.t A; poe-test-loops/MANIFEST A;
  poe-test-loops/Makefile.PL A; poe-test-loops/lib/POE/Test/DondeEstan.pm
  A; poe-test-loops/bin/poe-gen-tests A

    More additions. 

  2007-08-11 09:14:58 (r2209) by rcaputo
  poe-test-loops/t A; poe-test-loops/lib/POE/Test/Loops A;
  poe-test-loops/lib/POE/Test/Loops/k_signals_rerun.pm A;
  poe-test-loops/lib A; poe-test-loops/lib/POE/Test/Loops/wheel_run.pm A;
  poe-test-loops/lib/POE/Test/Loops/wheel_curses.pm A; poe-test-loops/bin
  A; poe-test-loops/lib/POE/Test A;
  poe-test-loops/lib/POE/Test/Loops/k_alarms.pm A;
  poe-test-loops/lib/POE/Test/Loops/k_aliases.pm A;
  poe-test-loops/lib/POE/Test/Loops/ses_session.pm A;
  poe-test-loops/lib/POE/Test/Loops/wheel_sf_unix.pm A;
  poe-test-loops/lib/POE/Test/Loops/sbk_signal_init.pm A;
  poe-test-loops/lib/POE/Test/Loops/k_sig_child.pm A;
  poe-test-loops/lib/POE/Test/Loops/wheel_sf_ipv6.pm A;
  poe-test-loops/lib/POE/Test/Loops/k_detach.pm A;
  poe-test-loops/lib/POE/Test/Loops/wheel_sf_tcp.pm A;
  poe-test-loops/lib/POE/Test/Loops/comp_tcp.pm A;
  poe-test-loops/lib/POE/Test/Loops/all_errors.pm A;
  poe-test-loops/lib/POE/Test/Loops/wheel_sf_udp.pm A;
  poe-test-loops/lib/POE/Test/Loops/comp_tcp_concurrent.pm A;
  poe-test-loops/lib/POE/Test/Loops/wheel_readline.pm A;
  poe-test-loops/lib/POE/Test/Loops/k_signals.pm A;
  poe-test-loops/lib/POE A;
  poe-test-loops/lib/POE/Test/Loops/wheel_readwrite.pm A;
  poe-test-loops/lib/POE/Test/Loops/k_selects.pm A;
  poe-test-loops/lib/POE/Test/Loops/wheel_tail.pm A;
  poe-test-loops/lib/POE/Test/Loops/ses_nfa.pm A; poe-test-loops A;
  poe-test-loops/lib/POE/Test/Loops/wheel_accept.pm A

    Initial add. Hoping the svn copy from POE will preserve history. 

  2007-08-11 09:10:38 (r2208) by rcaputo
  poe/t/30_loops/00_base/comp_tcp_concurrent.pm M;
  poe/t/30_loops/00_base/all_errors.pm M;
  poe/t/30_loops/00_base/comp_tcp.pm M

    Set proper skip messages.

  2007-07-25 04:51:09 (r2207) by rcaputo; poe/mylib/PoeBuildInfo.pm M

    According to at least one CPAN tester we cannot assume Storable
    exists. Explicitly require it. Partially addresses
    http://www.nntp.perl.org/group/perl.cpan.testers/2007/06/msg515661.ht
    ml 

  2007-07-25 04:44:21 (r2206) by rcaputo
  poe/t/30_loops/00_base/comp_tcp_concurrent.pm M;
  poe/t/90_regression/cfedde-filter-httpd.t M;
  poe/t/30_loops/00_base/wheel_accept.pm M;
  poe/t/90_regression/immute-server-tcp-filter.t M;
  poe/t/30_loops/00_base/comp_tcp.pm M

    According to the CPAN testers (bless their souls), POE 0.9989 failed
    at least four times due to bind() errors. Mainly addresses already in
    use, which implies some rapid-fire testing. Here I'm patching the
    tests that failed to bind to a random free port rather than hardcoded
    numbers. They should be a lot more resilient to this sort of error. 

  2007-07-24 15:44:37 (r2205) by rcaputo
  poe/lib/POE/Wheel/SocketFactory.pm M

    Applied Markus Jansen's patch to prevent a memory leak when Socket6
    is not present on Solaris 2.6. 

  2007-07-23 18:08:46 (r2204) by rcaputo
  poe/t/30_loops/00_base/k_alarms.pm M

    Attempt to make the timing more stable in t/30_loops/*/k_alarms.t
    tests. Slow machines, especially running emulators within
    virtualizations, get the time wrong sometimes. 

===========================
2007-07-23 07:25:45 v0_9999
===========================

  2007-07-23 07:25:09 (r2202) by rcaputo; poe/lib/POE.pm M

    Bump up the version. 

  2007-07-23 07:22:57 (r2201) by rcaputo
  poe/lib/POE/Resource/Events.pm M; poe/lib/POE/Loop/TkCommon.pm M

    Resolve a CPU spinning issue when using the Tk event loop without any
    event watchers. Resolves ticket 27359 reported by Craig at Lucent.
    Others have also reported this issue, but not in a ticket. :) 

  2007-07-23 01:37:08 (r2200) by rcaputo
  poe/lib/POE/Loop/TkActiveState.pm M

    Avoid a warning about ambiguous use of select().

  2007-07-22 08:37:07 (r2199) by rcaputo
  poe/lib/POE/Wheel/ReadWrite.pm M

    Apply Gareth's patch for an optional synchronous put() and a flush()
    method with which to flush the wheel's buffer on command. Resolves
    rt.cpan.org ticket 20328. 

  2007-07-22 06:15:17 (r2198) by rcaputo
  poe/t/30_loops/00_base/wheel_run.pm M

    Add a brief sleep to the child program to allow pipes to be flushed
    before the program exits. Andreas Koenig brought this to my attention
    via CPAN test reports and rt.cpan.org ticket 27478. 

  2007-07-22 02:21:32 (r2197) by rcaputo; poe/lib/POE/Queue/Array.pm M

    Mark Jason Dominus' binary insert example (Higher Order Perl, p. 292)
    inspired me to benchmark POE::Queue::Array against his algorithm. The
    linear seeks become slower after queues of depth 4. They're
    neck-and-neck for shorter ones. POE::Queue::Array's algorithm is a
    little faster otherwise, probably due to the special cases it
    implements.
    
    This patch removes the linear search cases for "small" queues. They
    were not being helpful. It also simplifies the binary search code,
    which is always a plus (Perl runs faster if it runs less code).
    Finally, it simplifies the remaining necessary linear search code...
    but that's after a binary seek anyway.
    
    Net loss: 94 lines of code. All tests still pass. 

  2007-07-21 07:04:55 (r2196) by rcaputo
  poe/lib/POE/Component/Server/TCP.pm M

    Resolve rt.cpan.org ticket 27833. Philip Gwyn found a case where the
    connection count for a server could go negative. Not-shutting-down
    hilarity ensues in this case. I've just applied his patch. 

  2007-07-21 06:52:55 (r2195) by rcaputo
  poe/t/30_loops/00_base/wheel_sf_ipv6.pm M

    Eric Hacker found a case where the IPv6 tests failed when AF_INET6
    isn't supplied by Socket6. This commit wraps the use of that constant
    in a block eval and skips all the tests if there's a failure. At
    least I hope that's the case. Should resolve rt.cpan.org ticket
    25879. 

  2007-07-21 06:51:26 (r2194) by rcaputo
  poe/lib/POE/Wheel/SocketFactory.pm M

    Oops. Remove tabs.

  2007-07-21 06:40:31 (r2193) by rcaputo
  poe/lib/POE/Wheel/SocketFactory.pm M

    Per STRO's suggestion, test and provide dummies for the IPv6
    constants separately. Resolves rt.cpan.org ticket 27250. 

  2007-07-04 21:31:15 (r2192) by rcaputo
  poe/lib/POE/Resource/Signals.pm M

    Yuval Kogman discovered that sig_child() events were not triggering
    after a second POE::Kernel->run() in the same program. We tracked
    this down to a static compile-time initialization. Moving that into
    POE::Resource::Signals::_data_sig_initialize() fixed the problem
    right up. 

  2007-06-14 01:26:41 (r2191) by rcaputo; poe/mylib/PoeBuildInfo.pm M

    Rob Bloodgood found a new deprecation. This change works around it.

  2007-05-24 05:52:46 (r2190) by immute; poe/lib/POE/Wheel/ReadWrite.pm M

    Added handle accessors to Wheel::ReadWrite

  2007-05-08 20:32:50 (r2189) by rcaputo
  poe/lib/POE/Wheel/SocketFactory.pm M

    Shevek suggested that Fcntl be used to import F_GETFL, F_SETFL and
    O_NONBLOCK since POSIX doesn't always do it. Tests here show that
    using both doesn't throw warnings, so there doesn't seem to be harm
    in it.

  2007-04-29 06:38:11 (r2188) by rcaputo
  poe/lib/POE/Filter/HTTPD.pm M; poe/t/10_units/05_filters/03_http.t M

    Marlon Bailey discovered that POE::Filter::HTTPD threw incorrect
    objects when methods were of mixed case. Such as "GEt". This commit
    includes a test for the proper behavior and a fix. NB: You'll get
    back an HTTP::Request object with a mixed-case method. The filter
    does NOT force a particular case here. 

  2007-04-19 21:35:33 (r2187) by rcaputo
  poe/mylib/Makefile-5004.pm M; poe/lib/POE/Wheel/ReadLine.pm M;
  poe/mylib/Makefile-5005.pm M; poe/lib/POE/Filter/HTTPD.pm M;
  poe/lib/POE/Filter/Block.pm M; poe/MANIFEST M;
  poe/lib/POE/Driver/SysRW.pm M; poe/lib/POE/Filter/Reference.pm M;
  poe/lib/POE/Wheel/SocketFactory.pm M

    I read on perl5-porters this trick to conditionally "use bytes"
    without source filtration. It works! And it's lexical! ZOMG! This
    commit replaces the stinky make-time source filter we were using with
    the compile-time trick. Thanks go out to Phil Harvey for coming up
    with the idea. 

  2007-04-06 19:53:33 (r2186) by rcaputo
  poe/lib/POE/Wheel/SocketFactory.pm M

    blocking() appears to be a FileHandle method, not an IO::Handle
    method. Use FileHandle explicitly to ensure it's loaded. 

  2007-03-30 05:09:23 (r2185) by rcaputo
  poe/lib/POE/Component/Server/TCP.pm M

    Cosmetic fixes in the high/low water mark code. 

==============
End of Excerpt
==============
