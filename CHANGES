===========================
2004-02-02 17:32:12 v0_2802
===========================

  2004-02-02 17:32:12 by rcaputo; lib/POE.pm 1.169

    Bump the version to 0.2802. This will be a CPAN-released update for
    the ill-fated 0.28. I figure, why burn a hundredth version for a
    fixup, especially since we're not entirely sure it's gold? 

  2004-02-02 17:24:51 by rcaputo
  mylib/Makefile-5004.pm 1.20; mylib/Makefile-5005.pm 1.38

    The generated META.yml must be touched early in Makefile.PL, or the
    MANIFEST checker will have a conniption. A cow. A canary. All manner
    of things which are not a Makefile will spring forth from MakeMaker's
    loins without META.yml existing. 

  2004-02-02 17:03:20 by rcaputo
  Build.PL 1.5; mylib/Makefile-5004.pm 1.19; mylib/Makefile-5005.pm 1.37

    Make Build.PL and Makefile.PL play nicely together. The distribution
    build process still goes through Makefile.PL until I can figure out
    how to tweak the dist targets in Module::Build. 

  2004-01-31 07:07:33 by rcaputo; Build.PL 1.4

    Work around "Too early to specify a build action 'Build'. Do 'Build
    Build' instead." per
    http://www.mail-archive.com/module-authors@perl.org/msg00162.html 

  2004-01-31 06:58:31 by rcaputo; Build.PL 1.3; MANIFEST 1.97;
  mylib/Makefile-5004.pm 1.18; mylib/Makefile-5005.pm 1.36;
  mylib/cpan-test.perl 1.3; samples/create.perl 1.7;
  samples/fakelogin.perl 1.9; samples/forkbomb.perl 1.14;
  samples/names.perl 1.9; samples/objmaps.perl 1.5;
  samples/objsessions.perl 1.11; samples/packagesessions.perl 1.8;
  samples/queue.perl 1.2; samples/selects.perl 1.13;
  samples/sessions.perl 1.20; samples/signals.perl 1.14;
  samples/tcp_watermarks.perl 1.3; samples/thrash.perl 1.13;
  samples/tk.perl 1.9; samples/udp.perl 1.5; samples/watermarks.perl 1.5;
  samples/wheels.perl 1.9; samples/wheels2.perl 1.6; t/001_queue.t 1.7;
  t/00_coverage.t 1.21; t/01_sessions.t 1.28; t/02_alarms.t 1.17;
  t/03_aliases.t 1.16; t/04_selects.t 1.21; t/05_macros.t 1.10;
  t/06_tk.t 1.47; t/07_event.t 1.20; t/08_errors.t 1.53;
  t/09_wheels_unix.t 1.18; t/10_wheels_tcp.t 1.17;
  t/11_signals_poe.t 1.28; t/12_signals_ev.t 1.21; t/13_wheels_udp.t 1.8;
  t/14_wheels_ft.t 1.16; t/15_filter_block.t 1.10;
  t/16_filter_stream.t 1.7; t/17_filter_ref.t 1.10;
  t/18_filter_line.t 1.11; t/19_filterchange.t 1.15; t/20_accept.t 1.9;
  t/21_gtk.t 1.22; t/22_wheel_run.t 1.35; t/23_nfa.t 1.10;
  t/24_filter_stack.t 1.7; t/25_detach.t 1.8; t/26_comp_tcp.t 1.7;
  t/27_poll.t 1.10; t/28_windows.t 1.9; t/29_sockfact6.t 1.13;
  t/30_filter_httpd.t 1.7; t/regress/neyuki-detach.t 1.2;
  t/res/aliases.t 1.9; t/res/events.t 1.6; t/res/extrefs.t 1.10;
  t/res/filehandles.t 1.8; t/res/sessions.t 1.6; t/res/sids.t 1.5;
  t/res/signals.t 1.5

    Clean up paths to point to the new lib/ directory. 

  2004-01-31 06:26:55 by rcaputo; mylib/ExtUtils/AutoInstall.pm 1.5

    Update to version 0.56. 

  2004-01-28 23:24:43 by rcaputo; MANIFEST 1.96; Makefile.PL 1.27;
  NEEDS 1.9; mylib/Makefile-5004.pm 1.17; mylib/Makefile-5005.pm 1.35;
  mylib/coverage.perl 1.9; mylib/reportupload.pl 1.3;
  mylib/testreport.pl 1.12; samples/socketfactory.perl 1.18;
  t/001_queue.t 1.6; t/00_coverage.t 1.20; t/01_sessions.t 1.27;
  t/02_alarms.t 1.16; t/03_aliases.t 1.15; t/04_selects.t 1.20;
  t/05_macros.t 1.9; t/06_tk.t 1.46; t/07_event.t 1.19;
  t/08_errors.t 1.52; t/09_wheels_unix.t 1.17; t/10_wheels_tcp.t 1.16;
  t/11_signals_poe.t 1.27; t/12_signals_ev.t 1.20; t/13_wheels_udp.t 1.7;
  t/14_wheels_ft.t 1.15; t/15_filter_block.t 1.9;
  t/16_filter_stream.t 1.6; t/17_filter_ref.t 1.9;
  t/18_filter_line.t 1.10; t/19_filterchange.t 1.14; t/20_accept.t 1.8;
  t/21_gtk.t 1.21; t/22_wheel_run.t 1.34; t/23_nfa.t 1.9;
  t/24_filter_stack.t 1.6; t/25_detach.t 1.7; t/26_comp_tcp.t 1.6;
  t/27_poll.t 1.9; t/28_windows.t 1.8; t/29_sockfact6.t 1.12;
  t/res/aliases.t 1.8; t/res/events.t 1.5; t/res/extrefs.t 1.9;
  t/res/filehandles.t 1.7; t/res/sessions.t 1.5; t/res/sids.t 1.4;
  t/res/signals.t 1.4

    Hopefully this patch fixes all the paths to point to mylib instead of
    lib. Developers and just plain folk who have CVS trees will need to
    remove their lib directories and "cvs update -dP ." to reflect the
    new mylib directory. There will be more files moved around shortly. 

  2004-01-28 23:19:13 by rcaputo
  lib/POE/Wheel/FollowTail.pm 1.49; lib/POE/Wheel/Run.pm 1.58

    The 5.004-and-earlier dependency checker picks up spurious uses of
    the phrase "use Foo" and treats them like module inclusions. We've
    subtly tweaked the language in some warnings so they avoid the magic
    phrase. 

  2004-01-28 22:46:23 by rcaputo; lib/POE.pm 1.168

    Bump version to 0.2801 for cvs development between CPAN releases. 

=========================
2004-01-27 20:15:21 v0_28
=========================

  2004-01-27 20:15:21 by rcaputo; MANIFEST.SKIP 1.7

    Add more development artifacts. 

  2004-01-27 20:09:27 by rcaputo
  Build.PL 1.2; mylib/Makefile-5005.pm 1.34

    The last commit DID modify META.yml. The new MakeMaker generates a
    Makefile clause that creates META.yml during "make dist". That
    clobbers the more complete Build.PL version we've been using. This
    commit patches lib/Build.PL to find POE.pm in its current location.
    It also patches Makfile-5005.pm so that "make dist" does not generate
    a META.yml. Finally it commits a working META.yml.

    In the future, META.yml should come out of cvs, and "make dist"
    should generate a proper one. 

  2004-01-27 19:18:16 by rcaputo; lib/POE.pm 1.167

    Bump POE.pm up to 0.28. META.yml doesn't change, but cvs still
    includes it here. Silly cvs. 

  2004-01-26 00:20:06 by sungo; lib/POE/Filter/HTTPD.pm 1.35

    add docs to warn about possible brokenness with libwww 

  2004-01-25 06:39:53 by sungo; t/30_filter_httpd.t 1.6

    add tests for large multipart form data posts 

  2004-01-25 06:19:26 by sungo; lib/POE/Filter/HTTPD.pm 1.34

    remove spurious warn 

  2004-01-25 06:14:34 by sungo; lib/POE/Filter/HTTPD.pm 1.33

    add a better error condition in the case of a POST request in a 0.9
    transaction. 

  2004-01-25 05:50:44 by sungo; t/30_filter_httpd.t 1.5

    rip out the hack workaround. specify the protocol using the
    http::request method 

  2004-01-25 02:51:07 by sungo; MANIFEST 1.95

    test 

  2004-01-25 02:49:14 by sungo; t/30_filter_httpd.t 1.4

    remove skip block around no longer skipped tests. remove a warning 

  2004-01-25 01:54:58 by rcaputo; lib/POE/Wheel/ReadWrite.pm 1.67

    Apocalypse found a bug in the documentation for put(). This is such a
    major thing, I'm shocked nobody reported it sooner. 

  2004-01-23 06:08:32 by sungo; t/30_filter_httpd.t 1.3

    turn on the simple post tests after working around the
    HTTP::Request::Common bug that was causing them to fail 

  2004-01-23 05:39:14 by sungo; t/30_filter_httpd.t 1.2

    add HEAD tests. add PUT and POST tests which are currently skipped
    due to known bugs 

  2004-01-23 05:32:40 by sungo; MANIFEST 1.94

    add the new test to the manifest 

  2004-01-23 05:06:34 by sungo; NEEDS 1.8

    keep NEEDS parser from looking into the bundled AUtoInstall.pm for
    strange non-needed needs 

  2004-01-22 06:02:11 by sungo; mylib/Makefile-5004.pm 1.16;
  mylib/Makefile-5005.pm 1.33; t/30_filter_httpd.t 1.1

    (!!) Add core prerequisite of Test::More. Add the beginnings of tests
    of Filter::HTTPD 

  2004-01-22 04:21:07 by sungo; lib/POE/Filter/HTTPD.pm 1.32

    add error messages to every build_error call 

  2004-01-21 23:01:08 by rcaputo
  lib/POE/Filter/Block.pm 1.14; t/15_filter_block.t 1.8

    Optimize the semantics of Filter::Block's custom length codecs---no
    more data copying, at least. Document the encoder/decoder
    subroutines. 

  2004-01-21 19:53:01 by rcaputo
  lib/POE/Filter/Block.pm 1.13; t/15_filter_block.t 1.7

    Implement Alexander Zangerl's suggestion that Filter::Block have
    pluggable prepended length codecs. He's writing a C program to
    interface with a POE server, and he doesn't like the C string
    terminator (NUL, chr(0)) in the records. This closes rt.cpan.org
    ticket 3812. 

  2004-01-21 17:27:01 by rcaputo; MANIFEST 1.93; lib/POE/Kernel.pm 1.277;
  lib/POE/Loop/Event.pm 1.37; lib/POE/Loop/Gtk.pm 1.44;
  lib/POE/Loop/Poll.pm 1.30; lib/POE/Loop/Select.pm 1.56;
  lib/POE/Loop/TkCommon.pm 1.6; lib/POE/Resource/Events.pm 1.10;
  lib/POE/Resource/Statistics.pm 1.1; lib/POE/Resources.pm 1.6

    Renamed POE::Resource::Performance to POE::Resource::Statistics. The
    new form follows the POE::Resource::{plural thingy here} naming
    convention, and it opens the door for gathering statistics that may
    have nothing to do with performance. TRACE_PERFORMANCE has also been
    renamed TRACE_STATISTICS. 

  2004-01-21 06:48:25 by rcaputo; lib/POE/Wheel/Run.pm 1.57

    Apply Gerald Richter's fix to his earlier patch. This corrects
    Winsize behavior when STDIN isn't a TTY. 

  2004-01-21 06:27:46 by sungo; lib/POE/Filter/HTTPD.pm 1.31

    style nit pick. replace some random hard \t indents with the majority
    2 space indents 

  2004-01-21 05:28:15 by rcaputo
  lib/POE/Resource/SIDs.pm 1.9; lib/POE/Resource/Signals.pm 1.10

    Minor style changes as a result of adding (then removing) a first
    stab at mark-and-sweep garbage collection for sessions. Turns out
    it's not needed just yet. 

  2004-01-19 22:11:52 by rcaputo; lib/POE.pm 1.166

    I accidentally rewrote the documentation for this module. 

  2004-01-19 21:41:40 by rcaputo; lib/POE/Wheel/ReadLine.pm 1.31

    Hardcode some keystroke character sequences for a few common
    terminals, including the various DEC VT sequences. This should fix
    the input editing and history for most people. 

  2004-01-16 16:58:37 by rcaputo
  lib/POE/Resource/Events.pm 1.9; t/res/filehandles.t 1.6

    Commit Nick Williams' patches to add documentation and fix some of
    the numbers. I also moved the "blocked" checking into
    POE/Resource/Events so we can also calculate the average blocked
    time. 

  2004-01-16 16:44:27 by rcaputo; lib/POE/Kernel.pm 1.276

    Document run_one_timeslice(). 

  2004-01-16 03:46:03 by rcaputo; MANIFEST 1.92; lib/POE/Kernel.pm 1.275;
  lib/POE/Loop/Event.pm 1.36; lib/POE/Loop/Gtk.pm 1.43;
  lib/POE/Loop/Poll.pm 1.29; lib/POE/Loop/Select.pm 1.55;
  lib/POE/Loop/TkCommon.pm 1.5; lib/POE/Resources.pm 1.5;
  t/res/aliases.t 1.7; t/res/events.t 1.4; t/res/extrefs.t 1.8;
  t/res/filehandles.t 1.5

    Apply Nick Williams' POE::Resource::Performance class and the
    TRACE_PERFORMANCE hooks to enable runtime wallclock statistics. This
    may be extended to include CPU time inside POE::Kernel, within POE
    sessions, etc. It's still raw and experimental code; it does not
    fairly compare performance between different event loops yet. The
    various statistics have not been adequately defined, so we cannot
    verify their accuracy. The profiling code itself contributes to POE's
    overhead and may skew results against POE. Your mileage may vary.
    Small parts may present a choking hazard. Use only as directed. 

  2004-01-15 22:34:04 by rcaputo; lib/POE/Loop/Poll.pm 1.28

    Second attempt to define POLLRDBAND if it wasn't already. 

  2004-01-15 22:18:44 by rcaputo
  lib/POE/Component/Server/TCP.pm 1.44; lib/POE/Kernel.pm 1.274

    Meaningless style tweaks. 

  2004-01-15 22:17:46 by rcaputo; lib/POE/Loop/Poll.pm 1.27

    Define POLLRDBAND if it's not available. This occurs on MacOSX quite
    frequently. 

  2004-01-09 23:11:17 by rcaputo; lib/POE/Kernel.pm 1.273

    Apply Graham Barr's patch to REALLY disable SIGCHLD polling when
    running as an Apache handler. 

  2004-01-05 22:37:36 by rcaputo
  lib/POE/NFA.pm 1.28; lib/POE/Session.pm 1.97

    Wrap postbacks in unblessed, anonymous subs under Tk. Tk blesses its
    callbacks, which conflicts with our blessed postbacks. This works
    around the problem. 

  2004-01-05 22:36:46 by rcaputo; t/08_errors.t 1.51

    Quiet some spurious warnings generated by testing the errors that
    occur when loading mulitple event loops. 

  2004-01-04 06:14:06 by rcaputo; lib/POE/Wheel/ReadLine.pm 1.30

    Matt Cashner pointed out that ^D on an empty line should throw an
    exception. This commit adds the "eot" exception to do just that. 

  2003-12-20 19:40:02 by rcaputo; lib/POE/Kernel.pm 1.272

    While discussing libevent, I realized that a POE::XS::Loop::Libevent
    would not have a trigger module. There would be no IO::Poll-like
    module that causes POE::Kernel to autoload it. So this patch tweaks
    the loop autoloader to honor explicitly loaded event loops and not
    try to load the default select loop. 

  2003-12-18 15:37:00 by rcaputo; lib/POE/Session.pm 1.96

    Applied Alex Avriette's documentation patch. This mentions the return
    values from new() and create(). 

  2003-12-18 04:29:05 by rcaputo; lib/POE/Wheel/Run.pm 1.56

    Applied Gerald Richter's patch to allow setting the child process'
    window size if it's run in a pty. 

  2003-12-16 04:58:46 by rcaputo; lib/POE/Kernel.pm 1.271

    Improve error detection in the POE::XS::Loop loader. Add autoloading
    for POE::XS::Loop::Select. 

  2003-12-16 04:56:49 by rcaputo; lib/POE/Loop/Select.pm 1.54

    Reorder the timeout calculation to reduce latency in select(). 

  2003-12-16 04:55:42 by rcaputo; lib/POE/Resources.pm 1.4

    Support auto-loading POE::XS::Resource::Foo if it's available. Fall
    back to POE::Resource::Foo if the XS version isn't available or
    cannot load. 

  2003-12-13 05:37:29 by rcaputo; lib/POE/Kernel.pm 1.270;
  lib/POE/Resource/Sessions.pm 1.14; t/06_tk.t 1.45

    Event loops. Look for POE::XS::Loop::$something before
    POE::Loop::$something. It should be possible to include arbitrary
    event loops now (Gtk2, for example). Likewise, now people can start
    writing XS versions of event loops. 

  2003-12-12 04:05:06 by rcaputo; lib/POE/Kernel.pm 1.269;
  lib/POE/Loop/Event.pm 1.35; lib/POE/Loop/Gtk.pm 1.42;
  lib/POE/Loop/Poll.pm 1.26; lib/POE/Loop/Select.pm 1.53;
  lib/POE/Loop/Tk.pm 1.43; lib/POE/Loop/TkActiveState.pm 1.7;
  lib/POE/Loop/TkCommon.pm 1.4

    Remove the hardcoding for POE::Loop classes. Now POE::Kernel will
    walk %INC and compare each module against the files in ./Loop (where
    "." is wherever POE::Kernel is, according to __FILE__). 

  2003-12-11 18:06:21 by rcaputo; mylib/cvs-log.perl 1.5

    Add a (commented out) option to go back farther in time. What's
    really needed here is some sort of command-line flag. 

  2003-12-04 23:15:19 by rcaputo; lib/POE/Session.pm 1.95

    Applied a POD typo correction from Alex. 

  2003-11-28 17:12:08 by rcaputo
  lib/POE/Kernel.pm 1.268; t/01_sessions.t 1.26

    Applied Scott Beck's patch to add a hard POE::Kernel stop. 

  2003-11-26 03:52:07 by rcaputo; lib/POE/Component/Client/TCP.pm 1.39;
  lib/POE/Component/Server/TCP.pm 1.43; lib/POE/Driver/SysRW.pm 1.26;
  lib/POE/Kernel.pm 1.267; lib/POE/Loop/Poll.pm 1.25;
  lib/POE/Loop/Select.pm 1.52; lib/POE/Pipe.pm 1.12;
  lib/POE/Queue/Array.pm 1.5; lib/POE/Session.pm 1.94;
  lib/POE/Wheel/ListenAccept.pm 1.28; lib/POE/Wheel/SocketFactory.pm 1.74

    Replace POSIX errno constants with ones from Errno. The Errno module
    has better errno support than POSIX in "special" environments like
    ActivePerl. This commit addresses rt.cpan.org ticket #4476. 

  2003-11-22 17:45:10 by sungo; lib/POE/Loop/Gtk.pm 1.41

    change init_check to simply not initialize gtk a second+ time. not
    sure why init() is passing the second time but init_check() doesnt
    but whatever. 

  2003-11-22 16:13:07 by rcaputo
  lib/POE/NFA.pm 1.27; lib/POE/Resource/Sessions.pm 1.13

    Move the parent GC tests out of _data_ses_free and into
    _data_ses_stop. Currently the former is only called by the latter
    (and by POE::NFA, which seems to be erroneous anyway since no _parent
    and _child events happen there). 

  2003-11-22 15:32:06 by rcaputo; lib/POE/Loop/Gtk.pm 1.40

    Allow POE::Kernel->run() to be called multiple times in Gtk programs.
    Previously, Gtk->check_init() would return failure when called a
    second time, causing a couple of the tests to fail. This commit fixes
    rt.cpan.org ticket number 4459. 

  2003-11-22 05:05:10 by rcaputo; lib/POE/Resource/Extrefs.pm 1.9

    Deferring deletion of %kr_extra_refs items caused inconsistencies in
    the results from _data_extref_count(). I noticed it when
    Client::HTTP's tests stopped exiting on their own. Tracked it back to
    Client::DNS, reproduced it there, and used its test suite to verify
    the error back home in POE::Resource::Extrefs. Whee!

    Oh, right. This commit backs out that prior "optimization". 

  2003-11-22 04:55:27 by sungo; t/21_gtk.t 1.20

    remove spurious warn i stupidly left in 

  2003-11-22 04:54:31 by sungo; lib/POE/Loop/Gtk.pm 1.39; t/21_gtk.t 1.19

    add gtk initialization error checking. fix gtk test suite to skip the
    whole suite if gtk initialization fails. 

  2003-11-21 05:08:26 by rcaputo; lib/POE.pm 1.165;
  lib/POE/API/ResLoader.pm 1.3; lib/POE/Component.pm 1.6;
  lib/POE/Component/Client/TCP.pm 1.38;
  lib/POE/Component/Server/TCP.pm 1.42; lib/POE/Driver.pm 1.15;
  lib/POE/Driver/SysRW.pm 1.25; lib/POE/Filter.pm 1.13;
  lib/POE/Filter/Block.pm 1.12; lib/POE/Filter/Grep.pm 1.5;
  lib/POE/Filter/HTTPD.pm 1.30; lib/POE/Filter/Line.pm 1.24;
  lib/POE/Filter/Map.pm 1.5; lib/POE/Filter/RecordBlock.pm 1.4;
  lib/POE/Filter/Reference.pm 1.28; lib/POE/Filter/Stackable.pm 1.5;
  lib/POE/Filter/Stream.pm 1.12; lib/POE/Loop.pm 1.3;
  lib/POE/Loop/Event.pm 1.34; lib/POE/Loop/Gtk.pm 1.38;
  lib/POE/Loop/PerlSignals.pm 1.4; lib/POE/Loop/Poll.pm 1.24;
  lib/POE/Loop/Select.pm 1.51; lib/POE/Loop/Tk.pm 1.42;
  lib/POE/Loop/TkActiveState.pm 1.6; lib/POE/Loop/TkCommon.pm 1.3;
  lib/POE/Macro/UseBytes.pm 1.3; lib/POE/NFA.pm 1.26;
  lib/POE/Pipe.pm 1.11; lib/POE/Pipe/OneWay.pm 1.13;
  lib/POE/Pipe/TwoWay.pm 1.16; lib/POE/Preprocessor.pm 1.31;
  lib/POE/Queue.pm 1.3; lib/POE/Queue/Array.pm 1.4;
  lib/POE/Resource.pm 1.3; lib/POE/Resource/Aliases.pm 1.10;
  lib/POE/Resource/Events.pm 1.8; lib/POE/Resource/Extrefs.pm 1.8;
  lib/POE/Resource/FileHandles.pm 1.9; lib/POE/Resource/SIDs.pm 1.8;
  lib/POE/Resource/Sessions.pm 1.12; lib/POE/Resource/Signals.pm 1.9;
  lib/POE/Resources.pm 1.3; lib/POE/Session.pm 1.93;
  lib/POE/Wheel.pm 1.18; lib/POE/Wheel/Curses.pm 1.11;
  lib/POE/Wheel/FollowTail.pm 1.48; lib/POE/Wheel/ListenAccept.pm 1.27;
  lib/POE/Wheel/ReadLine.pm 1.29; lib/POE/Wheel/ReadWrite.pm 1.66;
  lib/POE/Wheel/Run.pm 1.55; lib/POE/Wheel/SocketFactory.pm 1.73

    Ok. So I'm braindead from staring into SOAP modules all day. I
    figured I'd do this one no-brainer just to say I accomplished
    something today. I replaced all the $VERSION strings with Dilithium
    Crystals. Let's see who notices. Bonus: No more retrograde releases,
    at least not after one last CPAN cataclysm. 

  2003-11-21 05:01:27 by rcaputo; lib/POE/Kernel.pm 1.266

    Exploratory commit of the new $VERSION code. 

  2003-11-20 19:21:57 by rcaputo
  lib/POE/Kernel.pm 1.265; lib/POE/Resource/Sessions.pm 1.11

    Reimplement _stop, mostly by moving the side effects out of
    _dispatch_event and into _data_ses_stop. This further shrinks
    _dispatch_event (some of POE's hottest code) and factors out more of
    the recursion and side effects that made it so difficult to work
    with. 

  2003-11-20 17:13:41 by rcaputo; lib/POE/Kernel.pm 1.264

    Nick Williams at Morgan Stanley reported that the new "Please mail
    the following information to...." message shows up even when _trap()
    is caught from within eval{}. This commit closes his rt.cpan.org
    ticket, number 4436. 

  2003-11-19 21:28:54 by rcaputo
  lib/POE/Wheel/ReadWrite.pm 1.65; lib/POE/Wheel/Run.pm 1.54

    Add shutdown_stdin() to POE::Wheel::Run. Refactor some code in
    POE::Wheel::ReadWrite. I have no idea why teh other files are being
    pulled into this commit; they have no changes listed in "cvs diff". 

  2003-11-13 18:28:47 by rcaputo; lib/POE/Resource/Aliases.pm 1.9;
  lib/POE/Resource/Events.pm 1.7; lib/POE/Resource/Extrefs.pm 1.7;
  lib/POE/Resource/FileHandles.pm 1.8; t/res/extrefs.t 1.7

    Move some delete() calls to the finalize stage of resource cleanup.
    Many of the session-keyed structures can linger until the session is
    destroyed. This saves tests in hotter code, which should show up as a
    minor performance boost. Hopefully no leaks are created here. 

  2003-11-13 17:08:00 by rcaputo
  MANIFEST 1.91; lib/POE/Kernel.pm 1.263; t/regress/neyuki-detach.t 1.1

    Neyuki discovered that detach_myself() was not working from _start,
    nor was it working at all. This commit fixes the latter problem, but
    detach_myself() from _start is not completely fixed. Turned the test
    case into a regression test, and started t/regress for these things. 

  2003-11-13 03:11:49 by rcaputo; lib/POE/Resource/Sessions.pm 1.10

    Add explanations to some of the _trap() calls, and comment on why we
    don't do garbage collection at what might otherwise be considered a
    good place for it. 

  2003-11-10 23:20:55 by rcaputo
  lib/POE/NFA.pm 1.25; lib/POE/Session.pm 1.92; t/01_sessions.t 1.25

    Applied Dan McCormicks's callback() patch. 

  2003-11-06 20:37:16 by rcaputo; lib/POE/Component/Server/TCP.pm 1.41

    Applied a patch from Eric (l2kashe) that lets you specify different
    input and output filters for client sessions at the outset. To be
    sure, you may still set different filters on $heap->{client}
    directly, but this avoids the extra step.

    Applied Damir Dzeko's patch to support UNIX sockets, but this is
    neither a documented nor permanent patch. A better solution will
    probably be to abstract most of Server::TCP into a base class and
    derive Server::TCP and Server::UNIX from it. 

  2003-11-06 20:34:07 by rcaputo; lib/POE/Component/Client/TCP.pm 1.37

    Re-establish aliases on reconnect. Nick Williams discovered that
    disconnect would clear aliases but reconnect wouldn't restore them. 

  2003-11-04 04:48:33 by rcaputo
  lib/POE/Kernel.pm 1.262; lib/POE/Session.pm 1.91

    Document TRACE_DESTROY, and modify it to use POE::Kernel::_warn() so
    it can be redirected somewhere other than STDERR. 

  2003-11-04 04:43:20 by rcaputo; lib/POE/Session.pm 1.90

    Make TRACE_DESTROY more useful. 

  2003-11-04 02:18:42 by rcaputo; lib/POE/Wheel/SocketFactory.pm 1.72

    "rmah" and "czth" reported that Solaris and some BSD variants define
    a SOMAXCONN that is much smaller than what they can really handle.
    Using SOMAXCONN as a hint and clipping the listen queue to it will
    hinder application scalability in some cases. I seem to recall it
    being put there because setting the listen queue too high breaks some
    systems. So it's commented out for now; we'll see who notices. 

  2003-11-02 05:10:29 by rcaputo
  lib/POE.pm 1.164; lib/POE/NFA.pm 1.24; lib/POE/Session.pm 1.89

    Propagate the POE::Kernel TRACE and ASSERT constants into any other
    package that is interested in them. This passes environment variables
    down into other packages. 

  2003-11-02 04:51:48 by rcaputo
  lib/POE/Kernel.pm 1.261; lib/POE/Session.pm 1.88

    Generalize POE's environment variable handling so you can specify
    arbitrary POE_foo. These override the constants previously defined.
    It's now possible to define asserts and traces not currently
    supported by POE::Kernel. More importantly, it means you can set
    POE_ASSERT_STATES for POE::Session (and possibly new things yet
    undetermined). Thanks to Nick Williams pointed out that
    POE_ASSERT_STATES wasn't supported. 

  2003-10-29 23:50:58 by rcaputo; lib/POE/Component/Client/TCP.pm 1.36;
  lib/POE/Component/Server/TCP.pm 1.40

    Various Disconnect callbacks weren't actually called when a remote
    end disconnected while the local end had output for it. This was a
    side effect of {Client,Server}::TCP's helpful flush-before-disconect
    code. Unfortunately, the components didn't account for the fact that
    the remote end might not be there. "Apocalypse" discovered this
    condition during load testing and was nice enough to track it down.
    Thanks!

    The other two files have whitespace changes. Darn CVS for wanting to
    commit them, but what can y'do? 

  2003-10-29 21:36:06 by rcaputo; lib/POE.pm 1.163

    Increase version to 0.2701, to indicate we're in between-release CVS
    mode. 

  2003-10-20 05:13:52 by rcaputo; lib/POE/Wheel/Run.pm 1.53

    Add another no-END/no-DESTROY method for terminating a child process. 

  2003-10-20 05:13:21 by rcaputo; lib/POE/Resource/Events.pm 1.6

    Note a logic error in the cleanup code. The error isn't damaging, but
    it does incur more overhead than necessary during session
    destruction. 

  2003-10-16 15:54:06 by rcaputo; lib/POE/Wheel/Run.pm 1.52

    Bline pointed out that kill(0) sent SIGTERM. Added a defined() to
    support kill(0), and documented the default. 

  2003-10-08 15:27:00 by rcaputo; lib/POE/Loop/Gtk.pm 1.37

    There are no Gnome equivalents for Gtk->main() and Gtk->main_quit(),
    so remove them. 

=========================
2003-09-27 05:37:28 v0_27
=========================

  2003-09-27 05:37:28 by rcaputo; README 1.105; lib/POE.pm 1.162

    Prepare for 0.27 release. 

  2003-09-16 19:49:43 by rcaputo; lib/POE/Wheel/ReadLine.pm 1.28

    Supply a B38400 symbol if the local version of POSIX.pm won't. 

  2003-09-16 14:58:48 by rcaputo; lib/POE/Loop/Poll.pm 1.23

    Replace _confess with _trap to increase some error severities. 

  2003-09-16 14:58:14 by rcaputo
  lib/POE/Loop/Select.pm 1.50; lib/POE/Loop/TkActiveState.pm 1.5

    Replace _confess calls with _trap calls to increase the severity of
    some errors. 

  2003-09-16 14:53:40 by rcaputo; lib/POE/Kernel.pm 1.260;
  lib/POE/Resource/Aliases.pm 1.8; lib/POE/Resource/Events.pm 1.5;
  lib/POE/Resource/Extrefs.pm 1.6; lib/POE/Resource/FileHandles.pm 1.7;
  lib/POE/Resource/SIDs.pm 1.7; lib/POE/Resource/Sessions.pm 1.9

    Add POE::Kernel::_trap for errors internal to POE's core. This is a
    "kernel trap" level of error reporting. Replace many of the _confess
    calls with _trap calls throughout POE's core modules. Wrap many of
    the internal consistency checks in ASSERT_DATA blocks so they are
    only executed during testing. 

  2003-09-16 14:51:18 by rcaputo; lib/POE/Resources.pm 1.2

    Rethrow any errors caught in POE::Resource modules. 

  2003-09-16 14:50:12 by rcaputo; lib/POE/Component/Client/TCP.pm 1.35;
  lib/POE/Component/Server/TCP.pm 1.39; lib/POE/Driver/SysRW.pm 1.24

    Increase default block sizes to 65536. This improves performance in
    high-throughput applications at the expense of some memory. 

  2003-09-16 14:48:26 by rcaputo; lib/POE/Wheel/ReadWrite.pm 1.64

    Properly set the high watermark state when put() exceeds it. Also
    avoid redundant calls to select_write(). 

  2003-09-15 20:26:52 by rcaputo; lib/POE/Filter/HTTPD.pm 1.29

    Include the tilde (~) as part of the legal character class for HTTP
    header names, per RFC 2616. Thanks to Fabrice Dulaunoy for
    discovering this and especially for suggesting how to fix it. 

  2003-09-15 04:51:37 by rcaputo; lib/POE/Kernel.pm 1.259

    Add a stub for Gtk2 support. Need a way that eliminates POE::Kernel
    hacking for each event loop we want to support. 

  2003-09-10 23:30:40 by rcaputo; lib/POE/Wheel/Run.pm 1.51

    Andrew Chen pointed out that the -9 signal doesn't work. Corrected it
    to 9 in the docs. 

  2003-09-01 04:16:35 by rcaputo; samples/readline.perl 1.5

    James March's "UNIX Clients" recipe uses POE::Wheel::Readline. 

  2003-08-31 02:43:10 by sungo; Build.PL 1.1; MANIFEST 1.90

    add META.yml to make activestate automated ppd building happy again.
    add Build.PL i used to make the meta file 

  2003-08-31 02:07:50 by rcaputo; mylib/Makefile-5005.pm 1.32

    Avoid ExtUtil::AutoInstall prompts if STDIN isn't a terminal. Bypass
    the prompts by assuming --default behavior. 

  2003-08-27 01:52:24 by rcaputo; lib/POE/Wheel/Run.pm 1.50

    Dorian suggested moving the setgid code before the setuid code, so
    that changing from root -> not-root won't disallow changing the group
    ID. It made sense, thus this patch. 

  2003-08-27 01:50:48 by rcaputo; lib/POE/Wheel/ReadLine.pm 1.27

    Reformatted a line to be less than 80 columns. 

  2003-08-10 19:48:18 by rcaputo; lib/POE/Wheel/FollowTail.pm 1.47

    Move the size-saving code so that it always moves the current size to
    the last one. This should detect file shrinkage better. 

  2003-08-10 19:14:45 by rcaputo; lib/POE/Wheel/FollowTail.pm 1.46

    Perform a proper fix for the file size shrinkage. Rather than reopen
    the file unconditionally, seek back to the start of it. 

  2003-08-10 18:59:55 by rcaputo; lib/POE/Wheel/FollowTail.pm 1.45

    Azhrarn discovered that Linux only reports file shrinkage (nothing
    else) when a file is reset by `cat > file` and pressing ^D. This
    patch treats only file shrinkage as reset. 

  2003-08-07 20:20:44 by rcaputo; lib/POE/Loop/Select.pm 1.49

    Minor syntax cleanups as a result of trying (and failing) to
    determine the magnitude of arbitrary system clock shifts. 

  2003-07-29 00:25:28 by rcaputo; lib/POE/Component/Client/TCP.pm 1.34;
  lib/POE/Component/Server/TCP.pm 1.38

    Silence the "connection reset by peer" errors, which indicate that a
    client has unceremoniously disconnected. To reiterate: These errors
    only occur in the default ClientError callback. Custom callbacks
    still receive notification of the errors and can handle them any way
    they see fit. 

  2003-07-28 05:14:14 by rcaputo; lib/POE/Kernel.pm 1.258;
  lib/POE/Queue.pm 1.2; lib/POE/Queue/Array.pm 1.3; t/001_queue.t 1.5

    After many requests, I have finally added delay_adjust(). This resets
    a specific timer (as set with delay_set) to be a new number of
    seconds into the future. This is good for watchdogs and timeouts. 

  2003-07-27 18:29:54 by rcaputo; lib/POE/Component/Client/TCP.pm 1.33;
  lib/POE/Component/Server/TCP.pm 1.37

    Carl suggested that the TCP client and server not report "error 0"
    (normall disconnection) by default. He's the last in a long line of
    people to do so. "When three people tell you you're sick, lie down."
    The error message is removed in this patch. 

  2003-07-18 22:47:44 by rcaputo; lib/POE/Wheel/Run.pm 1.49

    jdeluise suggested that we document how to scrub a child process'
    shell environment before executing external programs. This patch adds
    that information. 

  2003-07-17 19:25:51 by rcaputo; lib/POE/Wheel/Run.pm 1.48

    Apply Leif Gustafson's patch to pass conduit types on to
    POE::Pipe::TwoWay. 

  2003-07-17 18:25:03 by rcaputo
  lib/POE/Pipe/OneWay.pm 1.12; lib/POE/Pipe/TwoWay.pm 1.15

    Fixed a subtle bug in the new pipe selection code. 

  2003-07-16 17:00:25 by rcaputo; lib/POE/Pipe.pm 1.10;
  lib/POE/Pipe/OneWay.pm 1.11; lib/POE/Pipe/TwoWay.pm 1.14

    Leif Gustafson discovered a nasty little bug in POE::Pipe::TwoWay
    that was triggered by the recent changes to POE::Wheel::Run... but
    only on cygwin! What a nasty confluence of circumstance. Thank you,
    Leif. This patch should help that a lot, and it finally cleans up the
    really messy RUNNING_IN_HELL stuff in the pipe classes. 

  2003-07-16 06:34:46 by rcaputo; lib/POE.pm 1.161

    Applied Rich Morin's documentation edits. 

  2003-07-15 14:58:21 by rcaputo
  lib/POE/Kernel.pm 1.257; lib/POE/Loop/Gtk.pm 1.36

    Merge in Bruno Boettcher's Gnome.pm as part of Gtk.pm since they're
    very closely related and with a few exceptions identical. 

  2003-07-14 14:41:03 by rcaputo
  lib/POE/Pipe/TwoWay.pm 1.13; lib/POE/Wheel/Run.pm 1.47

    jdeluise discovered a longstanding bug in cygwin's socketpair and/or
    exec implemenation. This caused POE::Wheel::Run tests to fail on that
    platform. This patch causes the wheel to use pipe, which works,
    instead. 

  2003-07-13 16:39:40 by rcaputo
  lib/POE/Wheel/FollowTail.pm 1.44; t/14_wheels_ft.t 1.14

    Applied a modified version of jrieks' Seek patch. This lets you seek
    forwards from the start of a file. Negative Seek does the same as
    SeekBack, and negative SeekBack does the same as Seek. It's not
    tested, though: TODO add seek/seekback tests to t/14_wheels_ft.t 

  2003-07-13 04:24:33 by rcaputo
  lib/POE/Loop/Poll.pm 1.22; lib/POE/Loop/Select.pm 1.48

    Remove the dependency on $^T and the assumption that it will never
    change. This is only an issue during tracing. 

  2003-07-11 15:39:47 by rcaputo; lib/POE/Loop/Gtk.pm 1.35

    Bruno Boettcher discovered the Gtk event loop didn't work with the
    Gnome abstraction. A quick change fixed that. 

  2003-07-10 20:17:31 by rcaputo
  t/02_alarms.t 1.15; t/08_errors.t 1.50; t/res/filehandles.t 1.4

    The tests had some timing issues that only show up on the 486. This
    commit makes the tests less timing-sensitive. 

  2003-07-10 04:55:11 by rcaputo; lib/POE/Kernel.pm 1.256

    Correct localized STDERR for Perl 5.8.0. 

  2003-07-10 04:14:58 by rcaputo; lib/POE/Kernel.pm 1.255

    Nick discovered that sessions sometimes aren't garbage collected when
    using call() to invoke their states, and he provided a tidy test case
    to prove it. Thank you, Nick! Once I understood the problem, it was
    easy enough to track it down and solve. Called sessions are GC'd now
    if they aren't the same as the calling sessions. Callers will get GC
    tested if they are the same (because they've been posted to some time
    up the chain). 

  2003-07-09 18:20:41 by rcaputo; lib/POE/Kernel.pm 1.254;
  lib/POE/Loop/Event.pm 1.33; lib/POE/Loop/Gtk.pm 1.34;
  lib/POE/Loop/PerlSignals.pm 1.3; lib/POE/Loop/Poll.pm 1.21;
  lib/POE/Loop/Select.pm 1.47; lib/POE/Loop/TkActiveState.pm 1.4;
  lib/POE/Loop/TkCommon.pm 1.2; lib/POE/NFA.pm 1.23;
  lib/POE/Resource/Aliases.pm 1.7; lib/POE/Resource/Events.pm 1.4;
  lib/POE/Resource/Extrefs.pm 1.5; lib/POE/Resource/FileHandles.pm 1.6;
  lib/POE/Resource/SIDs.pm 1.6; lib/POE/Resource/Sessions.pm 1.8;
  lib/POE/Resource/Signals.pm 1.8; lib/POE/Session.pm 1.87;
  t/001_queue.t 1.4; t/00_coverage.t 1.19; t/01_sessions.t 1.24;
  t/02_alarms.t 1.14; t/03_aliases.t 1.14; t/04_selects.t 1.19;
  t/05_macros.t 1.8; t/06_tk.t 1.44; t/07_event.t 1.18;
  t/08_errors.t 1.49; t/09_wheels_unix.t 1.16; t/10_wheels_tcp.t 1.15;
  t/11_signals_poe.t 1.26; t/12_signals_ev.t 1.19; t/13_wheels_udp.t 1.6;
  t/14_wheels_ft.t 1.13; t/15_filter_block.t 1.6;
  t/16_filter_stream.t 1.5; t/17_filter_ref.t 1.8;
  t/18_filter_line.t 1.9; t/19_filterchange.t 1.13; t/20_accept.t 1.7;
  t/21_gtk.t 1.18; t/22_wheel_run.t 1.33; t/23_nfa.t 1.8;
  t/24_filter_stack.t 1.5; t/25_detach.t 1.6; t/26_comp_tcp.t 1.5;
  t/27_poll.t 1.8; t/28_windows.t 1.7; t/29_sockfact6.t 1.11;
  t/res/aliases.t 1.6; t/res/events.t 1.3; t/res/extrefs.t 1.6;
  t/res/filehandles.t 1.3; t/res/sessions.t 1.4; t/res/sids.t 1.3;
  t/res/signals.t 1.3

    Allow internal traces to be shunted to a file without using STDERR.
    This lets applications' (and tests') errors shine through while
    logging POE's internal traces somewhere else. To be sure, the default
    behavior of dumping everything to STDERR still exists. 

  2003-07-09 04:25:09 by rcaputo; lib/POE/Wheel/ReadWrite.pm 1.63

    Avi Finkel noticed a lack of a POE::Wheel::Write, or a write-only
    wheel. He's writing files over NFS, so a non-blocking solution helps
    in his case. I documented the little-known fact that ReadWrite
    doesn't try to read if InputEvent isn't defined. 

  2003-07-08 13:36:59 by rcaputo; t/res/extrefs.t 1.5

    Fix a test which was invalidated by the change in Resource::Extrefs. 

  2003-07-08 00:33:08 by rcaputo; t/06_tk.t 1.43

    So apparently the reason ActiveState hasn't been building
    distributions of POE is because of unreported errors in the install
    process. The latest--and only--problem is a Tk test failure because
    there's a DISPLAY environment variable pointing to an unreachable X
    server. This patch skips Tk testing if the X server is unreachable,
    so--fingers crossed--we should see proper PPDs built out of POE
    starting with 0.27. 

  2003-07-06 18:46:07 by rcaputo
  lib/POE/Kernel.pm 1.253; lib/POE/Resource/Extrefs.pm 1.4

    Bruno Boettcher discovered an obscure, yet hideously fatal bug in
    POE's cross-checking code. The code in ASSERT_REFCNT that
    cross-checks a calculated reference count against the stored ones
    does not count references properly, causing a test failure. The test
    itself was broken and is fixed now. 

  2003-07-05 21:04:56 by rcaputo; lib/POE/Resource/Events.pm 1.3;
  lib/POE/Resource/Sessions.pm 1.7; lib/POE/Session.pm 1.86

    Clean up some code structure. Nothing gets fixed. 

  2003-07-05 21:03:56 by rcaputo; lib/POE/Kernel.pm 1.252

    Fixed a documentation typo. 

  2003-07-03 16:34:57 by rcaputo; lib/POE/Filter/Line.pm 1.23

    Clear up some error messages while documenting them. 

  2003-07-03 16:26:50 by rcaputo; lib/POE/Kernel.pm 1.251

    Bruno Boettcher was banging his head on an ASSERT_USAGE message that
    wasn't very helpful. It turns out to have been a bad parameter line
    in _explain_usage(), which is fixed by this patch. 

  2003-06-26 15:33:10 by rcaputo; lib/POE/Loop/Gtk.pm 1.33

    "kaffee" reported warnings in loop_attach_uidestroy(). He suggested
    returning 0 instead of undef from the UIDESTROY callback, which this
    patch does. 

  2003-06-22 05:37:34 by rcaputo; lib/POE/Loop/TkActiveState.pm 1.3

    Remove a bare debugging warn. 

  2003-06-19 20:06:00 by rcaputo; mylib/ExtUtils/AutoInstall.pm 1.4

    Assimilate the latest (0.52) version of ExtUtils::AutoInstall. This
    should fix the "instaldeps" part of POE's installer. 

  2003-06-09 19:18:27 by rcaputo; lib/POE/Kernel.pm 1.250;
  lib/POE/Loop/TkActiveState.pm 1.2; t/08_errors.t 1.48

    Debugged the initial ActiveState Tk support on a real live Windows
    machine. This commit fixes lots of little things and gets the tests
    working on Windows and UNIX. 

  2003-06-09 17:31:05 by rcaputo
  lib/POE/Loop/TkActiveState.pm 1.1; lib/POE/Loop/TkCommon.pm 1.1

    Of course we can't really begin to support ActivePerl+Tk without the
    files themselves. So. 

  2003-06-09 17:28:22 by rcaputo; MANIFEST 1.89;
  lib/POE/Loop/PerlSignals.pm 1.2; lib/POE/Loop/Select.pm 1.46;
  lib/POE/Loop/Tk.pm 1.41; t/06_tk.t 1.42; t/08_errors.t 1.47

    Support Tk under ActivePerl by polling for socket activity every 1/10
    second. This is ugly. It's inefficient. And it's the only known way
    to make things work at this time. Bleah. 

  2003-06-09 16:02:41 by rcaputo; lib/POE.pm 1.160

    Aw, heck. I forgot to update this to a development version. 

  2003-06-09 15:37:47 by rcaputo; MANIFEST 1.88

    Forgot to add the new file in my previous commit. 

  2003-06-09 15:36:27 by rcaputo; lib/POE/Kernel.pm 1.249;
  lib/POE/Loop/Gtk.pm 1.32; lib/POE/Loop/PerlSignals.pm 1.1;
  lib/POE/Loop/Poll.pm 1.20; lib/POE/Loop/Select.pm 1.45;
  lib/POE/Loop/Tk.pm 1.40; t/08_errors.t 1.46

    Moved the plain-Perl signal handling code into
    POE::Loop::PerlSignals. This code was common to the Gtk, Poll,
    Select, and Tk event loops. 

  2003-06-05 18:09:40 by rcaputo; lib/POE/Component/Client/TCP.pm 1.32;
  lib/POE/Component/Server/TCP.pm 1.36

    Matt Harrington pointed out that Client:: and Server::TCP did not
    auto-use the filter classes they're given. I noticed that this aspect
    of those components was not documented, so now it's rather clear that
    you must "use" the classes yourself. 

  2003-06-03 21:40:25 by sungo
  lib/POE/Resource/Sessions.pm 1.6; lib/POE/Resource/Signals.pm 1.7

    move two initializeii to preload. we need to formalize names here.
    did this to avoid redefine warnings 

  2003-06-03 18:55:06 by sungo; lib/POE/Resource/FileHandles.pm 1.5

    add the kr_filenos hash back into the kernel in the documented stop.
    violate the naming convention a little bit to avoid trampling the
    preexisting initialization routine 

  2003-06-03 18:04:42 by sungo
  lib/POE/Kernel.pm 1.248; lib/POE/Resource/SIDs.pm 1.5

    add a ref to sid_seq into the kernel in the documented spot 

  2003-06-03 17:39:49 by rcaputo
  mylib/Makefile-5004.pm 1.15; mylib/Makefile-5005.pm 1.31

    Add some of our test results files to the ones that get unlinked on
    "make clean". Thanks to sungo for pointing this out. 

  2003-06-03 17:37:52 by sungo; lib/POE/Kernel.pm 1.247

    KR_QUEUE was a ref to ref. now is just a ref :) 

  2003-06-03 17:34:46 by rcaputo; lib/POE/Resource/Aliases.pm 1.6;
  lib/POE/Resource/SIDs.pm 1.4; lib/POE/Resource/Signals.pm 1.6

    Update initializers to reflect the current naming conventions. 

  2003-06-03 17:34:34 by sungo; lib/POE/Kernel.pm 1.246

    update the location of things in some comments. 

  2003-06-03 16:31:17 by rcaputo; MANIFEST.SKIP 1.6

    Add new junk files, sort, and generally tidy up. 

  2003-06-03 15:55:24 by sungo; lib/POE/Resource/SIDs.pm 1.3

    put session_ids hash back into the kernel in the documented spot 

  2003-06-03 15:28:52 by sungo; lib/POE/Resource/Aliases.pm 1.5

    load the aliases hash into the kernel in the documented spot 

  2003-06-03 15:24:08 by sungo; lib/POE/Resource/Signals.pm 1.5

    load signals hash back into the kernel 

  2003-06-03 04:55:28 by rcaputo; mylib/coverage.perl 1.8

    Ignore several things that falsely show up as uninstrumented code.
    The true value that all modules must end with. C<use> statements.
    Constant sub definitions. $VERSION definitions. 

  2003-06-03 04:53:47 by rcaputo; mylib/Devel/Trace.pm 1.8

    Remove the code that blockes signals while tracking runtime
    statistics. The signal masking was causing signal tests to hang, and
    removing it didn't break anything. 

  2003-06-03 04:42:01 by rcaputo; lib/POE/NFA.pm 1.22

    Some TRACE_FOO output was sent to STDOUT. Replace print() with warn()
    to send it to STDERR instead. 

  2003-06-03 03:29:51 by rcaputo; t/001_queue.t 1.3;
  t/00_coverage.t 1.18; t/01_sessions.t 1.23; t/02_alarms.t 1.13;
  t/03_aliases.t 1.13; t/04_selects.t 1.18; t/05_macros.t 1.7;
  t/06_tk.t 1.41; t/07_event.t 1.17; t/08_errors.t 1.45;
  t/09_wheels_unix.t 1.15; t/10_wheels_tcp.t 1.14;
  t/11_signals_poe.t 1.25; t/12_signals_ev.t 1.18; t/13_wheels_udp.t 1.5;
  t/14_wheels_ft.t 1.12; t/15_filter_block.t 1.5;
  t/16_filter_stream.t 1.4; t/17_filter_ref.t 1.7;
  t/18_filter_line.t 1.8; t/19_filterchange.t 1.12; t/20_accept.t 1.6;
  t/21_gtk.t 1.17; t/22_wheel_run.t 1.32; t/23_nfa.t 1.7;
  t/24_filter_stack.t 1.4; t/25_detach.t 1.5; t/26_comp_tcp.t 1.4;
  t/27_poll.t 1.7; t/28_windows.t 1.6; t/29_sockfact6.t 1.10;
  t/res/aliases.t 1.5; t/res/events.t 1.2; t/res/extrefs.t 1.4;
  t/res/filehandles.t 1.2; t/res/sessions.t 1.3; t/res/sids.t 1.2;
  t/res/signals.t 1.2

    Enable TRACE_DEFAULT, and direct STDERR to a file so the tests remain
    quiet. 

  2003-06-03 02:39:41 by rcaputo; MANIFEST 1.87; t/res/filehandles.t 1.1

    Add t/res/filehandles.t (200-ish new tests! gods, that was tedious). 

  2003-06-03 02:37:27 by rcaputo; lib/POE/Resource/FileHandles.pm 1.4

    Add accessors so that tests can verify the subsystem's internal
    state. Perhaps instead of this, we should write a function that
    cross-checks everything inside and returns a good/bad value. That way
    we won't need to break encapsulation for testing. 

  2003-06-02 20:21:01 by rcaputo; lib/POE/Resource/FileHandles.pm 1.3

    Added the finalized-ok flag and return value for testing. Corrected a
    bug (misunderstood data structure) in _data_handle_finalize(), and
    documented the proper structure in comments. 

  2003-06-02 18:52:49 by sungo; lib/POE/Kernel.pm 1.245

    add some comments about where resources are and maybe should be
    loaded from 

  2003-06-02 08:44:27 by rcaputo; MANIFEST 1.86; t/res/signals.t 1.1

    Add another sixty or so tests. :) 

  2003-06-02 08:43:29 by rcaputo; t/res/sessions.t 1.2

    Removed some junk comments. 

  2003-06-02 08:43:08 by rcaputo; lib/POE/Resource/Signals.pm 1.4

    Add some internals accessors so the tests can get at necessary
    values. Had to rename an existing function because a new one seemed
    to fit the name better. 

  2003-06-02 08:41:28 by rcaputo; lib/POE/Kernel.pm 1.244

    Migrate a function call to the outside of a loop. That might cut down
    the number of function calls in hot loops, and as such seems like a
    good optimization technique. 

  2003-06-02 06:51:10 by rcaputo; lib/POE/Resource/Signals.pm 1.3

    Added the finalized-ok return value to _data_sig_finalize().
    Corrected a bug in _data_sig_watchers() that was found while writing
    tests. It would only return one watcher no matter what; now it
    returns all of the watchers for a signal. 

  2003-06-02 05:54:05 by rcaputo; MANIFEST 1.85; t/res/sessions.t 1.1

    Add the tests for POE::Resource::Sessions. 

  2003-06-02 03:02:44 by rcaputo; lib/POE/Resource/Sessions.pm 1.5

    Add the finalized-ok return value to _data_ses_finalize, so we can
    test that the final state of the subsystem is consistent. 

  2003-06-01 22:38:31 by rcaputo; lib/POE/Resource/Sessions.pm 1.4

    Rename the initialize function _data_ses_initialize to follow the
    current naming convention. 

  2003-06-01 03:05:06 by rcaputo; MANIFEST 1.84; t/res/events.t 1.1

    Added the detailed tests for POE::Resource::Events. 

  2003-06-01 02:56:22 by rcaputo; lib/POE/Resource/Events.pm 1.2

    Added the finalized-ok return value to _data_ev_finalize. Added some
    comments with general observations during test writing. 

  2003-05-31 21:07:11 by sungo; lib/POE/API/ResLoader.pm 1.2

    add documentation and $VERSION to POE::API::ResLoader. also remove
    unnececessary use of Kernel in same module 

  2003-05-31 20:52:54 by sungo; MANIFEST 1.83

    update the manifest with the new files 

  2003-05-31 20:50:47 by sungo; MANIFEST.SKIP 1.5

    avoid the docs/ tree 

  2003-05-31 20:41:58 by sungo; MANIFEST.SKIP 1.4

    add lots more needed things to manifest.skip 

  2003-05-31 20:34:34 by sungo; lib/POE/API/ResLoader.pm 1.1;
  lib/POE/Kernel.pm 1.243; lib/POE/Resource/FileHandles.pm 1.2;
  lib/POE/Resource/Sessions.pm 1.3; lib/POE/Resources.pm 1.1

    add POE::Resources as a place holder until some Kernel internals get
    cleaned up ala resource loading. add POE::API::ResLoader which allows
    POE::Resources a standard initialization method and the ability to
    add custom resources to the kernel. clarify the select() call in
    FileHandles.pm to prevent ambiguitity with the select() in Kerne.pl.
    Fix sessions so they load their resources into the kernel in the
    original and documented spot 

  2003-05-31 18:32:18 by rcaputo
  lib/POE/Resource/SIDs.pm 1.2; t/res/sids.t 1.1

    Add tests for session ID management. 

  2003-05-31 18:18:05 by rcaputo; lib/POE/Resource.pm 1.2;
  lib/POE/Resource/Aliases.pm 1.4; lib/POE/Resource/Extrefs.pm 1.3;
  t/res/aliases.t 1.4; t/res/extrefs.t 1.3

    Remove the previous testing-only accessors from Aliases.pm. Instead,
    standardize on _data_???_finalize returning true if a resource shut
    down cleanly, or false if there were inconsistencies or leaks.
    Document this design decision in POE::Resource. 

  2003-05-31 18:11:21 by rcaputo
  lib/POE/Resource/Aliases.pm 1.3; t/res/aliases.t 1.3

    Add accessors to POE::Resource::Aliases so we can test the module's
    final state. Use the new accessors to test the module's final state
    in a way that causes "make test" to fail. _data_alias_finalize() does
    not do that for us. 

  2003-05-31 17:57:53 by rcaputo; t/res/extrefs.t 1.2

    Make sure that sessions' master reference counts properly reflect the
    status of their extra reference counts. Just more cross-examination. 

  2003-05-31 17:43:32 by rcaputo; t/res/aliases.t 1.2

    Aliases also affect sessions' master reference counts. Add tests to
    make sure those counts are correct. 

  2003-05-31 17:40:18 by rcaputo; lib/POE/Resource/Sessions.pm 1.2

    Added an accessor to get at a session's reference count without
    altering it. This lets us test it against known values in the other
    resource tests. 

  2003-05-31 12:18:01 by rcaputo; MANIFEST 1.82; lib/POE/Resource.pm 1.1;
  t/res/aliases.t 1.1; t/res/extrefs.t 1.1

    Add Resource.pm to document what we know so far about POE::Resource
    classes. Add new, detailed tests for some of the resources. 

  2003-05-31 11:52:04 by rcaputo
  lib/POE/Resource/Aliases.pm 1.2; lib/POE/Resource/Extrefs.pm 1.2

    Comment observations made while writing new tests. 

  2003-05-31 11:48:42 by rcaputo
  mylib/Makefile-5004.pm 1.14; mylib/Makefile-5005.pm 1.30

    Expand the tests to include one-level subdirectories. 

  2003-05-30 19:35:56 by sungo
  mylib/Makefile-5004.pm 1.13; mylib/Makefile-5005.pm 1.29

    remove poe_report.xml in make clean/realclean 

  2003-05-20 22:20:19 by rcaputo
  MANIFEST.SKIP 1.3; lib/POE/NFA.pm 1.21; lib/POE/Session.pm 1.85

    Clear up some of the terminology in the session warnings/errors. 

  2003-05-20 19:13:07 by rcaputo; MANIFEST.SKIP 1.2;
  lib/POE/Kernel.pm 1.242; lib/POE/NFA.pm 1.20;
  lib/POE/Resource/Signals.pm 1.2; lib/POE/Session.pm 1.84

    Upgrade the mandatory signal deprecation warnings to errors.
    Originally scheduled for January 2003. 

  2003-05-13 03:42:19 by rcaputo; MANIFEST 1.81; lib/POE/Kernel.pm 1.241;
  lib/POE/Resource/Aliases.pm 1.1; lib/POE/Resource/Events.pm 1.1;
  lib/POE/Resource/Extrefs.pm 1.1; lib/POE/Resource/FileHandles.pm 1.1;
  lib/POE/Resource/SIDs.pm 1.1; lib/POE/Resource/Sessions.pm 1.1;
  lib/POE/Resource/Signals.pm 1.1

    Split out the "resource" functions from POE::Kernel. The major data
    structures within POE::Kernel have been broken into subsystems and
    moved, along with their accessors, into POE::Resource::*.pm files.
    Each handles the lowest-level data management functions for its
    resource type. This is a step towards implementing XS versions of
    some of POE's hottest code, which will go a long way towards speeding
    things up in the future. 

  2003-05-13 03:29:03 by rcaputo; t/29_sockfact6.t 1.9

    Typographical change in a status warning. No big deal. 

=========================
2003-05-10 17:20:21 v0_26
=========================

  2003-05-10 17:20:21 by rcaputo; README 1.104; lib/POE.pm 1.159

    Increase the version number to 0.26 for release. Revise the README
    for clarity, conciseness, etc. 

  2003-05-08 22:54:43 by rcaputo; t/29_sockfact6.t 1.8

    Add a warning to explain the most likely cause of this module
    hanging. Thanks to Somni for reminding me of the problem. 

  2003-05-04 04:35:59 by rcaputo; lib/POE.pm 1.158

    Increase version from 0.2502 (first release candidate for 0.26) to
    0.2503 (live CVS for any last minute bug fixes before 0.26). 

  2003-05-04 04:33:37 by rcaputo; lib/POE.pm 1.157

    Increasing the version from 0.2501 (CVS after 0.25) to 0.2502 (first
    release candidate for 0.26). 

  2003-05-03 01:46:16 by rcaputo; lib/POE/Wheel/SocketFactory.pm 1.71

    A previous patch to shutdown client sockets before they had closed
    used $self in closures which themselves were stored in $self,
    resulting in circular references that would prevent the patch from
    actually working. This patch goes through some gyrations to break
    those circular references. 

  2003-05-02 12:55:23 by rcaputo; mylib/Makefile-5005.pm 1.28

    Require ExtUtils::AutoInstall version 0.50. 

  2003-05-02 12:48:14 by rcaputo; mylib/Makefile-5005.pm 1.27

    Add ExtUtils::AutoInstall's postamble() so the automatic installation
    things work. 

  2003-05-02 12:36:20 by rcaputo; lib/POE/Wheel/ReadWrite.pm 1.62

    Added the ability to shutdown() input/output on a ReadWrite wheel
    attached to a socket. Thanks to Peter Chen for suggesting it. 

  2003-04-29 22:18:31 by rcaputo; lib/POE/Kernel.pm 1.240

    Applied Nick Williams' patch to avoid internal inconsistency problems
    with signals use:

    > When using the kernel's signal() method to send a user-defined >
    signal, it's possible to get a signal dispatched to a session which >
    is in the process of shutting down (i.e. about to call the _stop >
    event). However, the garbage collection in >
    _data_sig_free_terminated_sessions doesn't take this into account >
    and can cause POE to die screaming with an internal inconsistency >
    error in _data_ses_collect_garbage. 

  2003-04-29 15:52:59 by rcaputo
  lib/POE/Kernel.pm 1.239; lib/POE/NFA.pm 1.19; t/23_nfa.t 1.6

    Fix POE::NFA's stop() method. Previously it was using POE::Kernel's
    session_free() method, which was recently renamed. 

  2003-04-21 14:54:36 by rcaputo; lib/POE/Kernel.pm 1.238

    Work around the persistent double-GC problem by avoiding a second GC
    on a defunct session. 

  2003-04-08 01:01:44 by rcaputo; lib/POE/Kernel.pm 1.237

    Applied Brandon Beamer's POD patch for $poe_main_window when using Tk
    with POE. 

  2003-04-07 06:19:28 by rcaputo; mylib/ExtUtils/AutoInstall.pm 1.3

    Update to version 0.50. 

  2003-04-07 04:22:02 by rcaputo; lib/POE/Wheel/SocketFactory.pm 1.70

    Fixed a leak discovered by dynweb. In client mode, SocketFactory
    would did release its grip on the socket until destroyed. He found
    the leak in a program that passed the socket to
    $kernel->select_read() without destroying the SocketFactory. 

  2003-04-05 06:45:37 by rcaputo; t/08_errors.t 1.44

    Commit Alan Hastings' more proper patch for Cygwin support. 

  2003-04-03 04:01:56 by rcaputo; lib/POE/Wheel/Run.pm 1.46

    Apply Alan Hastings' Cygwin support patch. 

  2003-04-03 04:00:47 by rcaputo; lib/POE/Wheel/SocketFactory.pm 1.69

    Patch the documentation for the Reuse parameter. Also support another
    reasonable alternative. It might be best, however, to trust the user
    to supply a proper Perl boolean value. 

  2003-03-24 16:48:58 by rcaputo
  lib/POE/Wheel/Run.pm 1.45; t/22_wheel_run.t 1.31

    Applied and documented Dmitri Tikhonov's patch for the ProgramArgs
    feature. This lets master programs specify parameters for
    code/programs that are forked off, avoiding closures and the possible
    memory leaks created by them. The tests were extended to exercise the
    new feature. 

  2003-03-24 16:46:32 by rcaputo; mylib/cvs-log.perl 1.4

    It seems impossible to avoid duplicate tags (identical timestamp) for
    the initial import of a source tree into CVS. The usual convention is
    to tag the first import as "start", so we ignore any other tags that
    coincide with that. 

  2003-03-16 07:46:10 by rcaputo; t/28_windows.t 1.5

    The two-second timeout was too slow for the 486 I'm using to test
    Windows NT. Increased the timeout to five seconds so that the test
    doesn't trigger false failures on slow machines. 

  2003-03-05 17:22:23 by rcaputo; lib/POE/Kernel.pm 1.236

    Hachi's double-free fix leaves the code in this file, but it's
    commented out. I'm commenting it so archaeologists will know what he
    was thinking. 

  2003-03-05 17:20:13 by rcaputo; lib/POE/Component/Client/TCP.pm 1.31

    Clear the Client::TCP component's alias on shutdown. Otherwise, if
    something else in the program is active, the Client will disconnect
    but its internal session won't _stop. "Buzz Darkyear" on MagNet #poe
    reported this one. 

  2003-03-03 16:27:01 by sungo; lib/POE/Kernel.pm 1.235

    add the ability to disable Time::HiRes usage via a constant. document
    this interface 

  2003-03-03 15:51:46 by sungo; lib/POE/Loop/Select.pm 1.44

    oops. still need to set a minumum select timeout 

  2003-03-03 15:47:18 by sungo; lib/POE/Loop/Select.pm 1.43

    comment out the linux select timeout workaround and comment why 

  2003-03-02 07:20:40 by hachi; lib/POE/Kernel.pm 1.234

    Bug squashing attempt, sessions that used postbacks may in the past
    get garbage collected twice, there was an internal consistency check
    to this effect which made a confess() call.

    I hope I wasn't supposed to increment the version to .2502 or
    something before committing. 

  2003-02-28 22:40:47 by rcaputo; Makefile.PL 1.26

    <sky> what happens is that the code is compiled twice, and the first

    time in the same scope as the ST_TIME <dngnand> This is the 0.22 bug?
    <sky> yes <sky> the bug exists in non threaded and threaded perl
    <sky> but because threaded perl keeps constants on the pad, it

    actually shows <dngnand> Oh! Does it also do this in blead, then?
    <sky> no, but maintblead <sky> blead fixes it <sky> but blead has
    mucho rewritten pad handling <dngnand> Do you think this is something
    that will bite regular

    POE/Perl users? <sky> not in 0.23+ <dngnand> I'll remove the warning
    from Makefile.PL, then. 

  2003-02-27 00:10:35 by cwest; lib/POE/Wheel/FollowTail.pm 1.43

    From the mailing list:

    Date: Tue, 25 Feb 2003 16:28:11 -0800

    From: Jim Westfall <jwestfall@surrealistic.net>

    To: poe@perl.org

    Subject: FollowTail behavior change with SeekBack

    I recently upgraded to 0.25 from 0.23 and noticed there is a

    behavior change to FollowTail with the SeekBack option. A

    'SeekBack' => 0 is now causing it to seek back instead of seeking to

    the EOF like one would expect. The code was as follows

    my $seek_back = ( (defined $params{SeekBack})

    ? $params{SeekBack}

    : 4096

    );

    and has been changed to

    my $seek_back = $params{SeekBack} || 4096;

    so now if $params{SeekBack} is undefined or set to 0 it will make

    $seek_back 4096. simple workaround on my part is to set SeekBack to

    -1.

    A simular situation exists with the PollInterval option, tho I dunno

    if 0 would be a valid option for it.

    __END__

    This was a short sided change. The old behaviour is correct and has
    been restored. 

  2003-02-22 03:00:35 by sungo; mylib/events_per_second.pl 1.1

    first stab at a benchmark of various event loops. run with --help
    option for usage 

  2003-02-18 15:08:55 by rcaputo; t/08_errors.t 1.43

    Cygwin doesn't give us warnings when creating this bogus
    SocketFactory. This patch works around Cygwin's strange behavior in a
    most unsatisfying way. 

  2003-02-07 19:34:20 by rcaputo; lib/POE.pm 1.156

    Bump the version to the next "CVS" number. 

=========================
2003-02-07 17:48:47 v0_25
=========================

  2003-02-07 17:48:47 by rcaputo; README 1.103; lib/POE.pm 1.155

    Finalize things for the imminent 0.25 release. 

  2003-02-07 05:03:43 by hachi; lib/POE/Component/Client/TCP.pm 1.30;
  lib/POE/Component/Server/TCP.pm 1.35

    Documentation cleanup in PoCo::Client::TCP and PoCo::Server::TCP

    First time I committed CVS (outside of my own hard drive) Yay me! 

  2003-02-06 20:07:15 by rcaputo; t/04_selects.t 1.17

    This fix is against against revision 1.14. Forcing that new test to
    use "inet" pipes breaks on systems where localhost is firewalled.
    Tweaked the test to use whichever pipes it can under non-Windows
    operating systems, and forced it to "inet" for MSWin32. A real
    solution would be to skip the test entirely if the pipe can't be
    built. I suspect we'll need to revisit this later. 

  2003-02-06 03:30:38 by rcaputo; t/06_tk.t 1.40

    It is unfortunate, but a bug in ActivePerl 5.8.0's version of Tk
    prevents us from supporting Tk at all in this build. We regret the
    inconvenience and hope that support can resume in a future ActivePerl
    build. Meanwhile, you may follow the status of the bug at
    http://bugs.activestate.com/show_bug.cgi?id=22619 

  2003-02-06 03:25:52 by rcaputo; lib/POE/Loop/Tk.pm 1.39

    Collateral refactoring while trying to work around ActivePerl's
    problem with Tk, and Tk's problem with my preferred workaround. 

  2003-02-05 16:22:11 by rcaputo; lib/POE/Kernel.pm 1.233

    Nancy Grady pointed out that Randal Schwartz's listing at
    http://www.stonehenge.com/merlyn/LinuxMag/col41.listing.txt was not
    exiting when it was done. This turned out to be a missing garbage
    collection test in POE::Kernel, introduced during the Great
    Refactoring of 2002. This fix adds back the GC test that was removed. 

  2003-02-04 03:32:01 by rcaputo; lib/POE/Pipe.pm 1.9

    Bad Rocco! Always verify copied/pasted/tweaked code has actually been
    tweaked, or you'll keep doing things like what was fixed here.
    Luckily it hadn't caused any trouble to speak of. 

=============================
Beginning of Recorded History
=============================
