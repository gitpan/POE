===========================
2006-08-13 02:33:23 v0_3601
===========================

  2006-08-13 02:11:37 (r2041) by rcaputo; poe/lib/POE.pm M

    Some CPAN testers failures have been addressed. Time for 0.3601. 

  2006-08-13 00:51:32 (r2040) by immute
  poe/lib/POE/Component/Client/TCP.pm M;
  poe/lib/POE/Component/Server/TCP.pm M

    Updated PoCo::Server::TCP and PoCo::Client::TCP docs to match new
    Filter argument style

  2006-08-09 13:02:33 (r2039) by rcaputo; poe/lib/POE/Wheel/ReadLine.pm M

    Apply Nick Williams's patch to only enable raw input when
    POE::Wheel::ReadLine is expecting input. Ctrl+C, for example, will
    still thrown a SIGINT while a program is not waiting on a pending
    get(). I'm not sure this is great, but it's worth a try. 

  2006-08-09 03:40:41 (r2038) by rcaputo; poe/lib/POE/Wheel/ReadLine.pm M

    If Wheel::ReadLine must die because it cannot open a private copy of
    STDIN or STDOUT, at least have it explain WHY the open failed!

  2006-08-08 15:37:27 (r2037) by rcaputo
  poe/tests/10_units/04_drivers/01_sysrw.t M

    Make the test "name" more descriptive in case of error. 

  2006-08-07 18:27:16 (r2036) by bsmith
  poe/tests/10_units/03_base/09_resources.t M

    The resources test which looks for XS modules being preferentially
    loaded was assuming that the names passed to CORE::GLOBAL::require
    hooks were formatted as path names, but 5.6.[12] (at least) passes
    them as module names. Changed two regexps that made this assumption. 

=========================
2006-08-07 17:18:05 v0_36
=========================

  2006-08-07 17:16:57 (r2034) by rcaputo; poe/lib/POE.pm M

    Time for a new release. 0.36 is on its way out the door. 

  2006-08-07 05:41:22 (r2033) by rcaputo
  poe/tests/20_resources/00_base/filehandles.pm M

    Stuff works way better when you use variables in the scopes in which
    they're defined. 

  2006-08-07 05:15:52 (r2032) by rcaputo
  poe/tests/20_resources/00_base/filehandles.pm M;
  poe/lib/POE/Resource/FileHandles.pm M

    Make the MSWin32 non-blocking ioctl() call a little more informative.
    Most WinSock error codes are well beyond the normal $! range, so the
    stringy $! always comes back "Unknown error". At least now you also
    get the nummy version, like 10038, which lets you look up the real
    error ("NOT A SOCKET!!").
    
    Also fix a test on MSWin32. It was failing because the handle being
    selected was... NOT A SOCKET!! 

  2006-08-07 04:15:20 (r2031) by rcaputo; poe/mylib/Makefile-5005.pm M

    Can't run a .perl script as an executable on Windows? Bah! Execute it
    via Perl instead. 

  2006-08-07 02:43:30 (r2030) by rcaputo
  poe/lib/POE/Resource/FileHandles.pm M

    Die, don't exit, when filehandle based PEBKAC errors occur. Otherwise
    eval{} can't catch the problem. 

  2006-08-07 02:25:50 (r2029) by rcaputo; poe/lib/POE/Kernel.pm M

    Don't throw exceptions when errors are caught in _stop. Resolves
    rt.cpan.org 19908, reported by Randal Schwartz. 

  2006-08-07 01:42:11 (r2028) by rcaputo
  poe/tests/90_regression/broeren-win32-nbio.t M

    Add an Id tag. Whee. 

  2006-08-07 01:40:34 (r2027) by rcaputo
  poe/tests/90_regression/broeren-win32-nbio.t M

    If not on MSWin32, skip because of that rather than due to the
    absense of Win32::Console. 

  2006-08-07 01:22:34 (r2026) by rcaputo
  poe/tests/10_units/05_filters/07_reference.t M

    Fix the comment that triggers vim's perl mode. 

  2006-08-06 23:44:49 (r2025) by rcaputo
  poe/lib/POE/Filter/Reference.pm M

    The previous leak fix broke some tests. Shaaaaame! This fixes the
    test breakage by going ahead with the delete $INC{$path} but only if
    the serializer package does not have the methods we need. Upshot? The
    delete() should only happen (and leak) once. 

  2006-08-06 23:16:42 (r2024) by rcaputo
  poe/tests/90_regression/rt14444-arg1.t M;
  poe/tests/30_loops/00_base/sbk_signal_init.pm M;
  poe/tests/90_regression/rt19908-merlyn-stop.t A; poe/MANIFEST M;
  poe/tests/90_regression/immute-server-tcp-filter.t M

    Add a test for Randal Schwartz's bug, rt.cpan.org ticket 19908. Also
    add Id tag expansion to some irrelevant files. 

  2006-08-06 23:00:53 (r2023) by rcaputo
  poe/lib/POE/Resource/FileHandles.pm M

    Differentiate between two kinds of watching-the-same-descriptor
    PEBKAC message. 

  2006-08-06 22:41:10 (r2022) by rcaputo
  poe/lib/POE/Kernel.pm M; poe/lib/POE/Resource/FileHandles.pm M

    Make a couple PEBKAC messages explain themselves more clearly and
    with more detail. This should "resolve" a number of rt.cpan.org
    tickets that are reporting the old messages as problems with POE. 

  2006-08-06 21:52:23 (r2021) by rcaputo
  poe/lib/POE/Filter/Reference.pm M

    Stop deleting the freezer module's path from from %INC. While this
    does prompt Perl to fully reload the module, it also introduces a bad
    memory leak when POE::Filter::Reference->new() is called with a
    package name. Given the choice between both bad outcomes, I'll prefer
    the noisy one to the silent but deadly one. This resolvels
    rt.cpan.org ticket 18982, reported by Allen Donovan. 

  2006-08-06 20:55:42 (r2020) by rcaputo
  poe/tests/30_loops/00_base/wheel_run.pm M

    Skip the Wheel::Run tests if $^O eq "MSWin32" and Win32::Console is
    not installed. Some relatively new Win32 distributions advertise $^O
    identically to ActivePerl but don't include the same set of modules
    as that distribution. Resolves rt.cpan.org ticket 20574 from Adam
    Kennedy. 

  2006-08-06 20:52:13 (r2019) by rcaputo
  poe/tests/90_regression/broeren-win32-nbio.t M

    Skip this regression test if Win32::Console is not installed. Some
    relatively new Win32 distributions advertise $^O identically to
    ActivePerl but don't include the same set of modules as that
    distribution. Resolves rt.cpan.org ticket 20574 from Adam Kennedy. 

  2006-08-03 16:07:31 (r2018) by rcaputo
  poe/tests/90_regression/rt1648-tied-stderr.t M

    Relegate some diag()s to DEBUG status, and then turn them off. 

  2006-08-03 16:05:34 (r2017) by rcaputo; poe/lib/POE/Loop/Event.pm M

    Don't park the initial timer callback. Doing so causes Event to throw
    an error when you call POE::Kernel->run() without any sessions. This
    fix removes some noise from the test suite. 

  2006-08-03 15:14:33 (r2016) by rcaputo
  poe/tests/90_regression/merijn-sigchld-system.t M

    Remove some cryptic diag() statements that were cluttering up the
    test output. Also removed tabs... 

  2006-08-03 15:08:59 (r2015) by rcaputo; poe/lib/POE/Kernel.pm M

    Apply Nick Williams' (Morgan Stanley) patch to restore the currently
    active session and event before throwing an exception via die().
    POE's internal state becomes inconsistent when throwing an exception
    without his patch. 

  2006-08-01 17:20:30 (r2014) by rcaputo
  poe/lib/POE/Resource/Sessions.pm M

    Add signal handlers to the TRACE_REFCNT display. 

  2006-07-27 06:16:55 (r2013) by rcaputo; poe/lib/POE/Wheel/ReadLine.pm M

    Applied Nick Williams' patch to remove newlines from history read
    from a file and to truncate the loaded history to the maximum number
    of lines it should maintain. 

  2006-07-24 22:16:22 (r2012) by rcaputo; poe/lib/POE/Wheel/Run.pm M

    Remove a discussion of StderrEvent's parameters from the constructor
    argument documentation. Reference the event names documentation from
    the constructor argument section to EVENTS AND PARAMETERS, later in
    the document, where these things are documented in more detail.
    Thanks to Guillermo Roditi for pointing out the problem. 

  2006-07-23 17:07:36 (r2011) by rcaputo; poe/lib/POE/Kernel.pm M

    Peter Farmer pointed out that POE_TRACE_FILENAME was being wrapped in
    silly quotes. This was a leftover when non-numeric constants needed
    quotes because they were defined with string eval(). Now they're not. 

  2006-07-15 07:27:36 (r2010) by rcaputo
  poe/tests/10_units/03_base/09_resources.t M

    Avoid an undef warning in a test message. 

  2006-07-15 07:26:33 (r2009) by rcaputo; poe/lib/POE/Wheel/Run.pm M

    Update POE::Wheel::Run's SYNOPSIS per Mike Baas' feedback. Also fixed
    a problem where ClosedEvent was not firing without a StderrEvent
    being defined. 

  2006-07-04 06:41:42 (r2008) by rcaputo
  poe/lib/POE/Wheel/SocketFactory.pm M

    Commit Pravus' patch in rt.cpan.org ticket 19366. 

  2006-06-30 18:23:34 (r2007) by bsmith; poe/lib/POE/Wheel/ReadWrite.pm M

    Change defaulting of filters in POE::Wheel::ReadWrite constructor:

    if either isn't provided, fill it in with POE::Filter::Line

    previously, it only filled in the default if both weren't provided. 

  2006-06-30 11:24:01 (r2006) by bsmith
  poe/tests/20_resources/00_base/filehandles.pm M

    Refactored and extended tests for POE::Resource::FileHandles.

  2006-06-28 17:11:29 (r2005) by rcaputo
  poe/lib/POE/Component/Server/TCP.pm M

    Domain wasn't defaulting to AF_INET for some reason, even though it's
    clearly documented as doing so. Now it does! 

  2006-06-27 08:22:05 (r2004) by bsmith; poe/lib/POE/Loop/Gtk.pm M

    Close ticket 20127 by adding an idle watcher that runs
    _loop_resume_timer if no other watcher has been created at loop_run
    time. 

  2006-06-25 18:34:21 (r2003) by bsmith; poe/lib/POE/Loop/Gtk.pm M

    Adjusted POD to say POE::Loop::Gtk instead of POE::Loop::Event. 

  2006-06-25 12:46:58 (r2002) by bsmith
  poe/tests/30_loops/00_base/wheel_readline.pm A;
  poe/tests/30_loops/00_base/wheel_curses.pm A; poe/MANIFEST M

    Stub tests for POE::Wheel::Curses and POE::Wheel::ReadLine.

  2006-06-25 12:39:03 (r2001) by bsmith
  poe/tests/10_units/05_filters/01_block.t M;
  poe/tests/10_units/05_filters/04_line.t M;
  poe/tests/10_units/05_filters/50_stackable.t M;
  poe/tests/10_units/05_filters/02_grep.t M;
  poe/tests/10_units/05_filters/06_recordblock.t M;
  poe/tests/10_units/05_filters/TestFilter.pm A;
  poe/tests/10_units/05_filters/03_http.t M;
  poe/tests/10_units/05_filters/05_map.t M;
  poe/tests/10_units/05_filters/08_stream.t M;
  poe/tests/10_units/05_filters/07_reference.t M; poe/MANIFEST M

    Add subtests to 10_units/05_filters, including: * Common subroutines
    for testing the presence and operation of the filter

    interface factored out to TestFilter.pm * Improved coverage of
    POE::Filter::{RecordBlock,HTTPD,Stackable}.

  2006-06-25 12:36:52 (r2000) by bsmith
  poe/tests/10_units/03_base/09_resources.t M

    Tests for POE::Resources.

  2006-06-25 12:31:02 (r1999) by bsmith
  poe/lib/POE/Filter/RecordBlock.pm M

    4 small fixes to POE::Filter::RecordBlock: * incorrect check in the
    constructor on the validity of BlockSize * put() in CheckPut mode
    used GETBUFFER instead of PUTBUFFER * documented blocksize() *
    documented checkput()

  2006-06-24 17:23:11 (r1998) by rcaputo
  docs/poestyle.pod D; docs/scripts D; docs/poesigs.pod D;
  docs/poesyntax.pod D; docs/poethanks.pod D; docs/poedesign.pod D;
  docs/poesimple.pod D; docs/poeintro.pod D; docs/poesess.pod D;
  docs/poe.pod D; docs/poealarms.pod D; docs/poellio.pod D

    Starting fresh. 

  2006-06-20 15:54:50 (r1997) by bingosnet
  poe/lib/POE/Component/Server/TCP.pm M

    Amended documentation for Args and ClientConnected to match
    implementation

  2006-06-19 14:31:05 (r1996) by rcaputo
  poe/mylib/gen-meta.perl M; poe/mylib/preprocessor.perl M;
  poe/mylib/gen-tests.perl M

    Turn on the svn:executable property for these files. 

  2006-06-18 20:33:55 (r1995) by rcaputo
  poe/mylib/Makefile-5004.pm M; poe/mylib/Makefile-5005.pm M;
  poe/mylib/preprocessor.perl M; poe/Makefile.PL M

    Move the bytes.pm preprocessing from Makefile.PL to
    ExtUtils::MakeMaker's PM_FILTER. 

  2006-06-17 22:40:25 (r1994) by rcaputo
  poe/lib/POE/Component/Client/TCP.pm M;
  poe/lib/POE/Component/Server/TCP.pm M

    Improve the CAVEATS/BUGS documentation in these components. 

  2006-06-17 22:35:57 (r1993) by rcaputo
  poe/lib/POE/Component/Server/TCP.pm M

    Replace $accept_session with $accept_session_id, since that's what it
    really is. Slightly optimize its assignment while I'm at it. 

  2006-06-17 22:04:11 (r1992) by immute
  poe/lib/POE/Component/Client/TCP.pm M;
  poe/lib/POE/Component/Server/TCP.pm M

    Added patches to PoCo-Server-TCP and PoCo-Client-TCP such that new()
    returns the spawned session's ID. Included documentation.

===========================
2006-06-16 07:35:15 v0_3502
===========================

  2006-06-16 07:04:07 (r1990) by rcaputo
  poe/tests/30_loops/00_base/wheel_run.pm M; poe/mylib/gen-tests.perl M

    Use POSIX::_exit(0) for the event loop tests when they're run in
    ActiveState Perl. POE::Wheel::Run (perhaps the forking) crashes Perl
    when the wheel_run.t test is run with Tk's event loop. Using POSIX's
    _exit() seems to avoid the problem. 

  2006-06-15 20:05:27 (r1989) by rcaputo; poe/mylib/gen-tests.perl M

    Detabify the test generator. More importantly, turn on autoflush for
    the BEGIN blocks that skip all tests. These skips happen without
    Test::More being invoked, so Test::More's autoflushing is not
    invoked. 

  2006-06-15 15:12:30 (r1988) by rcaputo; poe/lib/POE.pm M

    Bump the version for release. 

  2006-06-14 15:33:11 (r1987) by bsmith; poe/mylib/gen-tests.perl M

    Change do back to require as require correctly rethrows any errors
    produced by the included file. 

  2006-06-13 15:52:39 (r1986) by rcaputo; poe/lib/POE/Filter/HTTPD.pm M

    Apply a fix described by Eben Rauhut. He pointed out a place where we
    return a response without clearing the filter's HTTP headers buffer.
    This commit clears the headers buffer there and replaces a delete on
    an arrayref with an assignment of undef in other places. 

  2006-06-13 15:06:09 (r1985) by rcaputo; poe/lib/POE.pm M

    Attempt to resolve a documentation incongruity, per Tim Otten's
    report in rt.cpan.org ticket 19122. 

  2006-06-13 14:55:10 (r1984) by rcaputo; poe/lib/POE/Wheel/Run.pm M

    Apply Randal Schwartz's support for pty-pipe, a POE::Wheel::Run
    hybrid conduit that allows stdio to use a pty and stderr to report
    out of band via a pipe. Resolves rt.cpan.org ticket 19607. 

  2006-06-13 14:31:33 (r1983) by rcaputo; poe/lib/POE/Kernel.pm M

    Move alarm_adjust() after alarm_set(), per the recommendation of
    rt.cpan.org ticket 19257. 

  2006-06-11 19:40:54 (r1982) by bsmith; poe/MANIFEST M

    Added 02_api_ctl.t from the previous change to MANIFEST.

  2006-06-11 19:32:59 (r1981) by bsmith
  poe/tests/10_units/03_base/02_api_ctl.t A

    New tests for POE::API::Ctl.

  2006-06-11 19:23:12 (r1980) by rcaputo
  poe/lib/POE/Loop/IO_Poll.pm M; poe/lib/POE/Loop/Tk.pm M;
  poe/lib/POE/Resource/Signals.pm M; poe/lib/POE/Loop/Select.pm M;
  poe/lib/POE/Loop/Event.pm M; poe/lib/POE/Loop/PerlSignals.pm M;
  poe/lib/POE/Loop/Gtk.pm M;
  poe/tests/30_loops/00_base/sbk_signal_init.pm A; poe/MANIFEST M;
  poe/lib/POE/Session.pm M; poe/lib/POE/Loop/TkActiveState.pm M;
  poe/lib/POE/NFA.pm M

    Resolve Stuart Kendrick's bug, rt.cpan.org 19529, in which POE resets
    all signal handlers at "use" time. This is too early for some
    applications. Now it doesn't even DEFAULT/IGNORE signals unless it
    really must. That's pretty much SIGCHLD and SIGPIPE. Attempt no
    handling there. 

  2006-06-11 18:01:44 (r1979) by rcaputo; poe/lib/POE/Queue/Array.pm M

    Allow POE::Queue::Array to be subclassed. Resolves rt.cpan.org ticket
    19447, reported by Randal Schwartz. 

  2006-06-09 16:18:24 (r1978) by bingosnet
  extras/poco-list.perl M; extras/smoker.perl M

    smoker.perl now has commandline options for changing settings

  2006-06-07 06:15:52 (r1977) by immute; poe/lib/POE/Session.pm M

    Removed depreciated code from POE::Session::new()

  2006-06-06 03:07:35 (r1976) by immute
  poe/lib/POE/Component/Client/TCP.pm M;
  poe/lib/POE/Component/Server/TCP.pm M

    Added callbacks exposing High/Low-Mark in the ReadWrite wheel of
    PoCo-Client-TCP and PoCo-Server-TCP

  2006-05-31 15:21:38 (r1975) by rcaputo; extras/commitrelay.pl M

    Reflow commit messages for IRC. 

  2006-05-31 14:07:46 (r1974) by rcaputo
  poe/mylib/commitrelay.pl D; poe/mylib/smoker.perl D;
  extras/commitrelay.pl A; extras/smoker.perl A; poe/MANIFEST M

    Move the bots over to extras. Remove them from MANIFEST. They're not
    directly part of POE development, and they don't need to be included
    in the distribution. 

  2006-05-31 09:28:16 (r1973) by bsmith
  poe/mylib/smoker.perl A; poe/MANIFEST M

    Small smoker script from BinGOs that posts results to the pastebot.
    Also fix MANIFEST.

  2006-05-30 20:51:59 (r1972) by bsmith; poe/mylib/commitrelay.pl A

    Relay bot for commits (with colour removal).

  2006-05-30 20:32:30 (r1971) by bsmith
  poe/tests/30_loops/00_base/wheel_run.pm M;
  poe/tests/10_units/05_filters/01_block.t M;
  poe/tests/10_units/05_filters/04_line.t M;
  poe/tests/30_loops/00_base/k_alarms.pm M;
  poe/tests/20_resources/00_base/filehandles.pm M;
  poe/tests/10_units/05_filters/02_grep.t M;
  poe/tests/30_loops/00_base/ses_session.pm M;
  poe/tests/20_resources/00_base/extrefs.pm M;
  poe/tests/20_resources/00_base/aliases.pm M;
  poe/tests/30_loops/00_base/k_detach.pm M;
  poe/tests/10_units/05_filters/07_reference.t M;
  poe/tests/30_loops/00_base/all_errors.pm M;
  poe/tests/30_loops/00_base/wheel_sf_udp.pm M;
  poe/tests/30_loops/00_base/k_signals.pm M;
  poe/tests/20_resources/00_base/signals.pm M;
  poe/tests/20_resources/00_base/controls.pm M;
  poe/tests/30_loops/00_base/wheel_accept.pm M;
  poe/tests/10_units/05_filters/50_stackable.t M;
  poe/tests/90_regression/suzman_windows.t M;
  poe/tests/30_loops/00_base/wheel_sf_unix.pm M;
  poe/tests/10_units/05_filters/08_stream.t M;
  poe/tests/30_loops/00_base/wheel_sf_ipv6.pm M;
  poe/tests/30_loops/00_base/wheel_sf_tcp.pm M;
  poe/tests/30_loops/00_base/comp_tcp.pm M;
  poe/tests/30_loops/00_base/comp_tcp_concurrent.pm M;
  poe/tests/20_resources/00_base/statistics.pm M;
  poe/tests/10_units/05_filters/99_filterchange.t M;
  poe/tests/30_loops/00_base/k_selects.pm M;
  poe/tests/30_loops/00_base/wheel_tail.pm M;
  poe/tests/30_loops/00_base/ses_nfa.pm M;
  poe/tests/10_units/05_filters/03_http.t M;
  poe/tests/20_resources/00_base/sids.pm M;
  poe/tests/10_units/05_filters/05_map.t M;
  poe/tests/20_resources/00_base/caller_state.pm M;
  poe/tests/20_resources/00_base/events.pm M;
  poe/tests/20_resources/00_base/sessions.pm M;
  poe/tests/90_regression/neyuki_detach.t M

    Removed use lib qw(lib) from tests because we should be use libraries
    from blib.

  2006-05-30 19:15:22 (r1970) by bsmith
  poe/mylib/Makefile-5004.pm M; poe/mylib/Makefile-5005.pm M;
  poe/mylib/Test D; poe/mylib/testreport.pl D; poe/MANIFEST M;
  poe/mylib/reportupload.pl D

    Removed the old test upload programs, and their test harness, and
    references to them.

  2006-05-30 19:10:28 (r1969) by bsmith; poe/mylib/gen-tests.perl M

    Modified gen-tests to use CORE::exit instead of POSIX::_exit, and to
    use Test::More in the outer script as this sets up handy things like
    autoflush.

  2006-05-30 18:55:43 (r1968) by bsmith; poe/mylib/coverage.perl M

    Added some commandline flags to coverage.perl to allow it to run
    prove(1) instead of make test, not clean & build before running the
    tests, and to just print out the -MDevel::Cover option that should be
    used.

  2006-05-27 11:37:08 (r1967) by bsmith; poe/mylib/coverage.perl M

    Changes to mylib/coverage.perl:

    Fixes for running individual tests, and hiding modules in tests/.

    Also commenting out the harness_switches code more completely. 

  2006-05-25 04:10:29 (r1966) by rcaputo
  poe/tests/90_regression/cfedde-filter-httpd.t M;
  poe/tests/90_regression/immute-server-tcp-filter.t M

    Skip these two regression tests if HTTP::Request isn't available. 

===========================
2006-05-23 04:42:16 v0_3501
===========================

  2006-05-23 04:41:51 (r1964) by rcaputo; poe/lib/POE.pm M

    Minor release to fix bugs introduced in last major release. 

  2006-05-22 17:57:36 (r1963) by immute
  poe/lib/POE/Filter/Stackable.pm M

    Fixed Stackable.pm to make Filter optional again.

  2006-05-22 08:21:37 (r1962) by teknikill
  poe/tests/30_loops/00_base/wheel_run.pm M

    fixed test skip count

  2006-05-22 08:11:41 (r1961) by teknikill
  poe/tests/90_regression/cfedde-filter-httpd.t M

    data dumper and http resposne aren't needed for the filter test

=========================
2006-05-21 22:17:33 v0_35
=========================

  2006-05-21 22:16:40 (r1959) by rcaputo; poe/lib/POE.pm M

    Bump the version for release. 

  2006-05-21 21:12:55 (r1958) by rcaputo; poe/lib/POE/Filter/HTTPD.pm M

    Don't append a message to the HTTP headers if there isn't one. Avoids
    an excess trailing space in some instances. 

  2006-05-15 03:17:21 (r1957) by immute
  poe/lib/POE/Component/Client/TCP.pm M

    Updated the filter mechanism. This addresses rt19106.

  2006-05-15 03:05:54 (r1956) by immute
  poe/lib/POE/Component/Server/TCP.pm M

    Updated the filter mechanism again, hopefully I have it right this
    time. This also addresses rt19106.

  2006-05-14 01:43:25 (r1955) by immute; poe/lib/POE/Filter.pm M

    Fixed array slice syntax error in POE::Filter::clone()

  2006-05-08 06:30:44 (r1954) by teknikill
  poe/lib/POE/Resource/Signals.pm M

    remove 100's of PID:0 warnings

  2006-05-03 00:42:50 (r1953) by immute
  poe/tests/10_units/05_filters/02_grep.t M;
  poe/tests/10_units/05_filters/05_map.t M; poe/lib/POE/Filter/Grep.pm M;
  poe/lib/POE/Filter/Map.pm M

    Added paramter checking to Filter::Map and Filter::Grep Updated
    corresponding tests 

  2006-05-01 21:09:54 (r1952) by immute; poe/lib/POE/Filter/Map.pm M

    Edited mistake in POE::Filter::Map introduced in r1948 -This line,
    and those below, will be ignored--
    
    M lib/POE/Filter/Map.pm 

  2006-05-01 18:31:32 (r1951) by teknikill
  poe/lib/POE/Filter/HTTPD.pm M; poe/tests/10_units/05_filters/03_http.t
  M

    added support in HTTPD filter for 'options' requests, and added test
    for it

  2006-05-01 03:52:38 (r1950) by immute
  poe/lib/POE/Component/Server/TCP.pm M;
  poe/tests/90_regression/immute-server-tcp-filter.t M

    Code audit to PoCo-Server-TCP Turned off debug code left on in
    immute-server-tcp-filter.t 

  2006-05-01 03:38:09 (r1949) by immute
  poe/MANIFEST M; poe/tests/90_regression/immute-server-tcp-filter.t A

    Added test to check PoCo-Server-TCP's Filter arg mechanism

  2006-04-30 06:35:56 (r1948) by immute; poe/lib/POE/Filter/Map.pm M

    Patched Filter::Map to close rt18551 Added sanity check to modify() 

  2006-04-29 22:58:20 (r1947) by rcaputo
  poe/lib/POE/Component/Client/TCP.pm M; poe/lib/POE/Wheel/ReadLine.pm M;
  poe/lib/POE/Wheel/ReadWrite.pm M; poe/lib/POE/Filter/Reference.pm M;
  poe/lib/POE/Session.pm M

    Apply a superset of buu's patch, resolving rt.cpan.org ticket #18762. 

  2006-04-29 22:43:06 (r1946) by rcaputo
  poe/lib/POE/Session.pm M; poe/lib/POE/NFA.pm M

    Apply Matt Sickler's patches to fix POE::Session (and POE::NFA) and
    close rt.cpan.org ticket #14444. 

  2006-04-29 22:38:08 (r1945) by rcaputo
  poe/tests/30_loops/00_base/wheel_run.pm M

    Make an intermittently failing test's result message more
    informative. 

  2006-04-29 22:37:31 (r1944) by rcaputo
  poe/tests/90_regression/rt14444-arg1.t A; poe/MANIFEST M

    Add a test case for rt14444 based on test code by Matt Sickler. 

  2006-04-29 18:13:09 (r1943) by apocal
  poe/lib/POE/Filter/Stackable.pm M

    Oops, bad typo!

  2006-04-29 18:10:00 (r1942) by apocal
  poe/lib/POE/Filter/Stackable.pm M

    #18552: POE::Filter::Stackable does not check it's params
    
    Added some more sanity checks

  2006-04-29 17:27:08 (r1941) by apocal
  poe/lib/POE/Component/Client/TCP.pm M

    #18665: PoCo::Client::TCP sometimes doesn't send Disconnected
    callback
    
    The reasoning is sane, and the code's updated to send it in the
    special case

  2006-04-24 02:42:14 (r1940) by rcaputo; poe/lib/POE/Filter.pm M

    Applied Marco Antonio Manzo's patch to simplify clone(). 

  2006-04-15 23:56:39 (r1939) by rcaputo
  poe/tests/30_loops/00_base/wheel_sf_unix.pm M;
  poe/tests/30_loops/00_base/wheel_sf_tcp.pm M;
  poe/tests/90_regression/rt1648-tied-stderr.t M

    Add more diagnostic information to tests that are failing under
    ActiveState's build system. 

  2006-04-11 10:06:53 (r1938) by adamkennedy; poe/lib/POE/Kernel.pm M

    Whenever you work with relative time, you have to measure "now"
    absolutely as soon as possible. Moved the time() call from when
    delay_set sets the actual alarm to the very top, which is much closer
    to where the caller meant "now" to mean.

  2006-04-10 23:36:15 (r1937) by rcaputo; poe/lib/POE.pm M

    Next development version. 

===========================
2006-04-10 22:54:07 v0_3401
===========================

  2006-04-10 22:53:42 (r1935) by rcaputo; poe/lib/POE.pm M

    Make 0.3401 official for release. 

  2006-04-10 22:38:22 (r1934) by rcaputo
  poe/lib/POE/Component/Client/TCP.pm M;
  poe/tests/90_regression/cfedde-filter-httpd.t A;
  poe/lib/POE/Filter/HTTPD.pm M; poe/lib/POE/Component/Server/TCP.pm M;
  poe/MANIFEST M

    Chris Fedde found a bug in the way Server::TCP creates filters. He
    was kind enough to provide a test case, so I was able to find and fix
    the problem easily. Thank you! 

  2006-04-10 20:37:40 (r1933) by rcaputo; poe/Makefile.PL M

    Fix a bug Rob Bloodgood discovered when installing on 5.5-ish
    systems. The find() subroutines were using next rather than return. 

  2006-04-06 17:58:43 (r1932) by rcaputo; poe/mylib/gen-meta.perl M

    Add the tests directory to the no-index directive. This should stop
    the CPAN indexer's squealing about missing permissions. 

  2006-04-06 16:21:11 (r1931) by rcaputo; poe/lib/POE.pm M

    Now at version 0.34_01 so that cpan test reports from svn aren't
    confused with the official release. 

=========================
2006-04-06 16:06:00 v0_34
=========================

  2006-04-06 15:14:24 (r1929) by rcaputo; poe/README M; poe/lib/POE.pm M

    We're 0.34 now. Make some pre-release README tweaks, too. 

  2006-04-06 14:57:17 (r1928) by rcaputo
  poe/tests/30_loops/00_base/wheel_run.pm M;
  poe/tests/30_loops/00_base/k_alarms.pm M

    Increase the timing tolerances on some tests. 

  2006-04-06 03:40:26 (r1927) by rcaputo
  poe/tests/30_loops/00_base/wheel_sf_udp.pm M

    Beef up error reporting for a sometimes-failing test. 

  2006-04-05 21:30:12 (r1926) by adamkennedy; poe/lib/POE/Kernel.pm M

    Moving a variable inside a scope to save an instruction per event

  2006-04-05 15:05:45 (r1925) by rcaputo
  poe/tests/30_loops/00_base/wheel_tail.pm M

    Slow machines weren't seeing all the flushes. Turns out that the
    driver had a chance to glom together put() calls before the next
    writable event came around. Increased the delay between put() calls
    by an order of magnitude to avoid false test failures. 

  2006-04-05 04:22:47 (r1924) by rcaputo; poe/lib/POE/Loop/TkCommon.pm M

    Clear the we're-do-one-looping flag when a UIDESTROY signal is
    dispatched due to closing the main window. Otherwise the after()
    event tied to that window never fires (because the window is closed,
    duh), and an application can hang. 

  2006-04-05 04:21:26 (r1923) by rcaputo
  poe/tests/30_loops/00_base/wheel_tail.pm M

    Explain a test result. Sometimes this test fails. It's not
    deterministic, but at least we'll know more about it the next time. 

  2006-04-04 04:19:10 (r1922) by rcaputo
  poe/lib/POE/Component/Client/TCP.pm M;
  poe/lib/POE/Component/Server/TCP.pm M

    Matt Sickler patched POE::Component::Client::TCP and the server to
    use POE::Filter::* clone() methods if you pass an object rather than
    a class name to the Filter* parameters. 

  2006-04-02 12:25:53 (r1921) by adamkennedy; poe/lib/POE/Filter/Map.pm M

    Make the POE::Filter::Map synopsis a little more readable

  2006-04-02 07:17:33 (r1920) by rcaputo
  poe/lib/POE/Filter/HTTPD.pm M; poe/lib/POE/Filter/Line.pm M;
  poe/lib/POE/Filter/RecordBlock.pm M; poe/lib/POE/Filter/Stackable.pm M;
  poe/lib/POE/Filter/Block.pm M; poe/lib/POE/Filter/Stream.pm M;
  poe/lib/POE/Filter/Grep.pm M; poe/lib/POE/Filter/Map.pm M;
  poe/lib/POE/Filter/Reference.pm M; poe/lib/POE/Filter.pm M

    Matt Sickler added clone() methods to POE::Filter and its subclasses.
    This addresses a large part of rt.cpan.org #4931. 

  2006-04-02 00:33:21 (r1919) by rcaputo; poe/lib/POE/Wheel/ReadLine.pm M

    Use the emacs input mode by default. Everybody expects the arrow keys
    to work, and vi power users probably know about .inputrc already.
    
    Get the delete key doing that backward-character-delete thang. 

  2006-04-01 07:37:06 (r1918) by rcaputo; poe/lib/POE/Wheel/ReadLine.pm M

    rt.cpan.org squashes indents in source code and patches, and some
    code made it into this module without indents. Fixed that.
    
    More importantly, document the EDITOR=vi gotcha. If you don't have an
    .inputrc, POE::Wheel::ReadLine checks out your EDITOR environment
    variable for clues as to the mode it uses. As a result, many people
    will get vi editing mode without expecting it. 

  2006-03-29 07:05:40 (r1917) by rcaputo
  poe/tests/30_loops/00_base/wheel_tail.pm M

    Change the test timing to work around Virtual PC's inconsistent
    emulated CPU clock. 

  2006-03-29 04:41:20 (r1916) by rcaputo; poe/lib/POE/Wheel/Run.pm M

    Chris Fedde discovered that the "harmless" practice of closing STDIN,
    STDOUT, and STDERR before dup'ing them seems to cause a problem on
    Unix-based systems when the parent process doesn't have stdio handles
    of its own. This commit resolves his rt.cpan.org ticket, #16691. 

  2006-03-29 04:22:22 (r1915) by rcaputo; poe/lib/POE/Wheel/Run.pm M

    Chris Fedde, in rt.cpan.org ticket #16691, accidentally discovered a
    case where closing STDOUT and STDERR together, then opening them for
    redirection, was breaking STDIN in child processes. This fixes the
    case, but it does not close his original ticket. I'm committing this
    separately so I can check it out in Windows to make sure I didn't
    just break things there. 

  2006-03-28 21:37:31 (r1914) by rcaputo
  poe/lib/POE/Loop/TkActiveState.pm M

    Eliminate a memory leak using Tk with ActiveState Perl. Resolves Ake
    Nilson's rt.cpan.org ticket, number 14301. 

  2006-03-28 06:20:53 (r1913) by rcaputo; poe/mylib/cpan-test.perl M

    Get the regression tester finding and downloading POE component
    tarballs again. CPANPLUS::Backend and ::Config have changed a little
    in the time since I last used this. 

  2006-03-28 05:22:55 (r1912) by rcaputo; poe/lib/POE/Session.pm M

    Upgrade carp() to croak() in the new() constructor. This constructor
    has been deprecated since at least Nov 2004, so I think people have
    had fair warning. Resolves rt.cpan.org ticket #8470. 

  2006-03-28 05:15:50 (r1911) by rcaputo
  poe/lib/POE/Resource/Statistics.pm M

    Applied Lars' patch to avoid division by zero errors in
    POE::Resource::Statistics. Resolves rt.cpan.org ticket #17017. 

  2006-03-28 05:10:47 (r1910) by rcaputo; poe/mylib/gen-meta.perl M

    Add a no_index entry for the mylib directory. 

  2006-03-28 05:10:09 (r1909) by rcaputo; poe/MANIFEST M

    Remove some files that shouldn't be there. 

  2006-03-28 04:31:29 (r1908) by rcaputo; poe/lib/POE/Wheel/ReadLine.pm M

    Applied Jeff Pinyan's patch to fix tab completion when the only match
    for a prefix is the full string of the match. Prior to the patch,
    Wheel::ReadLine would just ring the terminal bell and not display any
    matches. 

  2006-03-27 17:41:50 (r1907) by rcaputo; poe/MANIFEST M

    Commit MANIFEST changes. 

  2006-03-23 05:44:47 (r1906) by rcaputo
  poe/lib/POE/Wheel/ReadLine.pm M; poe/lib/POE/Kernel.pm M

    Make some minor syntactical changes to some comments to support a
    side project. 

  2006-03-21 05:58:24 (r1905) by rcaputo; poe/lib/POE/Kernel.pm M

    Try to load POE::XS::Queue::Array before POE::Queue::Array. This
    needs to be made generic somehow. 

  2006-03-21 05:57:34 (r1904) by rcaputo; poe/MANIFEST.SKIP M

    Ignore .svn directories. 

  2006-03-20 04:44:08 (r1903) by rcaputo
  poe/lib/POE/Component/Client/TCP.pm M; poe/lib/POE/Filter/HTTPD.pm M;
  poe/lib/POE/Wheel/Curses.pm M; poe/lib/POE/Loop.pm M;
  poe/lib/POE/Resources.pm M; poe/lib/POE/Filter/Stackable.pm M;
  poe/lib/POE/Filter/Stream.pm M; poe/lib/POE/Kernel.pm M;
  poe/lib/POE/Wheel/FollowTail.pm M; poe/lib/POE/Resource/Statistics.pm
  M; poe/lib/POE/Wheel/ListenAccept.pm M; poe/lib/POE/Session.pm M;
  poe/lib/POE/Loop/TkActiveState.pm M; poe/lib/POE/Filter.pm M;
  poe/lib/POE/Wheel/ReadLine.pm M; poe/lib/POE/Resource/SIDs.pm M;
  poe/lib/POE/API/ResLoader.pm M; poe/lib/POE/Resource/Events.pm M;
  poe/lib/POE/API/Ctl.pm M; poe/lib/POE/Loop/PerlSignals.pm M;
  poe/lib/POE/Resource/Sessions.pm M; poe/lib/POE/Pipe.pm M;
  poe/lib/POE/Loop/Gtk.pm M; poe/lib/POE/Component/Server/TCP.pm M;
  poe/lib/POE.pm M; poe/lib/POE/Loop/TkCommon.pm M;
  poe/lib/POE/Queue/Array.pm M; poe/lib/POE/Loop/IO_Poll.pm M;
  poe/lib/POE/Resource/Extrefs.pm M; poe/lib/POE/Wheel/Run.pm M;
  poe/lib/POE/Resource/Aliases.pm M; poe/lib/POE/Filter/Line.pm M;
  poe/lib/POE/Filter/RecordBlock.pm M; poe/lib/POE/Filter/Block.pm M;
  poe/lib/POE/Filter/Grep.pm M; poe/lib/POE/Driver/SysRW.pm M;
  poe/lib/POE/Filter/Reference.pm M; poe/lib/POE/Queue.pm M;
  poe/lib/POE/Wheel/SocketFactory.pm M; poe/lib/POE/Pipe/TwoWay.pm M;
  poe/lib/POE/Loop/Tk.pm M; poe/lib/POE/Resource/Signals.pm M;
  poe/lib/POE/Resource.pm M; poe/lib/POE/Loop/Select.pm M;
  poe/lib/POE/Resource/Controls.pm M; poe/lib/POE/Wheel/ReadWrite.pm M;
  poe/lib/POE/Loop/Event.pm M; poe/lib/POE/Driver.pm M;
  poe/mylib/Devel/Null.pm M; poe/mylib/MyOtherFreezer.pm M;
  poe/mylib/testreport.pl M; poe/lib/POE/Pipe/OneWay.pm M;
  poe/lib/POE/Component.pm M; poe/lib/POE/Filter/Map.pm M;
  poe/lib/POE/Wheel.pm M; poe/lib/POE/NFA.pm M;
  poe/lib/POE/Resource/FileHandles.pm M

    Change the VERSION strings from cvs style to subversion. 

=========================
2006-03-20 03:43:54 v0_00
=========================

  2006-03-19 09:54:01 (r1899) by rcaputo; htmldocs D

    We're not maintaining html docs anymore. search.cpan.org does a good
    enough job that we don't need to. 

  2006-03-18 23:45:26 (r1891) by rcaputo
  poe/mylib/Makefile-5005.pm M; poe/mylib/svn-log.perl A;
  poe/mylib/cvs-log.perl D

    Switch from the cvs changelog tool to the svn one. I'm also testing
    the cia and e-mail notification hooks. 

  2006-03-15 20:40:16 (r1890) by rcaputo
  poe/README M; poe/lib/POE.pm M; poe/mylib/reportupload.pl M;
  poe/Makefile.PL M

    Remove mention of our homebrew test report system. It's been down
    quite a long time, and I don't forsee having time to bring it back
    soon. 

  2006-03-15 20:39:13 (r1889) by rcaputo; poe/lib/POE/Queue/Array.pm M

    Whitespace fix... I think. I can't actually see a difference when I
    diff the file. 

  2006-03-11 23:12:40 (r1888) by rcaputo; poe/MANIFEST M

    Remove some more vestiges of POE::Preprocessor. We'll get 'em all
    eventually! 

  2006-03-11 23:11:39 (r1887) by rcaputo
  poe/lib/POE/Preprocessor.pm D; poe/lib/POE/Macro D;
  poe/tests/10_units/01_preprocessor D; poe/mylib/preprocessor.perl A;
  poe/mylib/PoeBuildInfo.pm M

    Remove POE::Preprocessor. Replaced it with a simple, almost one-liner
    preprocessor that's run at Makefile.PL time. 

  2006-02-26 08:37:07 (r1886) by rcaputo; poe/Makefile.PL M

    Clean up the preprocessor's backup files. 

  2006-02-26 07:56:34 (r1885) by rcaputo
  poe/lib/POE/Wheel/ReadLine.pm M; poe/lib/POE/Filter/HTTPD.pm M;
  poe/lib/POE/Filter/Block.pm M; poe/lib/POE/Driver/SysRW.pm M;
  poe/lib/POE/Filter/Reference.pm M; poe/Makefile.PL M;
  poe/lib/POE/Wheel/SocketFactory.pm M

    Replace {% use_bytes %} with a Makefile.PL-time source filter, and
    cross my fingers. If this works out, it'll eliminate the last use of
    POE::Preprocessor, and I'll finally get to spin it off into a
    separate distribution. 

  2006-02-26 07:53:06 (r1884) by rcaputo; poe/lib/POE.pm M

    Bump up the version and throw in an underscore. Some people like to
    upload CPAN test reports on the cvs version, and it confuses things
    when the results are glommed under the last CPAN release. 

  2006-02-26 05:38:30 (r1883) by rcaputo; poe/mylib/ExtUtils D

    ExtUtils::AutoInstall is no longer needed. 

  2006-02-21 18:50:50 (r1882) by rcaputo
  poe/lib/POE/Component/Client/TCP.pm M

    Apply Dan McCormick's patch to carp on unknown constructor
    parameters. 

  2006-02-07 09:35:22 (r1881) by rcaputo
  poe/mylib/Makefile-5005.pm M; poe/mylib/PoeBuildInfo.pm M; poe/MANIFEST
  M; poe/Makefile.PL M

    Remove ExtUtils::AutoInstall from the installer to support
    ActiveState's PPD builder. ActiveState's builder is still trivially
    broken months (years?) after I reported that ExtUtils::AutoInstall
    needs a configured CPAN.pm. So I give up.
    
    The questionnaire is replaced by a simple list of missing or outdated
    dependancies. ExtUtils::MakeMaker will still enforce our few hard
    requirements. 

===========================
2006-01-29 15:45:38 v0_3301
===========================

  2006-01-29 15:45:38 (r1879) by rcaputo; poe/lib/POE.pm M

    Bump up the version for a bugfix. 

  2006-01-26 05:59:50 (r1878) by rcaputo; poe/lib/POE/Wheel/Run.pm M

    Fixed a really dumb error... if (condition) { ... } else { do_stuff()
    if condition } ... d'oh. 

  2006-01-25 21:15:21 (r1877) by lotr
  poe/lib/POE/Wheel/Run.pm M; poe/lib/POE/Wheel/ReadWrite.pm M;
  poe/lib/POE/Wheel/FollowTail.pm M; poe/lib/POE/Wheel/ListenAccept.pm M

    remove superfluous regenerating of dynamic states when changing
    filter. 

  2005-12-29 17:55:36 (r1876) by rcaputo; poe/lib/POE/Kernel.pm M

    Make TRACE_STATISTICS (and probably others) strict-safe. Thanks, Nick
    Williams, for pointing it out. 

  2005-12-23 08:16:06 (r1875) by rcaputo
  poe/lib/POE/Resource/Signals.pm M

    The end-of-run child process reaper should block if there are
    unreaped processes out there. I mistakenly made the loop
    non-blocking, and now it's fixed. 

=========================
2005-12-22 22:31:48 v0_33
=========================

  2005-12-22 22:31:48 (r1873) by rcaputo; poe/mylib/gen-tests.perl M

    Add the ability to skip certain classes of tests on certain
    platforms, then use it to skip the IO::Poll tests on MSWin32. First,
    IO::Poll is kinda broken on MSWin32 and falls back to select()
    anyway. Second, some of the tests break outright in the IO::Poll
    fallback tests. 

  2005-12-22 20:18:29 (r1872) by rcaputo
  poe/lib/POE/Resource/Signals.pm M

    Use the WNOHANG constant rather than the magic 0. Skip child reaping
    on Win32. It seems to cause problems of the "segfault" variety. 

  2005-12-22 17:49:26 (r1871) by rcaputo
  poe/tests/30_loops/00_base/comp_tcp_concurrent.pm M

    These tests fail under Win32, so I'm skipping them. It seems that
    Win32 socket creation isn't as concurrent as we'd expect, and
    deadlocks occur. 

  2005-12-18 22:45:18 (r1870) by rcaputo; poe/lib/POE/Kernel.pm M

    Whitespace cleanup. 

  2005-12-18 22:41:17 (r1869) by rcaputo; poe/lib/POE/Kernel.pm M

    Replace string evals with typeglob tricks to define various
    constants. It weren't exactly broken, but I fixed it anyway. 

  2005-12-12 20:51:14 (r1868) by hachi
  poe/tests/10_units/07_exceptions/03_not_handled.t M;
  poe/lib/POE/Kernel.pm M

    Change exceptions to propagate out and kill the whole process if they
    are unhandled.
    
    All tests pass Debian Linux 2.6.12.3something with perl 5.8.7 

  2005-12-11 02:31:51 (r1867) by hachi
  poe/tests/90_regression/steinert-recursive-signal.t M

    Better testage for signal recursion causing corruption of the
    bookkeeping values. 

  2005-12-10 07:55:05 (r1866) by hachi
  poe/tests/10_units/07_exceptions/03_not_handled.t M

    Change exceptions test to better determine if POE has shut down
    properly when the DIE signal is not handled 

  2005-12-10 07:45:08 (r1865) by hachi
  poe/lib/POE/Resource/Signals.pm M; poe/lib/POE/Kernel.pm M

    This patch fixes the recursive signal testing added earlier. It uses
    package globals instead of lexicals for the bookkeeping vars in
    POE/Resource/Signals.pm, this should be examined for a faster way if
    possible.
    
    All tests pass Linux Debian x86 

  2005-12-10 07:36:17 (r1864) by hachi; poe/MANIFEST M

    Forgot to add new test to MANIFEST 

  2005-12-10 06:25:58 (r1863) by hachi
  poe/tests/90_regression/steinert-recursive-signal.t A

    Welcome to recursive signals, this test makes sure that the
    sig_handled() flag does not affect outer signals during recursive
    dispatch.
    
    This is currently only occuring when a signal handler causes an
    exception, and the DIE signal is called in response to this. This
    test fails on cvspoe currently, patch forthcoming to fix it. 

  2005-12-09 06:12:44 (r1862) by rcaputo; poe/lib/POE.pm M

    This release is different enough to warrant version 0.33 even though
    we haven't made our stated goals for this release. I'll probably
    break up the milestones in rt.cpan.org and stop trying to adhere to
    specific goals for specific versions. 

  2005-12-05 06:41:30 (r1861) by rcaputo; poe/lib/POE.pm M

    Version update for release. 

  2005-12-04 06:00:55 (r1860) by sungo
  poe/MANIFEST.SKIP M; poe/MANIFEST M

    update manifest for new tests. apparently the manifest got rearranged
    internally so the diff looks way larger than it really is. add
    run_network_tests file to MANIFEST.SKIP. 

  2005-12-04 01:30:37 (r1859) by sungo
  poe/tests/10_units/07_exceptions A;
  poe/tests/10_units/07_exceptions/03_not_handled.t A;
  poe/tests/10_units/07_exceptions/02_turn_off.t A;
  poe/tests/10_units/07_exceptions/01_normal.t A

    tests for new exception handling code 

  2005-12-04 01:29:26 (r1858) by sungo
  poe/lib/POE/Kernel.pm M; poe/lib/POE/Session.pm M

    add documentation for the new exception handling code 

  2005-11-30 06:05:12 (r1857) by sungo
  poe/lib/POE/Resource/Signals.pm M; poe/lib/POE/Kernel.pm M

    roll exception handling (ala POE::Exceptions) into the core. this
    patch creates a new terminal signal called DIE. if an exception
    occurs, this signal is sent to the session that caused the exception.
    by the nature of signals, if the child fails to handle the excpetion,
    the signal propogates up the session tree until either someone
    handles the signal or the poe environment collapses. two small tweaks
    were necessary outside of _dispatch_event. session_alloc needed to
    cache the value of _data_alias_loggable, for later logging, and it
    needed to check to see if the new session survived _start and _child
    dispatches. currently this new functionality is undocumented and does
    not have its own unit tests. this oversight will be corrected soon.
    right now, all current tests pass without modification on gentoo
    linux running kernel version 2.6.14 and perl 5.8.7. 

  2005-11-30 02:46:57 (r1856) by sungo
  poe/tests/30_loops/00_base/k_detach.pm M

    change a raft full of ok($string eq "string") tests to is($string,
    "string") for easier test debugging 

  2005-11-26 06:55:31 (r1855) by rcaputo
  poe/lib/POE/Filter/HTTPD.pm M; poe/tests/10_units/05_filters/03_http.t
  M

    MSIE bites early and often. In this case, it's sending "\x0D\x0A"
    after Content-Length octets of POST request, which is clearly in
    violation of w3.org statute number mumble. Here we see the intrepid
    Philip Gwyn patch Filter::HTTPD to ignore whitespace after a full
    request. 

  2005-11-21 06:50:35 (r1854) by hachi; poe/lib/POE/Resource/Signals.pm M

    Mandatory warning for reaped processes to pair with sigchld semantics
    changing. This loop will block the Kernel shutdown until all
    processes are reaped. All tests pass. 

  2005-11-21 06:26:51 (r1853) by hachi
  poe/tests/90_regression/merijn-sigchld-system.t M

    Probably should test after removing the signal watcher again. 

  2005-11-07 06:59:07 (r1852) by hachi
  poe/lib/POE/Resource/Signals.pm M; poe/lib/POE/Resource/Sessions.pm M

    Change signal watchers so they keep sessions alive.
    
    WARNING: This is a major semantics change in POE. It has the
    potential to make code 'hang' in places where it formerly did not.
    
    This change is necessary so sessions expressing an interest in SIG
    CH?LD do not die prematurely. (There is a planned mandatory warning
    for reaped children that were not being watched.) This change fixes
    RT 15215. 

  2005-11-07 06:49:31 (r1851) by hachi; poe/lib/POE/Loop/PerlSignals.pm M

    Disable use of $SIG{CH?LD} = "IGNORE". This cannot be done in perl
    without breaking system() and friends. This fixes a failing
    tests/90_regression/merijn-sigchld-system.t 

  2005-11-07 04:21:07 (r1850) by apocal; poe/lib/POE/Kernel.pm M

    Updated to check for number of sessions in run() and skip the event
    loop if sessions == 0 

  2005-10-22 08:34:44 (r1849) by rcaputo; poe/lib/POE/Kernel.pm M

    Resolved a conflict between two event types. The recursive signal
    type shared a value with a statistics gathering event type. Now they
    don't overlap. 

  2005-10-19 18:27:18 (r1848) by hachi
  poe/tests/90_regression/rt1648-tied-stderr.t M

    We need to watch for the child process ending in this test so we are
    a good example for the rest of people, and to avoid a mandatory
    warning that may be added in a near-future revision of POE. 

  2005-10-14 17:47:27 (r1847) by rcaputo; poe/MANIFEST.SKIP M

    Toy around with the idea of auto-generating MANIFEST at distribution
    time. I'm not satisfied with the opt-out nature of MANIFEST.SKIP.
    It's too easy to create a temporary file and forget to add it to the
    skip file. Next thing I know, crap's being distributed in the
    tarball. Possibly proprietary crap. I can't have that. 

  2005-10-14 17:26:19 (r1846) by rcaputo; poe/MANIFEST M

    Add Jonathan Steinert's test to the MANIFEST. 

  2005-10-14 16:15:38 (r1845) by hachi
  poe/tests/90_regression/merijn-sigchld-system.t M

    Start making this test more portable, someone please suggest
    something I can use on Windows 

  2005-10-14 15:21:16 (r1844) by hachi
  poe/tests/90_regression/merijn-sigchld-system.t A

    SIGCHLD bug reported by Merijn Broeren on October 13 2005 on the
    mailing list. This test evokes the proper results for me (failure on
    new POE, success on old POE) on Linux 2.6, should be portable but I'm
    not positive. 

  2005-10-05 21:58:46 (r1843) by rcaputo; poe/lib/POE/Loop.pm M

    "Elly" in IRC suggested that the POE::Loop documentation explicitly
    point out that POE::Loop classes aren't used directly. And that the
    DESCRIPTION point to more detail about how the loops are actually
    used. So here's a fix for that. 

  2005-09-08 16:40:19 (r1842) by rcaputo
  poe/tests/10_units/05_filters/04_line.t M;
  poe/tests/90_regression/broeren-win32-nbio.t M;
  poe/tests/30_loops/00_base/ses_session.pm M;
  poe/tests/90_regression/rt1648-tied-stderr.t M

    Applied Philip Gwyn's patch to avoid errors on old Perl versions. 

  2005-09-08 16:26:45 (r1841) by rcaputo
  poe/lib/POE/Loop/IO_Poll.pm M; poe/lib/POE/Kernel.pm M

    Applied Philip Gwyn's patch to skip IO::Poll if it doesn't define a
    constant we need. 

  2005-09-08 01:59:33 (r1840) by rcaputo
  poe/lib/POE/Component/Server/TCP.pm M

    Philip Gwyn discovered a slight problem with his previous patch.
    Increasing the concurrency limit wouldn't resume the listener. This
    applies his fix. 

  2005-09-07 20:10:39 (r1839) by rcaputo
  poe/tests/30_loops/00_base/comp_tcp_concurrent.pm A;
  poe/lib/POE/Component/Server/TCP.pm M; poe/MANIFEST M

    Philip Gwyn added a Concurrency parameter to PoCo::Server::TCP. It
    limits the number of concurrent connections the server can handle. 

  2005-09-07 04:25:37 (r1838) by rcaputo
  poe/tests/30_loops/00_base/comp_tcp.pm M

    Removed a delete() that was used to close a connection. Server::TCP
    doesn't require such heavy-handed methods anymore. 

===========================
2005-09-02 16:42:27 v0_3202
===========================

  2005-09-02 16:42:27 (r1836) by rcaputo; poe/lib/POE.pm M

    Bump up the version slightly for a new release. 

  2005-08-29 20:35:04 (r1835) by rcaputo
  poe/lib/POE/Wheel/ReadWrite.pm M

    Remove a $kernel->select() call that was accidentally left in during
    a prior fix. 

  2005-08-22 17:34:25 (r1834) by rcaputo
  poe/lib/POE/Loop/Select.pm M; poe/lib/POE/Kernel.pm M

    Joel Bernstein pointed out a few warnings when POE is run under -W
    (rather than -w). We can't have that, and now we don't. 

===========================
2005-08-19 17:01:32 v0_3201
===========================

  2005-08-19 17:01:32 (r1832) by rcaputo; poe/lib/POE.pm M

    Bump the version for a bugfix release. 

  2005-08-19 16:12:46 (r1831) by rcaputo
  poe/lib/POE/Wheel/Run.pm M; poe/lib/POE/Wheel/ReadWrite.pm M;
  poe/lib/POE/Component/Server/TCP.pm M

    Abhishek Jain discovered a heretofore obscure socket leakage issue in
    POE::Component::Server::TCP. New connection sockets were passed into
    callbacks as closures, preventing them from being closed timely on
    shutdown unless a session also exited. This commit fixes the problem
    by passing new connections through POE::Session's args parameter
    rather than tying them up in closures. 

  2005-08-10 14:44:08 (r1830) by rcaputo; poe/lib/POE/Kernel.pm M

    Invoke event handlers in void context if the dispatcher is called in
    void context. Previously handlers would be called in scalar context,
    causing a subtle edge case where objects wouldn't destruct properly. 

  2005-08-10 14:28:16 (r1829) by rcaputo; poe/lib/POE/Wheel/ReadLine.pm M

    Fix an amazing amount of tab damage. Yes, this commit is entirely to
    fix whitespace. 

==============
End of Excerpt
==============
