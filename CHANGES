=========================
2003-09-27 05:37:28 v0_27
=========================

  2003-09-27 05:37:28 by rcaputo; POE.pm 1.162; README 1.105

    Prepare for 0.27 release. 

  2003-09-16 19:49:43 by rcaputo; POE/Wheel/ReadLine.pm 1.28

    Supply a B38400 symbol if the local version of POSIX.pm won't. 

  2003-09-16 14:58:48 by rcaputo; POE/Loop/Poll.pm 1.23

    Replace _confess with _trap to increase some error severities. 

  2003-09-16 14:58:14 by rcaputo
  POE/Loop/Select.pm 1.50; POE/Loop/TkActiveState.pm 1.5

    Replace _confess calls with _trap calls to increase the severity of
    some errors. 

  2003-09-16 14:53:40 by rcaputo; POE/Kernel.pm 1.260;
  POE/Resource/Aliases.pm 1.8; POE/Resource/Events.pm 1.5;
  POE/Resource/Extrefs.pm 1.6; POE/Resource/FileHandles.pm 1.7;
  POE/Resource/SIDs.pm 1.7; POE/Resource/Sessions.pm 1.9

    Add POE::Kernel::_trap for errors internal to POE's core. This is a
    "kernel trap" level of error reporting. Replace many of the _confess
    calls with _trap calls throughout POE's core modules. Wrap many of
    the internal consistency checks in ASSERT_DATA blocks so they are
    only executed during testing. 

  2003-09-16 14:51:18 by rcaputo; POE/Resources.pm 1.2

    Rethrow any errors caught in POE::Resource modules. 

  2003-09-16 14:50:12 by rcaputo; POE/Component/Client/TCP.pm 1.35;
  POE/Component/Server/TCP.pm 1.39; POE/Driver/SysRW.pm 1.24

    Increase default block sizes to 65536. This improves performance in
    high-throughput applications at the expense of some memory. 

  2003-09-16 14:48:26 by rcaputo; POE/Wheel/ReadWrite.pm 1.64

    Properly set the high watermark state when put() exceeds it. Also
    avoid redundant calls to select_write(). 

  2003-09-15 20:26:52 by rcaputo; POE/Filter/HTTPD.pm 1.29

    Include the tilde (~) as part of the legal character class for HTTP
    header names, per RFC 2616. Thanks to Fabrice Dulaunoy for
    discovering this and especially for suggesting how to fix it. 

  2003-09-15 04:51:37 by rcaputo; POE/Kernel.pm 1.259

    Add a stub for Gtk2 support. Need a way that eliminates POE::Kernel
    hacking for each event loop we want to support. 

  2003-09-10 23:30:40 by rcaputo; POE/Wheel/Run.pm 1.51

    Andrew Chen pointed out that the -9 signal doesn't work. Corrected it
    to 9 in the docs. 

  2003-09-01 04:16:35 by rcaputo; samples/readline.perl 1.5

    James March's "UNIX Clients" recipe uses POE::Wheel::Readline. 

  2003-08-31 02:43:10 by sungo
  MANIFEST 1.90; META.yml 1.1; lib/Build.PL 1.1

    add META.yml to make activestate automated ppd building happy again.
    add Build.PL i used to make the meta file 

  2003-08-31 02:07:50 by rcaputo; lib/Makefile-5005.pm 1.32

    Avoid ExtUtil::AutoInstall prompts if STDIN isn't a terminal. Bypass
    the prompts by assuming --default behavior. 

  2003-08-27 01:52:24 by rcaputo; POE/Wheel/Run.pm 1.50

    Dorian suggested moving the setgid code before the setuid code, so
    that changing from root -> not-root won't disallow changing the group
    ID. It made sense, thus this patch. 

  2003-08-27 01:50:48 by rcaputo; POE/Wheel/ReadLine.pm 1.27

    Reformatted a line to be less than 80 columns. 

  2003-08-10 19:48:18 by rcaputo; POE/Wheel/FollowTail.pm 1.47

    Move the size-saving code so that it always moves the current size to
    the last one. This should detect file shrinkage better. 

  2003-08-10 19:14:45 by rcaputo; POE/Wheel/FollowTail.pm 1.46

    Perform a proper fix for the file size shrinkage. Rather than reopen
    the file unconditionally, seek back to the start of it. 

  2003-08-10 18:59:55 by rcaputo; POE/Wheel/FollowTail.pm 1.45

    Azhrarn discovered that Linux only reports file shrinkage (nothing
    else) when a file is reset by `cat > file` and pressing ^D. This
    patch treats only file shrinkage as reset. 

  2003-08-07 20:20:44 by rcaputo; POE/Loop/Select.pm 1.49

    Minor syntax cleanups as a result of trying (and failing) to
    determine the magnitude of arbitrary system clock shifts. 

  2003-07-29 00:25:28 by rcaputo
  POE/Component/Client/TCP.pm 1.34; POE/Component/Server/TCP.pm 1.38

    Silence the "connection reset by peer" errors, which indicate that a
    client has unceremoniously disconnected. To reiterate: These errors
    only occur in the default ClientError callback. Custom callbacks
    still receive notification of the errors and can handle them any way
    they see fit. 

  2003-07-28 05:14:14 by rcaputo; POE/Kernel.pm 1.258; POE/Queue.pm 1.2;
  POE/Queue/Array.pm 1.3; t/001_queue.t 1.5

    After many requests, I have finally added delay_adjust(). This resets
    a specific timer (as set with delay_set) to be a new number of
    seconds into the future. This is good for watchdogs and timeouts. 

  2003-07-27 18:29:54 by rcaputo
  POE/Component/Client/TCP.pm 1.33; POE/Component/Server/TCP.pm 1.37

    Carl suggested that the TCP client and server not report "error 0"
    (normall disconnection) by default. He's the last in a long line of
    people to do so. "When three people tell you you're sick, lie down."
    The error message is removed in this patch. 

  2003-07-18 22:47:44 by rcaputo; POE/Wheel/Run.pm 1.49

    jdeluise suggested that we document how to scrub a child process'
    shell environment before executing external programs. This patch adds
    that information. 

  2003-07-17 19:25:51 by rcaputo; POE/Wheel/Run.pm 1.48

    Apply Leif Gustafson's patch to pass conduit types on to
    POE::Pipe::TwoWay. 

  2003-07-17 18:25:03 by rcaputo
  POE/Pipe/OneWay.pm 1.12; POE/Pipe/TwoWay.pm 1.15

    Fixed a subtle bug in the new pipe selection code. 

  2003-07-16 17:00:25 by rcaputo
  POE/Pipe.pm 1.10; POE/Pipe/OneWay.pm 1.11; POE/Pipe/TwoWay.pm 1.14

    Leif Gustafson discovered a nasty little bug in POE::Pipe::TwoWay
    that was triggered by the recent changes to POE::Wheel::Run... but
    only on cygwin! What a nasty confluence of circumstance. Thank you,
    Leif. This patch should help that a lot, and it finally cleans up the
    really messy RUNNING_IN_HELL stuff in the pipe classes. 

  2003-07-16 06:34:46 by rcaputo; POE.pm 1.161

    Applied Rich Morin's documentation edits. 

  2003-07-15 14:58:21 by rcaputo
  POE/Kernel.pm 1.257; POE/Loop/Gtk.pm 1.36

    Merge in Bruno Boettcher's Gnome.pm as part of Gtk.pm since they're
    very closely related and with a few exceptions identical. 

  2003-07-14 14:41:03 by rcaputo
  POE/Pipe/TwoWay.pm 1.13; POE/Wheel/Run.pm 1.47

    jdeluise discovered a longstanding bug in cygwin's socketpair and/or
    exec implemenation. This caused POE::Wheel::Run tests to fail on that
    platform. This patch causes the wheel to use pipe, which works,
    instead. 

  2003-07-13 16:39:40 by rcaputo
  POE/Wheel/FollowTail.pm 1.44; t/14_wheels_ft.t 1.14

    Applied a modified version of jrieks' Seek patch. This lets you seek
    forwards from the start of a file. Negative Seek does the same as
    SeekBack, and negative SeekBack does the same as Seek. It's not
    tested, though: TODO add seek/seekback tests to t/14_wheels_ft.t 

  2003-07-13 04:24:33 by rcaputo
  POE/Loop/Poll.pm 1.22; POE/Loop/Select.pm 1.48

    Remove the dependency on $^T and the assumption that it will never
    change. This is only an issue during tracing. 

  2003-07-11 15:39:47 by rcaputo; POE/Loop/Gtk.pm 1.35

    Bruno Boettcher discovered the Gtk event loop didn't work with the
    Gnome abstraction. A quick change fixed that. 

  2003-07-10 20:17:31 by rcaputo
  t/02_alarms.t 1.15; t/08_errors.t 1.50; t/res/filehandles.t 1.4

    The tests had some timing issues that only show up on the 486. This
    commit makes the tests less timing-sensitive. 

  2003-07-10 04:55:11 by rcaputo; POE/Kernel.pm 1.256

    Correct localized STDERR for Perl 5.8.0. 

  2003-07-10 04:14:58 by rcaputo; POE/Kernel.pm 1.255

    Nick discovered that sessions sometimes aren't garbage collected when
    using call() to invoke their states, and he provided a tidy test case
    to prove it. Thank you, Nick! Once I understood the problem, it was
    easy enough to track it down and solve. Called sessions are GC'd now
    if they aren't the same as the calling sessions. Callers will get GC
    tested if they are the same (because they've been posted to some time
    up the chain). 

  2003-07-09 18:20:41 by rcaputo; POE/Kernel.pm 1.254;
  POE/Loop/Event.pm 1.33; POE/Loop/Gtk.pm 1.34;
  POE/Loop/PerlSignals.pm 1.3; POE/Loop/Poll.pm 1.21;
  POE/Loop/Select.pm 1.47; POE/Loop/TkActiveState.pm 1.4;
  POE/Loop/TkCommon.pm 1.2; POE/NFA.pm 1.23; POE/Resource/Aliases.pm 1.7;
  POE/Resource/Events.pm 1.4; POE/Resource/Extrefs.pm 1.5;
  POE/Resource/FileHandles.pm 1.6; POE/Resource/SIDs.pm 1.6;
  POE/Resource/Sessions.pm 1.8; POE/Resource/Signals.pm 1.8;
  POE/Session.pm 1.87; t/001_queue.t 1.4; t/00_coverage.t 1.19;
  t/01_sessions.t 1.24; t/02_alarms.t 1.14; t/03_aliases.t 1.14;
  t/04_selects.t 1.19; t/05_macros.t 1.8; t/06_tk.t 1.44;
  t/07_event.t 1.18; t/08_errors.t 1.49; t/09_wheels_unix.t 1.16;
  t/10_wheels_tcp.t 1.15; t/11_signals_poe.t 1.26;
  t/12_signals_ev.t 1.19; t/13_wheels_udp.t 1.6; t/14_wheels_ft.t 1.13;
  t/15_filter_block.t 1.6; t/16_filter_stream.t 1.5;
  t/17_filter_ref.t 1.8; t/18_filter_line.t 1.9;
  t/19_filterchange.t 1.13; t/20_accept.t 1.7; t/21_gtk.t 1.18;
  t/22_wheel_run.t 1.33; t/23_nfa.t 1.8; t/24_filter_stack.t 1.5;
  t/25_detach.t 1.6; t/26_comp_tcp.t 1.5; t/27_poll.t 1.8;
  t/28_windows.t 1.7; t/29_sockfact6.t 1.11; t/res/aliases.t 1.6;
  t/res/events.t 1.3; t/res/extrefs.t 1.6; t/res/filehandles.t 1.3;
  t/res/sessions.t 1.4; t/res/sids.t 1.3; t/res/signals.t 1.3

    Allow internal traces to be shunted to a file without using STDERR.
    This lets applications' (and tests') errors shine through while
    logging POE's internal traces somewhere else. To be sure, the default
    behavior of dumping everything to STDERR still exists. 

  2003-07-09 04:25:09 by rcaputo; POE/Wheel/ReadWrite.pm 1.63

    Avi Finkel noticed a lack of a POE::Wheel::Write, or a write-only
    wheel. He's writing files over NFS, so a non-blocking solution helps
    in his case. I documented the little-known fact that ReadWrite
    doesn't try to read if InputEvent isn't defined. 

  2003-07-08 13:36:59 by rcaputo; t/res/extrefs.t 1.5

    Fix a test which was invalidated by the change in Resource::Extrefs. 

  2003-07-08 00:33:08 by rcaputo; t/06_tk.t 1.43

    So apparently the reason ActiveState hasn't been building
    distributions of POE is because of unreported errors in the install
    process. The latest--and only--problem is a Tk test failure because
    there's a DISPLAY environment variable pointing to an unreachable X
    server. This patch skips Tk testing if the X server is unreachable,
    so--fingers crossed--we should see proper PPDs built out of POE
    starting with 0.27. 

  2003-07-06 18:46:07 by rcaputo
  POE/Kernel.pm 1.253; POE/Resource/Extrefs.pm 1.4

    Bruno Boettcher discovered an obscure, yet hideously fatal bug in
    POE's cross-checking code. The code in ASSERT_REFCNT that
    cross-checks a calculated reference count against the stored ones
    does not count references properly, causing a test failure. The test
    itself was broken and is fixed now. 

  2003-07-05 21:04:56 by rcaputo; POE/Resource/Events.pm 1.3;
  POE/Resource/Sessions.pm 1.7; POE/Session.pm 1.86

    Clean up some code structure. Nothing gets fixed. 

  2003-07-05 21:03:56 by rcaputo; POE/Kernel.pm 1.252

    Fixed a documentation typo. 

  2003-07-03 16:34:57 by rcaputo; POE/Filter/Line.pm 1.23

    Clear up some error messages while documenting them. 

  2003-07-03 16:26:50 by rcaputo; POE/Kernel.pm 1.251

    Bruno Boettcher was banging his head on an ASSERT_USAGE message that
    wasn't very helpful. It turns out to have been a bad parameter line
    in _explain_usage(), which is fixed by this patch. 

  2003-06-26 15:33:10 by rcaputo; POE/Loop/Gtk.pm 1.33

    "kaffee" reported warnings in loop_attach_uidestroy(). He suggested
    returning 0 instead of undef from the UIDESTROY callback, which this
    patch does. 

  2003-06-22 05:37:34 by rcaputo; POE/Loop/TkActiveState.pm 1.3

    Remove a bare debugging warn. 

  2003-06-19 20:06:00 by rcaputo; lib/ExtUtils/AutoInstall.pm 1.4

    Assimilate the latest (0.52) version of ExtUtils::AutoInstall. This
    should fix the "instaldeps" part of POE's installer. 

  2003-06-09 19:18:27 by rcaputo
  POE/Kernel.pm 1.250; POE/Loop/TkActiveState.pm 1.2; t/08_errors.t 1.48

    Debugged the initial ActiveState Tk support on a real live Windows
    machine. This commit fixes lots of little things and gets the tests
    working on Windows and UNIX. 

  2003-06-09 17:31:05 by rcaputo
  POE/Loop/TkActiveState.pm 1.1; POE/Loop/TkCommon.pm 1.1

    Of course we can't really begin to support ActivePerl+Tk without the
    files themselves. So. 

  2003-06-09 17:28:22 by rcaputo; MANIFEST 1.89;
  POE/Loop/PerlSignals.pm 1.2; POE/Loop/Select.pm 1.46;
  POE/Loop/Tk.pm 1.41; t/06_tk.t 1.42; t/08_errors.t 1.47

    Support Tk under ActivePerl by polling for socket activity every 1/10
    second. This is ugly. It's inefficient. And it's the only known way
    to make things work at this time. Bleah. 

  2003-06-09 16:02:41 by rcaputo; POE.pm 1.160

    Aw, heck. I forgot to update this to a development version. 

  2003-06-09 15:37:47 by rcaputo; MANIFEST 1.88

    Forgot to add the new file in my previous commit. 

  2003-06-09 15:36:27 by rcaputo; POE/Kernel.pm 1.249;
  POE/Loop/Gtk.pm 1.32; POE/Loop/PerlSignals.pm 1.1;
  POE/Loop/Poll.pm 1.20; POE/Loop/Select.pm 1.45; POE/Loop/Tk.pm 1.40;
  t/08_errors.t 1.46

    Moved the plain-Perl signal handling code into
    POE::Loop::PerlSignals. This code was common to the Gtk, Poll,
    Select, and Tk event loops. 

  2003-06-05 18:09:40 by rcaputo
  POE/Component/Client/TCP.pm 1.32; POE/Component/Server/TCP.pm 1.36

    Matt Harrington pointed out that Client:: and Server::TCP did not
    auto-use the filter classes they're given. I noticed that this aspect
    of those components was not documented, so now it's rather clear that
    you must "use" the classes yourself. 

  2003-06-03 21:40:25 by sungo
  POE/Resource/Sessions.pm 1.6; POE/Resource/Signals.pm 1.7

    move two initializeii to preload. we need to formalize names here.
    did this to avoid redefine warnings 

  2003-06-03 18:55:06 by sungo; POE/Resource/FileHandles.pm 1.5

    add the kr_filenos hash back into the kernel in the documented stop.
    violate the naming convention a little bit to avoid trampling the
    preexisting initialization routine 

  2003-06-03 18:04:42 by sungo
  POE/Kernel.pm 1.248; POE/Resource/SIDs.pm 1.5

    add a ref to sid_seq into the kernel in the documented spot 

  2003-06-03 17:39:49 by rcaputo
  lib/Makefile-5004.pm 1.15; lib/Makefile-5005.pm 1.31

    Add some of our test results files to the ones that get unlinked on
    "make clean". Thanks to sungo for pointing this out. 

  2003-06-03 17:37:52 by sungo; POE/Kernel.pm 1.247

    KR_QUEUE was a ref to ref. now is just a ref :) 

  2003-06-03 17:34:46 by rcaputo; POE/Resource/Aliases.pm 1.6;
  POE/Resource/SIDs.pm 1.4; POE/Resource/Signals.pm 1.6

    Update initializers to reflect the current naming conventions. 

  2003-06-03 17:34:34 by sungo; POE/Kernel.pm 1.246

    update the location of things in some comments. 

  2003-06-03 16:31:17 by rcaputo; MANIFEST.SKIP 1.6

    Add new junk files, sort, and generally tidy up. 

  2003-06-03 15:55:24 by sungo; POE/Resource/SIDs.pm 1.3

    put session_ids hash back into the kernel in the documented spot 

  2003-06-03 15:28:52 by sungo; POE/Resource/Aliases.pm 1.5

    load the aliases hash into the kernel in the documented spot 

  2003-06-03 15:24:08 by sungo; POE/Resource/Signals.pm 1.5

    load signals hash back into the kernel 

  2003-06-03 04:55:28 by rcaputo; lib/coverage.perl 1.8

    Ignore several things that falsely show up as uninstrumented code.
    The true value that all modules must end with. C<use> statements.
    Constant sub definitions. $VERSION definitions. 

  2003-06-03 04:53:47 by rcaputo; lib/Devel/Trace.pm 1.8

    Remove the code that blockes signals while tracking runtime
    statistics. The signal masking was causing signal tests to hang, and
    removing it didn't break anything. 

  2003-06-03 04:42:01 by rcaputo; POE/NFA.pm 1.22

    Some TRACE_FOO output was sent to STDOUT. Replace print() with warn()
    to send it to STDERR instead. 

  2003-06-03 03:29:51 by rcaputo; t/001_queue.t 1.3;
  t/00_coverage.t 1.18; t/01_sessions.t 1.23; t/02_alarms.t 1.13;
  t/03_aliases.t 1.13; t/04_selects.t 1.18; t/05_macros.t 1.7;
  t/06_tk.t 1.41; t/07_event.t 1.17; t/08_errors.t 1.45;
  t/09_wheels_unix.t 1.15; t/10_wheels_tcp.t 1.14;
  t/11_signals_poe.t 1.25; t/12_signals_ev.t 1.18; t/13_wheels_udp.t 1.5;
  t/14_wheels_ft.t 1.12; t/15_filter_block.t 1.5;
  t/16_filter_stream.t 1.4; t/17_filter_ref.t 1.7;
  t/18_filter_line.t 1.8; t/19_filterchange.t 1.12; t/20_accept.t 1.6;
  t/21_gtk.t 1.17; t/22_wheel_run.t 1.32; t/23_nfa.t 1.7;
  t/24_filter_stack.t 1.4; t/25_detach.t 1.5; t/26_comp_tcp.t 1.4;
  t/27_poll.t 1.7; t/28_windows.t 1.6; t/29_sockfact6.t 1.10;
  t/res/aliases.t 1.5; t/res/events.t 1.2; t/res/extrefs.t 1.4;
  t/res/filehandles.t 1.2; t/res/sessions.t 1.3; t/res/sids.t 1.2;
  t/res/signals.t 1.2

    Enable TRACE_DEFAULT, and direct STDERR to a file so the tests remain
    quiet. 

  2003-06-03 02:39:41 by rcaputo; MANIFEST 1.87; t/res/filehandles.t 1.1

    Add t/res/filehandles.t (200-ish new tests! gods, that was tedious). 

  2003-06-03 02:37:27 by rcaputo; POE/Resource/FileHandles.pm 1.4

    Add accessors so that tests can verify the subsystem's internal
    state. Perhaps instead of this, we should write a function that
    cross-checks everything inside and returns a good/bad value. That way
    we won't need to break encapsulation for testing. 

  2003-06-02 20:21:01 by rcaputo; POE/Resource/FileHandles.pm 1.3

    Added the finalized-ok flag and return value for testing. Corrected a
    bug (misunderstood data structure) in _data_handle_finalize(), and
    documented the proper structure in comments. 

  2003-06-02 18:52:49 by sungo; POE/Kernel.pm 1.245

    add some comments about where resources are and maybe should be
    loaded from 

  2003-06-02 08:44:27 by rcaputo; MANIFEST 1.86; t/res/signals.t 1.1

    Add another sixty or so tests. :) 

  2003-06-02 08:43:29 by rcaputo; t/res/sessions.t 1.2

    Removed some junk comments. 

  2003-06-02 08:43:08 by rcaputo; POE/Resource/Signals.pm 1.4

    Add some internals accessors so the tests can get at necessary
    values. Had to rename an existing function because a new one seemed
    to fit the name better. 

  2003-06-02 08:41:28 by rcaputo; POE/Kernel.pm 1.244

    Migrate a function call to the outside of a loop. That might cut down
    the number of function calls in hot loops, and as such seems like a
    good optimization technique. 

  2003-06-02 06:51:10 by rcaputo; POE/Resource/Signals.pm 1.3

    Added the finalized-ok return value to _data_sig_finalize().
    Corrected a bug in _data_sig_watchers() that was found while writing
    tests. It would only return one watcher no matter what; now it
    returns all of the watchers for a signal. 

  2003-06-02 05:54:05 by rcaputo; MANIFEST 1.85; t/res/sessions.t 1.1

    Add the tests for POE::Resource::Sessions. 

  2003-06-02 03:02:44 by rcaputo; POE/Resource/Sessions.pm 1.5

    Add the finalized-ok return value to _data_ses_finalize, so we can
    test that the final state of the subsystem is consistent. 

  2003-06-01 22:38:31 by rcaputo; POE/Resource/Sessions.pm 1.4

    Rename the initialize function _data_ses_initialize to follow the
    current naming convention. 

  2003-06-01 03:05:06 by rcaputo; MANIFEST 1.84; t/res/events.t 1.1

    Added the detailed tests for POE::Resource::Events. 

  2003-06-01 02:56:22 by rcaputo; POE/Resource/Events.pm 1.2

    Added the finalized-ok return value to _data_ev_finalize. Added some
    comments with general observations during test writing. 

  2003-05-31 21:07:11 by sungo; POE/API/ResLoader.pm 1.2

    add documentation and $VERSION to POE::API::ResLoader. also remove
    unnececessary use of Kernel in same module 

  2003-05-31 20:52:54 by sungo; MANIFEST 1.83

    update the manifest with the new files 

  2003-05-31 20:50:47 by sungo; MANIFEST.SKIP 1.5

    avoid the docs/ tree 

  2003-05-31 20:41:58 by sungo; MANIFEST.SKIP 1.4

    add lots more needed things to manifest.skip 

  2003-05-31 20:34:34 by sungo; POE/API/ResLoader.pm 1.1;
  POE/Kernel.pm 1.243; POE/Resource/FileHandles.pm 1.2;
  POE/Resource/Sessions.pm 1.3; POE/Resources.pm 1.1

    add POE::Resources as a place holder until some Kernel internals get
    cleaned up ala resource loading. add POE::API::ResLoader which allows
    POE::Resources a standard initialization method and the ability to
    add custom resources to the kernel. clarify the select() call in
    FileHandles.pm to prevent ambiguitity with the select() in Kerne.pl.
    Fix sessions so they load their resources into the kernel in the
    original and documented spot 

  2003-05-31 18:32:18 by rcaputo
  POE/Resource/SIDs.pm 1.2; t/res/sids.t 1.1

    Add tests for session ID management. 

  2003-05-31 18:18:05 by rcaputo; POE/Resource.pm 1.2;
  POE/Resource/Aliases.pm 1.4; POE/Resource/Extrefs.pm 1.3;
  t/res/aliases.t 1.4; t/res/extrefs.t 1.3

    Remove the previous testing-only accessors from Aliases.pm. Instead,
    standardize on _data_???_finalize returning true if a resource shut
    down cleanly, or false if there were inconsistencies or leaks.
    Document this design decision in POE::Resource. 

  2003-05-31 18:11:21 by rcaputo
  POE/Resource/Aliases.pm 1.3; t/res/aliases.t 1.3

    Add accessors to POE::Resource::Aliases so we can test the module's
    final state. Use the new accessors to test the module's final state
    in a way that causes "make test" to fail. _data_alias_finalize() does
    not do that for us. 

  2003-05-31 17:57:53 by rcaputo; t/res/extrefs.t 1.2

    Make sure that sessions' master reference counts properly reflect the
    status of their extra reference counts. Just more cross-examination. 

  2003-05-31 17:43:32 by rcaputo; t/res/aliases.t 1.2

    Aliases also affect sessions' master reference counts. Add tests to
    make sure those counts are correct. 

  2003-05-31 17:40:18 by rcaputo; POE/Resource/Sessions.pm 1.2

    Added an accessor to get at a session's reference count without
    altering it. This lets us test it against known values in the other
    resource tests. 

  2003-05-31 12:18:01 by rcaputo; MANIFEST 1.82; POE/Resource.pm 1.1;
  t/res/aliases.t 1.1; t/res/extrefs.t 1.1

    Add Resource.pm to document what we know so far about POE::Resource
    classes. Add new, detailed tests for some of the resources. 

  2003-05-31 11:52:04 by rcaputo
  POE/Resource/Aliases.pm 1.2; POE/Resource/Extrefs.pm 1.2

    Comment observations made while writing new tests. 

  2003-05-31 11:48:42 by rcaputo
  lib/Makefile-5004.pm 1.14; lib/Makefile-5005.pm 1.30

    Expand the tests to include one-level subdirectories. 

  2003-05-30 19:35:56 by sungo
  lib/Makefile-5004.pm 1.13; lib/Makefile-5005.pm 1.29

    remove poe_report.xml in make clean/realclean 

  2003-05-20 22:20:19 by rcaputo
  MANIFEST.SKIP 1.3; POE/NFA.pm 1.21; POE/Session.pm 1.85

    Clear up some of the terminology in the session warnings/errors. 

  2003-05-20 19:13:07 by rcaputo; MANIFEST.SKIP 1.2; POE/Kernel.pm 1.242;
  POE/NFA.pm 1.20; POE/Resource/Signals.pm 1.2; POE/Session.pm 1.84

    Upgrade the mandatory signal deprecation warnings to errors.
    Originally scheduled for January 2003. 

  2003-05-13 03:42:19 by rcaputo; MANIFEST 1.81; POE/Kernel.pm 1.241;
  POE/Resource/Aliases.pm 1.1; POE/Resource/Events.pm 1.1;
  POE/Resource/Extrefs.pm 1.1; POE/Resource/FileHandles.pm 1.1;
  POE/Resource/SIDs.pm 1.1; POE/Resource/Sessions.pm 1.1;
  POE/Resource/Signals.pm 1.1

    Split out the "resource" functions from POE::Kernel. The major data
    structures within POE::Kernel have been broken into subsystems and
    moved, along with their accessors, into POE::Resource::*.pm files.
    Each handles the lowest-level data management functions for its
    resource type. This is a step towards implementing XS versions of
    some of POE's hottest code, which will go a long way towards speeding
    things up in the future. 

  2003-05-13 03:29:03 by rcaputo; t/29_sockfact6.t 1.9

    Typographical change in a status warning. No big deal. 

=========================
2003-05-10 17:20:21 v0_26
=========================

  2003-05-10 17:20:21 by rcaputo; POE.pm 1.159; README 1.104

    Increase the version number to 0.26 for release. Revise the README
    for clarity, conciseness, etc. 

  2003-05-08 22:54:43 by rcaputo; t/29_sockfact6.t 1.8

    Add a warning to explain the most likely cause of this module
    hanging. Thanks to Somni for reminding me of the problem. 

  2003-05-04 04:35:59 by rcaputo; POE.pm 1.158

    Increase version from 0.2502 (first release candidate for 0.26) to
    0.2503 (live CVS for any last minute bug fixes before 0.26). 

  2003-05-04 04:33:37 by rcaputo; POE.pm 1.157

    Increasing the version from 0.2501 (CVS after 0.25) to 0.2502 (first
    release candidate for 0.26). 

  2003-05-03 01:46:16 by rcaputo; POE/Wheel/SocketFactory.pm 1.71

    A previous patch to shutdown client sockets before they had closed
    used $self in closures which themselves were stored in $self,
    resulting in circular references that would prevent the patch from
    actually working. This patch goes through some gyrations to break
    those circular references. 

  2003-05-02 12:55:23 by rcaputo; lib/Makefile-5005.pm 1.28

    Require ExtUtils::AutoInstall version 0.50. 

  2003-05-02 12:48:14 by rcaputo; lib/Makefile-5005.pm 1.27

    Add ExtUtils::AutoInstall's postamble() so the automatic installation
    things work. 

  2003-05-02 12:36:20 by rcaputo; POE/Wheel/ReadWrite.pm 1.62

    Added the ability to shutdown() input/output on a ReadWrite wheel
    attached to a socket. Thanks to Peter Chen for suggesting it. 

  2003-04-29 22:18:31 by rcaputo; POE/Kernel.pm 1.240

    Applied Nick Williams' patch to avoid internal inconsistency problems
    with signals use:

    > When using the kernel's signal() method to send a user-defined >
    signal, it's possible to get a signal dispatched to a session which >
    is in the process of shutting down (i.e. about to call the _stop >
    event). However, the garbage collection in >
    _data_sig_free_terminated_sessions doesn't take this into account >
    and can cause POE to die screaming with an internal inconsistency >
    error in _data_ses_collect_garbage. 

  2003-04-29 15:52:59 by rcaputo
  POE/Kernel.pm 1.239; POE/NFA.pm 1.19; t/23_nfa.t 1.6

    Fix POE::NFA's stop() method. Previously it was using POE::Kernel's
    session_free() method, which was recently renamed. 

  2003-04-21 14:54:36 by rcaputo; POE/Kernel.pm 1.238

    Work around the persistent double-GC problem by avoiding a second GC
    on a defunct session. 

  2003-04-08 01:01:44 by rcaputo; POE/Kernel.pm 1.237

    Applied Brandon Beamer's POD patch for $poe_main_window when using Tk
    with POE. 

  2003-04-07 06:19:28 by rcaputo; lib/ExtUtils/AutoInstall.pm 1.3

    Update to version 0.50. 

  2003-04-07 04:22:02 by rcaputo; POE/Wheel/SocketFactory.pm 1.70

    Fixed a leak discovered by dynweb. In client mode, SocketFactory
    would did release its grip on the socket until destroyed. He found
    the leak in a program that passed the socket to
    $kernel->select_read() without destroying the SocketFactory. 

  2003-04-05 06:45:37 by rcaputo; t/08_errors.t 1.44

    Commit Alan Hastings' more proper patch for Cygwin support. 

  2003-04-03 04:01:56 by rcaputo; POE/Wheel/Run.pm 1.46

    Apply Alan Hastings' Cygwin support patch. 

  2003-04-03 04:00:47 by rcaputo; POE/Wheel/SocketFactory.pm 1.69

    Patch the documentation for the Reuse parameter. Also support another
    reasonable alternative. It might be best, however, to trust the user
    to supply a proper Perl boolean value. 

  2003-03-24 16:48:58 by rcaputo
  POE/Wheel/Run.pm 1.45; t/22_wheel_run.t 1.31

    Applied and documented Dmitri Tikhonov's patch for the ProgramArgs
    feature. This lets master programs specify parameters for
    code/programs that are forked off, avoiding closures and the possible
    memory leaks created by them. The tests were extended to exercise the
    new feature. 

  2003-03-24 16:46:32 by rcaputo; lib/cvs-log.perl 1.4

    It seems impossible to avoid duplicate tags (identical timestamp) for
    the initial import of a source tree into CVS. The usual convention is
    to tag the first import as "start", so we ignore any other tags that
    coincide with that. 

  2003-03-16 07:46:10 by rcaputo; t/28_windows.t 1.5

    The two-second timeout was too slow for the 486 I'm using to test
    Windows NT. Increased the timeout to five seconds so that the test
    doesn't trigger false failures on slow machines. 

  2003-03-05 17:22:23 by rcaputo; POE/Kernel.pm 1.236

    Hachi's double-free fix leaves the code in this file, but it's
    commented out. I'm commenting it so archaeologists will know what he
    was thinking. 

  2003-03-05 17:20:13 by rcaputo; POE/Component/Client/TCP.pm 1.31

    Clear the Client::TCP component's alias on shutdown. Otherwise, if
    something else in the program is active, the Client will disconnect
    but its internal session won't _stop. "Buzz Darkyear" on MagNet #poe
    reported this one. 

  2003-03-03 16:27:01 by sungo; POE/Kernel.pm 1.235

    add the ability to disable Time::HiRes usage via a constant. document
    this interface 

  2003-03-03 15:51:46 by sungo; POE/Loop/Select.pm 1.44

    oops. still need to set a minumum select timeout 

  2003-03-03 15:47:18 by sungo; POE/Loop/Select.pm 1.43

    comment out the linux select timeout workaround and comment why 

  2003-03-02 07:20:40 by hachi; POE/Kernel.pm 1.234

    Bug squashing attempt, sessions that used postbacks may in the past
    get garbage collected twice, there was an internal consistency check
    to this effect which made a confess() call.

    I hope I wasn't supposed to increment the version to .2502 or
    something before committing. 

  2003-02-28 22:40:47 by rcaputo; Makefile.PL 1.26

    <sky> what happens is that the code is compiled twice, and the first

    time in the same scope as the ST_TIME <dngnand> This is the 0.22 bug?
    <sky> yes <sky> the bug exists in non threaded and threaded perl
    <sky> but because threaded perl keeps constants on the pad, it

    actually shows <dngnand> Oh! Does it also do this in blead, then?
    <sky> no, but maintblead <sky> blead fixes it <sky> but blead has
    mucho rewritten pad handling <dngnand> Do you think this is something
    that will bite regular

    POE/Perl users? <sky> not in 0.23+ <dngnand> I'll remove the warning
    from Makefile.PL, then. 

  2003-02-27 00:10:35 by cwest; POE/Wheel/FollowTail.pm 1.43

    From the mailing list:

    Date: Tue, 25 Feb 2003 16:28:11 -0800

    From: Jim Westfall <jwestfall@surrealistic.net>

    To: poe@perl.org

    Subject: FollowTail behavior change with SeekBack

    I recently upgraded to 0.25 from 0.23 and noticed there is a

    behavior change to FollowTail with the SeekBack option. A

    'SeekBack' => 0 is now causing it to seek back instead of seeking to

    the EOF like one would expect. The code was as follows

    my $seek_back = ( (defined $params{SeekBack})

    ? $params{SeekBack}

    : 4096

    );

    and has been changed to

    my $seek_back = $params{SeekBack} || 4096;

    so now if $params{SeekBack} is undefined or set to 0 it will make

    $seek_back 4096. simple workaround on my part is to set SeekBack to

    -1.

    A simular situation exists with the PollInterval option, tho I dunno

    if 0 would be a valid option for it.

    __END__

    This was a short sided change. The old behaviour is correct and has
    been restored. 

  2003-02-22 03:00:35 by sungo; lib/events_per_second.pl 1.1

    first stab at a benchmark of various event loops. run with --help
    option for usage 

  2003-02-18 15:08:55 by rcaputo; t/08_errors.t 1.43

    Cygwin doesn't give us warnings when creating this bogus
    SocketFactory. This patch works around Cygwin's strange behavior in a
    most unsatisfying way. 

  2003-02-07 19:34:20 by rcaputo; POE.pm 1.156

    Bump the version to the next "CVS" number. 

=========================
2003-02-07 17:48:47 v0_25
=========================

  2003-02-07 17:48:47 by rcaputo; POE.pm 1.155; README 1.103

    Finalize things for the imminent 0.25 release. 

  2003-02-07 05:03:43 by hachi
  POE/Component/Client/TCP.pm 1.30; POE/Component/Server/TCP.pm 1.35

    Documentation cleanup in PoCo::Client::TCP and PoCo::Server::TCP

    First time I committed CVS (outside of my own hard drive) Yay me! 

  2003-02-06 20:07:15 by rcaputo; t/04_selects.t 1.17

    This fix is against against revision 1.14. Forcing that new test to
    use "inet" pipes breaks on systems where localhost is firewalled.
    Tweaked the test to use whichever pipes it can under non-Windows
    operating systems, and forced it to "inet" for MSWin32. A real
    solution would be to skip the test entirely if the pipe can't be
    built. I suspect we'll need to revisit this later. 

  2003-02-06 03:30:38 by rcaputo; t/06_tk.t 1.40

    It is unfortunate, but a bug in ActivePerl 5.8.0's version of Tk
    prevents us from supporting Tk at all in this build. We regret the
    inconvenience and hope that support can resume in a future ActivePerl
    build. Meanwhile, you may follow the status of the bug at
    http://bugs.activestate.com/show_bug.cgi?id=22619 

  2003-02-06 03:25:52 by rcaputo; POE/Loop/Tk.pm 1.39

    Collateral refactoring while trying to work around ActivePerl's
    problem with Tk, and Tk's problem with my preferred workaround. 

  2003-02-05 16:22:11 by rcaputo; POE/Kernel.pm 1.233

    Nancy Grady pointed out that Randal Schwartz's listing at
    http://www.stonehenge.com/merlyn/LinuxMag/col41.listing.txt was not
    exiting when it was done. This turned out to be a missing garbage
    collection test in POE::Kernel, introduced during the Great
    Refactoring of 2002. This fix adds back the GC test that was removed. 

  2003-02-04 03:32:01 by rcaputo; POE/Pipe.pm 1.9

    Bad Rocco! Always verify copied/pasted/tweaked code has actually been
    tweaked, or you'll keep doing things like what was fixed here.
    Luckily it hadn't caused any trouble to speak of. 

  2003-02-01 19:13:27 by cwest
  POE/Component/Client/TCP.pm 1.29; POE/Component/Server/TCP.pm 1.34

    The code to validate SessionParams was broken. Even when
    SessionParams was defined correctly, it was overwritten with an empty
    array reference. This has been fixed. 

  2003-02-01 04:52:07 by cwest; t/001_queue.t 1.2; t/00_coverage.t 1.17;
  t/01_sessions.t 1.22; t/02_alarms.t 1.12; t/03_aliases.t 1.12;
  t/04_selects.t 1.16; t/05_macros.t 1.6; t/06_tk.t 1.39;
  t/07_event.t 1.16; t/08_errors.t 1.42; t/09_wheels_unix.t 1.14;
  t/10_wheels_tcp.t 1.13; t/11_signals_poe.t 1.24;
  t/12_signals_ev.t 1.17; t/13_wheels_udp.t 1.4; t/14_wheels_ft.t 1.11;
  t/15_filter_block.t 1.4; t/16_filter_stream.t 1.3;
  t/17_filter_ref.t 1.6; t/18_filter_line.t 1.7;
  t/19_filterchange.t 1.11; t/20_accept.t 1.5; t/21_gtk.t 1.16;
  t/22_wheel_run.t 1.30; t/23_nfa.t 1.5; t/24_filter_stack.t 1.3;
  t/25_detach.t 1.4; t/26_comp_tcp.t 1.3; t/27_poll.t 1.6;
  t/28_windows.t 1.4; t/29_sockfact6.t 1.7

    Resolving Ticket #1597 on rt.cpan.org

    All tests now look in ./lib, ../lib, .., and . for libraries so as to
    not go testing already installed libraries. 

  2003-02-01 04:17:41 by cwest; POE/Component/Client/TCP.pm 1.28

    Added new() parameters SessionType and SessionParams. SessionType
    allows you to override the default POE session handler, POE::Session,
    with your choice of drop in replacement such as
    POE::Session::MultiDispatch. SessionParams allows you to pass extra
    arguments to the SessionType's constructor. Most useful are things in
    the options hash. 

  2003-02-01 04:04:39 by cwest; POE/Component/Server/TCP.pm 1.33

    Added create() parameters SessionType and SessionParams. SessionType
    allows you to override the default POE session handler, POE::Session,
    with your choice of drop in replacement such as
    POE::Session::MultiDispatch. SessionParams allows you to pass extra
    arguments to the SessionType's constructor. Most useful are things in
    the options hash. 

  2003-01-26 03:30:39 by rcaputo
  POE/Kernel.pm 1.232; POE/Wheel/Run.pm 1.44

    The old HP-UX SIGRTMIN bug in Perl bit us again on Gentoo Linux. It
    appears the hints for that platform allow all these non-signal
    /SIG.*/ symbols into the %SIG hash, and setting them causes perl to
    segfault. Normally we wouldn't know about it, but recent signal
    reforms have reintroduced the errors. This time we build a single
    list of safe signals and use that instead of keys(%SIG). If we're
    lucky, this will be the last of that. 

  2003-01-21 22:22:35 by rcaputo; POE/Wheel/FollowTail.pm 1.42

    One cannot assume that filehandles have methods such as clearerr().
    If one does, someone (Hi, Rob Bloodgood) using Perl 5.005_03 will
    inform one that one's code doesn't work. One will therefore be
    required to commit patches such as this one that replaces
    $handle->clearerr() with IO::Handle::clearerr($handle). One might be
    somewhat bitter about all these tethers holding one from using more
    modern coding techniques. Gulliver probably felt similar upon
    awakening Lilliput. 

  2003-01-21 07:27:59 by rcaputo; t/08_errors.t 1.41

    Wheel::Run can change input/output filters now, so remove the tests
    which no longer generate errors. 

  2003-01-21 07:26:43 by rcaputo
  POE/Kernel.pm 1.231; POE/Pipe.pm 1.8; POE/Wheel/SocketFactory.pm 1.68

    The introduction of $handle->blocking() for ActivePerl 5.8.0 breaks
    perl 5.005_03 on two counts. First, filehandles aren't blessed into
    IO::Handle by default. Second, blocking() doesn't exist in the older
    Perl. Reintroduce the homegrown non/blocking code for legacy Perl,
    but use the portable IO::Handle version for modern Perl. 

  2003-01-17 18:26:57 by cwest; POE/Component/Server/TCP.pm 1.32

    POE::Component::Server::TCP->new() now accepts an 'Args' parameter.
    It does the same thing as 'Args' does for
    POE::Component::Client::TCP. A list of arguments are passed to the
    ClientConnected callback filling @{ARG0..$#_}. This is helpful for
    setting up sessions with important data. 

  2003-01-11 04:33:35 by rcaputo; POE/Component/Server/TCP.pm 1.31

    Bob Maccione discovered that ECONNABORTED (a connection was closed
    before it could be accepted) was killing off PoCo::Server::HTTP. This
    change ignores ECONNABORTED, so clients can't use it to kill servers. 

  2003-01-09 17:56:09 by rcaputo; POE/Kernel.pm 1.230

    Mark each "resource" section with the name of the module it will
    become. 

  2003-01-04 04:23:55 by rcaputo; t/22_wheel_run.t 1.29

    Halfjack discovered six subtests that failed. We tracked them down to
    a bogus $Configure{perlpath}. I changed the tests to discover the
    perl path via $^X instead, which exists at least as far back as
    5.005_03. 

  2003-01-02 06:19:03 by rcaputo; POE/Component/Client/TCP.pm 1.27

    Document Started in the SYNOPSIS. 

  2003-01-01 04:24:40 by rcaputo; POE/Session.pm 1.83

    Doc patch for Averell. 

  2002-12-31 22:59:57 by rcaputo; POE/Wheel/Run.pm 1.43

    Applied Jason Stillwell's patch to finish several features in this
    wheel. We can now pause and resume Stdout and Stderr events, and the
    wheel now supports changing filters at runtime. 

  2002-12-31 22:09:46 by rcaputo; POE/Kernel.pm 1.229

    Jason Stillwell discovered that event handlers can't return undef.
    Nothing seems to rely on this behavior, so now it's removed. 

  2002-12-24 03:53:02 by rcaputo; POE/Kernel.pm 1.228

    Scott Beck pointed out that statement-modifier foreach isn't
    supported in older versions of Perl. This patch replaces them with
    C<foreach BLOCK> versions, which should work much farther back in
    Perl history. 

  2002-12-21 04:39:13 by rcaputo; POE/Kernel.pm 1.227

    Damien Neil discovered a temporary Session reference leak in the new
    signal handling code. The leak prevents sessions from stopping when
    they should (they do stop on subsequent signals, though). We were
    able to fix the problem thanks to his information. 

  2002-12-19 05:32:06 by rcaputo
  POE/Kernel.pm 1.226; POE/Pipe.pm 1.7; POE/Wheel/SocketFactory.pm 1.67

    Replace the homegrown blocking and nonblocking handle code with
    IO::Handle's blocking() method. This should do the right thing in
    more places with less work. For example, it fixes the ioctl() errors
    introduced in ActiveState 5.8.0 without breaking things on FreeBSD
    5.6.1. 

  2002-12-18 17:38:25 by rcaputo; POE/Kernel.pm 1.225

    Applied Garrett Goebel's patch that allows call() to honor wantarray
    context. 

  2002-12-18 17:26:46 by rcaputo; POE/Kernel.pm 1.224

    Applied Garrett Goebel's patch to clean up calls to
    _data_ev_refcount_dec(). This does three things: 1) Disambiguates a
    $_ in a foreach loop. 2) Removes a few temporary lexical variables.
    3) Reduces the number of lines of code. 

  2002-12-16 17:32:55 by rcaputo; POE/Wheel/FollowTail.pm 1.41

    Applied Matt Sergeant's globref patch. 

  2002-12-13 03:44:26 by rcaputo; POE/Wheel/FollowTail.pm 1.40

    Removed an unneeded Fcntl module use that was also causing trouble
    with Rob Bloodgood's 5.005_03 system. 

  2002-12-13 03:28:18 by rcaputo; POE/Kernel.pm 1.223

    Apply Rob Bloodgood's patch to support 5.005_03 in POE::Kernel. 

  2002-12-10 03:09:17 by rcaputo; POE/Session.pm 1.82

    Damien Neil pointed out that Session.pm destroys its package_states
    parameter. This is rude and has been fixed. 

  2002-12-09 20:22:41 by rcaputo; POE.pm 1.154

    Bump POE's version to 0.2301 for development. 

=========================
2002-12-09 18:14:46 v0_24
=========================

  2002-12-09 18:14:46 by rcaputo; POE/Wheel/SocketFactory.pm 1.66

    Remove some Win32 warnings about constant prototypes. 

  2002-12-09 16:21:42 by rcaputo; POE.pm 1.153

    Bump version to 0.24. 

  2002-12-09 16:20:15 by rcaputo; README 1.102

    Pre-release tweaks. 

  2002-12-08 16:54:23 by rcaputo; MANIFEST 1.80

    Include MANIFEST.SKIP. 

  2002-12-05 20:37:20 by rcaputo; POE/Driver/SysRW.pm 1.23

    Applied Garrett Goebel's patch to support EWOULDBLOCK as a
    recoverable error on MSWin32. 

  2002-12-05 20:24:38 by rcaputo
  MANIFEST.SKIP 1.1; lib/Makefile-5005.pm 1.26

    Add Makefile targets for PPM-compatible tarballs. 

  2002-11-27 20:55:30 by rcaputo; POE/Component/Client/TCP.pm 1.26

    Fix the documentation for Started (was documeted as Start, which is
    wrong). Thanks to Rob Fugina for spotting this. 

  2002-11-27 17:52:28 by rcaputo; POE/Wheel/SocketFactory.pm 1.65

    Cygwin requires the exception flag be checked on sockets in order to
    detect connect() errors. As far as I know, no other system does.
    Disable the exception check on non-cygwin systems, as it interferes
    with Tk (which cannot check for exceptions as of version 800.023). 

  2002-11-27 08:06:26 by rcaputo; POE/Component/Client/TCP.pm 1.25

    Applied Pedro Melo Cunha's patch to add a Started callback and an
    Args list for passing values into the component without using
    closures. 

  2002-11-20 18:00:50 by rcaputo; POE/Wheel/SocketFactory.pm 1.64

    Added and documented pause_accept() and resume_accept() methods. 

  2002-11-20 17:57:41 by rcaputo; POE/Wheel/ReadWrite.pm 1.61

    Fixed a paste error in the documentation. 

  2002-11-19 19:23:00 by rcaputo; POE/Wheel/ReadLine.pm 1.26

    Carthag on efnet #poe pointed out that the last patch (also a
    response to his feedback) died outright if LE wasn't present. Also,
    there is no "ri" in termcap(5), so I'm faking it by printing part of
    the input string again. It works pretty well for being icky. :) 

  2002-11-19 18:44:05 by rcaputo; POE/Wheel/ReadLine.pm 1.25

    Support le and ri in addition to LE and RI. We'll need to support
    Term::Info (or the moral equivalent) also, because many operating
    systems don't deign to include termcap. Bleah. 

  2002-11-19 18:02:09 by rcaputo; POE/Kernel.pm 1.222

    Found and fixed the error in TRACE_DEFAULT: _dispatch_event() was
    trying to look up session aliases and other information before a
    session had started, so that stuff didn't exist. Instant crash. 

  2002-11-19 17:42:06 by rcaputo; POE/Kernel.pm 1.221

    Fixed explained return values when using TRACE_RETVALS. 

  2002-11-12 17:18:25 by rcaputo; POE/Wheel/SocketFactory.pm 1.63

    Apply Garrett Goebel's patch to make dynamic constants inline-able. 

====================================
2002-11-08 17:11:54 before_xs_branch
====================================

  2002-11-08 17:11:54 by rcaputo
  POE/Kernel.pm 1.220; POE/Wheel/SocketFactory.pm 1.62

    Applied Garrett Goebel's SocketFactory patch to support non-blocking
    connect() on MSWin32. The patch also includes his notes on possible
    side effects and a better algorithms for avoiding them. This may fix
    several long-standing problems under Windows. 

  2002-11-08 16:20:11 by rcaputo; POE/Wheel/Run.pm 1.42

    Jos Boumans provided a testcase for Wheel::Run not sending
    CloseEvent. It turned out that we were setting socket readers based
    on the presence of StdoutEvent and StderrEvent, but we were
    incrementing the internal activitiy counter based on the presence of
    pipe handles. Two handles always exist (for pipes) regardless of the
    presence of events for them. The fix is to always register readers
    for child STDERR and STDOUT (lest one block!) but not emit events
    when they aren't wanted. We catch their closure, and things should
    work better now. 

  2002-11-07 20:04:14 by rcaputo; POE/Kernel.pm 1.219

    Fixed some of the Kernel traces that were confessing instead of
    warning. That caused POE to exit after the message, which was
    definitely not right. 

  2002-11-05 21:03:32 by rcaputo; POE/Wheel.pm 1.17

    Applied Garrett Goebel's doc fixes. 

  2002-11-03 14:40:17 by rcaputo; POE/Loop.pm 1.2

    Described the timer features needed in more detail, per Stef's
    feedback. 

  2002-11-01 16:43:26 by rcaputo; POE.pm 1.152

    Fixed a typo reported by Jeffz. 

  2002-11-01 14:59:16 by rcaputo
  POE/Component/Client/TCP.pm 1.24; POE/Component/Server/TCP.pm 1.30

    Add examples of Filter and ClientFilter parameters, thanks to a
    question on their nature by Abdul Fatah. 

  2002-10-27 22:57:53 by rcaputo; POE/Kernel.pm 1.218

    Addi mentioned using event counts to short-circuit queue sweeps. I
    forgot to do that in _data_ev_clear_session(). This patch adds it. 

  2002-10-26 11:59:39 by rcaputo; POE.pm 1.151; POE/Filter/Grep.pm 1.4;
  POE/Filter/Map.pm 1.4; POE/Filter/Reference.pm 1.27;
  POE/Filter/Stackable.pm 1.4; POE/Kernel.pm 1.217;
  POE/Loop/Select.pm 1.42; POE/Wheel/ReadLine.pm 1.24

    I discovered the podchecker utility, and ran it on POE's
    documentation. Ow! The errors are fixed, but not the warnings. 

  2002-10-26 06:21:28 by rcaputo; POE.pm 1.150

    Bump the version up to 0.2303. Feature freeze is over, la la la. 

===========================
2002-10-25 17:04:16 v0_2302
===========================

  2002-10-25 17:04:16 by rcaputo; Makefile.PL 1.25

    Update the ithreads warning, and make the delay for it a little
    longer so people can digest it. 

  2002-10-25 16:13:36 by rcaputo; POE.pm 1.149

    Bump the version to 0.2302 for release. Feature freeze. Only commit
    bug fixes. 

  2002-10-25 15:53:46 by rcaputo; README 1.101

    Minor edits before 0.2302 is tarred up. 

  2002-10-25 15:04:38 by rcaputo; t/00_coverage.t 1.16

    Clean up an error message regarding Wheel::ReadLine and Term::Cap. 

  2002-10-25 06:56:09 by rcaputo; POE/Kernel.pm 1.216;
  POE/Loop/Event.pm 1.32; POE/Loop/Gtk.pm 1.31; POE/Loop/Poll.pm 1.19;
  POE/Loop/Select.pm 1.41; POE/Loop/Tk.pm 1.38

    [May Break Code] Clean up the ASSERT_ and TRACE_ messages, and
    standardize their categories. The _DEFAULT ones still work. :) 

  2002-10-25 06:52:29 by rcaputo; lib/cpan-test.perl 1.2

    Fixed a problem where the newest versions of a module were deleted
    rather than the oldest ones. Minor aesthetic changes, too. 

  2002-10-21 00:08:02 by rcaputo; POE/Wheel/Run.pm 1.41

    Only import what we need. 

  2002-10-20 20:55:22 by rcaputo; POE/Component/Client/TCP.pm 1.23;
  POE/Component/Server/TCP.pm 1.29; POE/Kernel.pm 1.215; POE/NFA.pm 1.18;
  POE/Session.pm 1.81; t/03_aliases.t 1.11; t/11_signals_poe.t 1.23;
  t/22_wheel_run.t 1.28; t/23_nfa.t 1.4

    Added a mandatory warning whenever a signal is handled by returning
    true from its event handler. POE versions since 0.20 have recommended
    using sig_handled() instead.

    Added a mandatory warning whenever a "_signal" event handler is
    registered. POE versions since 0.20 have recommended using sig() to
    register explicit handlers rather than using catch-all _signal event.

    Added a mandatory warning when calling sig_handled() in a "_signal"
    handler. This includes handling signals from "_default".

    Removed _signal handlers from components and tests, since they now
    cause warnings. For the tests which need to handle signals, we now
    call sig() to register those handlers.

    Removed _signal from the list of events which generate the "... but
    session foo has neither that state nor a _default state to handle it"
    warnings. Otherwise removing _signal handlers would trade one warning
    for another. 

  2002-10-20 20:35:51 by rcaputo; POE/Wheel/FollowTail.pm 1.39;
  POE/Wheel/ListenAccept.pm 1.26; POE/Wheel/ReadWrite.pm 1.60;
  POE/Wheel/SocketFactory.pm 1.61

    Removed support for /.*State/ parameters and upgraded their use from
    warnings to errors. This is a scheduled change, per
    http://poe.perl.org/?POE_RFCs/XyzState_to_XyzEvent 

  2002-10-18 20:43:22 by rcaputo; POE/Component/Client/TCP.pm 1.22

    Applied Casey Zacek's patch adding a ConnectTimeout to Client::TCP. 

  2002-10-14 23:04:45 by rcaputo; lib/cpan-test.perl 1.1

    This little ditty runs all the /^POE::/ modules on the CPAN against
    the local CVS version of POE. Useful for regression testing and
    uncovering problems in components. 

  2002-10-14 17:44:41 by rcaputo; POE/Kernel.pm 1.214

    Applied James March's patch to move the final leak checking out of
    END and into explicitly called finalize() functions. This prevents
    the checks from being triggered on crashes (which always leave some
    cruft behind). 

  2002-10-11 21:21:41 by rcaputo
  MANIFEST 1.79; POE/Queue.pm 1.1; POE/Queue/Array.pm 1.2

    Moved POE::Queue::Array documentation to POE::Queue and made it
    generic (only minor edits). Replaced POE::Queue::Array documentation
    with a pointer to POE::Queue's. 

  2002-10-09 14:36:27 by rcaputo; MANIFEST 1.78; POE/Kernel.pm 1.213;
  POE/Loop.pm 1.1; POE/Loop/Event.pm 1.31; POE/Loop/Gtk.pm 1.30;
  POE/Loop/Poll.pm 1.18; POE/Loop/Select.pm 1.40; POE/Loop/Tk.pm 1.37

    Classified the unclassified accessors as helpers, and tidied up their
    names to match their new category. Documented the abstract POE::Loop
    interface as POE/Loop.pm, and documented the specific loops with
    pointers back to it. 

  2002-10-07 20:40:24 by rcaputo; lib/cvs-log.perl 1.3

    While just admiring the cvs logs this generates, I noticed that I had
    badly formatted the dates. This swaps month and day in the log so
    that the dates make sense. 

  2002-10-04 16:30:30 by rcaputo; POE/Kernel.pm 1.212

    Renamed the VEC_* constants to MODE_* because they no longer are tied
    to select() bit vectors. Also renamed the FVC_* constants to FMO_*
    for the same reason. Tweaked the way _dispatch_event() is called as
    part of the voodoo of fixing Gtk and Event (see earlier commit). 

  2002-10-04 16:27:38 by rcaputo
  POE/Loop/Event.pm 1.30; POE/Loop/Gtk.pm 1.29

    Fixed file descriptor tracking. The first rewrite was broken because
    different access modes (read, write) would overwrite themselves for
    the same file descriptor. This version separates watchers by
    descriptor and mode, fixing LordVorp's problem and probaly also
    jerakeen's.

    Also cleaned up some of the warning messages, renamed VEC to MODE
    throughout, and fixed the _dispatch_event calls to match Kernel.pm's
    definition for that function. 

  2002-10-04 16:19:49 by rcaputo
  POE/Loop/Poll.pm 1.17; POE/Loop/Select.pm 1.39; POE/Loop/Tk.pm 1.36

    Clean up the trace/assert messages a little bit. Rename VEC to MODE
    throughout. Standardize the _dispatch_event() calls to match changes
    in Kernel.pm. 

  2002-10-03 18:59:38 by rcaputo; POE/Wheel/Run.pm 1.40

    Reset all signal handlers to DEFAULT in the child process. Leaving
    POE's signal handlers active was the wrong thing to do. Thanks to
    JamesCOU for finding this bug. 

  2002-10-03 12:43:17 by rcaputo; POE/Kernel.pm 1.211

    Add TRACE_RELATIONS, and move extra-reference garbage collection so
    that it doesn't trigger a duplicate _stop event *from* a _stop event.
    This clears up the last of the known bugs introduced by accessorizing
    POE::Kernel's internal structures. 

  2002-10-03 06:55:26 by rcaputo; POE/Kernel.pm 1.210;
  POE/Loop/Event.pm 1.29; POE/Loop/Gtk.pm 1.28; POE/Loop/Poll.pm 1.16;
  POE/Loop/Select.pm 1.38; POE/Loop/Tk.pm 1.35

    Normalized the parameters for the enqueue and dequeue functions in
    POE::Kernel, and their use throughout all the files. Tracked down and
    stomped a file descriptor reference count inconsistency. Tested POE
    against its own tests, and tested my components against POE. All
    tests successful. However, more work needs to be done: A lot of
    warnings come up when SIGINT'ing a program. 

  2002-10-02 22:58:20 by rcaputo; POE/Kernel.pm 1.209

    Implement POE_TRACE_FOO and POE_ASSERT_FOO environment variables.
    These let you turn on traces and assertions without modifying any
    code. Also cleaned up a leak in the extra refcount management, and
    tidied up some error messages. 

  2002-10-02 18:54:59 by rcaputo; POE/Kernel.pm 1.208

    Undo the inline "optimization" from the last commit. The function
    needs to exist for scoping reasons. 

  2002-10-02 18:38:33 by rcaputo; POE/Kernel.pm 1.207

    Chop up all the long (>79 chars) lines. Inline a function that was
    only called from one place. Fix a misspelled method name, which
    caused Rob Bloodgood's program to fail. 

  2002-10-02 07:01:36 by rcaputo; POE/Kernel.pm 1.206;
  POE/Loop/Event.pm 1.28; POE/Loop/Gtk.pm 1.27; POE/Loop/Poll.pm 1.15;
  POE/Loop/Select.pm 1.37; POE/Loop/Tk.pm 1.34

    Split Kernel.pm into several subsystems. Although they are in the
    same file, their data structures have been separated and hidden as
    lexicals in private scopes. The only way to modify them is through
    public accessors. The next step in the refactor will be to clean up
    the accessors, but I wanted to commit things while it still passes
    "make test". 

  2002-10-02 06:58:20 by rcaputo; t/08_errors.t 1.40

    I copped out, sorry. I removed some parameter syntax test which
    created wheels outside of any session. The resulting good syntax came
    out as errors because POE freaked when it tried to put the wheels
    somewhere that didn't exist. I hope to make up for tonight's lameness
    with a decent suite of unit tests later. 

  2002-10-02 06:54:56 by rcaputo; POE.pm 1.148

    We're going to try a different version numbering scheme. Odd
    subversions will be for CVS stuff. Even subversions will be web-only
    releases. As always, plain versions (which only go out to the
    hundredths place) are reserved for stable CPAN releases. Bump the
    version to 0.2301 to kick off the CVS phase (kind of late, though). 

  2002-10-02 06:27:41 by rcaputo; t/22_wheel_run.t 1.27

    Wheel::Run contains its own exit code, which tries to thwart object
    destruction so POE's own destructors aren't triggered. The exit
    statement in the coderef test was thwarting it, causing all kinds of
    false leak detection. 

  2002-09-30 02:43:46 by sungo; POE/Wheel/FollowTail.pm 1.38

    remove -l check on files which fixes spurious warning when
    encountering a filehandle 

  2002-09-28 02:53:26 by rcaputo; POE/Wheel/FollowTail.pm 1.37

    Be more conscientious about cleaning up when FollowTail is destroyed. 

  2002-09-28 00:20:57 by rcaputo
  POE/Wheel/FollowTail.pm 1.36; t/14_wheels_ft.t 1.10

    Split FollowTail into two modes: plain-file mode which uses
    "blocking" I/O and timer based polling on disk files, and fifo/socket
    mode which uses non-blocking I/O and select-based polling on special
    files. This should do the right things for sockets, pipes, and plain
    files. Because it avoids NBIO and select() on disk files, it should
    also work on Windows and VMS. 

=============================
Beginning of Recorded History
=============================
