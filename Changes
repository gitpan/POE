$Id: Changes,v 1.48 1999/11/26 16:46:15 rcaputo Exp $

Revision history for Perl extension POE.
========================================

Changes marked with "(!!!)" may break backward compatibility.
Versions with "_xx" subversions are internal test releases.  Most
subversions are available from <http://www.newts.org/~troc/poe.html>.


0.08 1999.11.26
---------------

John Labovitz <watchguard.com!johnl> submitted a patch to change
Driver::SysRW's read block size.  He also pointed out that
Filter::Reference prefers to use freeze() instead of the more portable
nfreeze().  I applied a modified version of his block size patch, and
I changed Filter::Reference to prefer nfreeze().

There have been no complaints with the 0.07_xx subversions, and they
contain useful changes, so the version is bumped to 0.08.

Mentioned the "POE2" project in the README file.

Added an undocumented command line switch to samples/poing.perl that
specifies the maximum number of hours to run.

Changed the small/large queue limit for POE::Kernel::_enqueue_state
from 32 to 8.

Removed the hard requirement for optional modules: Storable;
Time::HiRes; HTTP::Request; HTTP::Response; HTTP::Status; URI::URL.
These aren't mandatory for basic POE things.


0.0704 1999.11.14
-----------------

Include some modules that were mistakenly left out of 0.0703.


0.0703 1999.08.20
-----------------

Removed closure optimizations from the Wheel classes.  The later
addition of $wheel->event() subtly broke them.

Added poing.perl, a multi-host ICMP ping program, to the samples
directory.  My ISP was down, so I hacked this together, "borrowing" a
lot of code from Net::Ping.  As such, it's neither friendly to
configure nor commented.

Sessions' "default" option didn't confess, contrary to the
documentation.


0.0702 1999.07.30
-----------------

Made BindAddress optional for UNIX client sockets.  It's still
required for server sockets.  Updated the documentation for the
change, fixed some typos, and included PF_INET and PF_UNIX.

Changed POE::Kernel::_enqueue_state from a linear search to a binary
search, but only if there are 32+ events in the queue.  Smaller queues
are still searched linearly, on assumption that it's quicker because
there's less overhead.


0.0701 1999.07.01
-----------------

Fixed a race or TCP/IP stack problem in SocketFactory.  SocketFactory
was firing a "connect error 0" if the server side sent data
immediately.  The problem was tested on four systems: Linux (broke);
Solaris (broke); FreeBSD (worked); OS/2 (worked).  Go figure.  It
should work on all four now.

Modified POE::Filter::HTTPD to respond with the protocol version
(hardcoded to 1.0).  The wget utility had a problem with 'HTTP ...',
and I assume it won't be the only thing to.

Replaced a regular expression in POE::Filter::Reference with a
substr() call.  The regexp was used to frame input streams, and large
structures (over 32KB) were not being framed correctly.  This was
fixed in a previous version, but the fix was reverted for some reason.
The new &get method code also supports 0-byte blocks, which is
pointless for a Reference filter, but lets you use Reference as a
"reference" for other variable-length block filters. :)


0.07 1999.06.18 (!!!)
---------------------

Revised the new manpages based on reader feedback.

Bumped the version number to 0.07 and released it to the CPAN.  This
version contains all the changes, including one minor interface
change.  It's that change that warrants the (!!!) icon, so don't
panic.  This is NOT another 0.05 -> 0.06 API changefest of pain.


0.0609 1999.06.15 (!!!)
-----------------------

Updated samples/*sessions.perl to test $kernel->state(...) and
discovered that the documentation was wrong about this function.
Thanks, Artur, for pointing this out.

Fixed the documentation for $kernel->state(...) with regards to
package and object sessions.

Made POE::Session an array reference, as part of the reorganization of
POE's internals.

Revised all the manpages.  Split the manpages into separate PODs, and
put them at the end of each module.  Rewnote the POE.pm overview,
added some ASCII art, and threw away the "Design Goals" and related
hype.  Removed POE-TODO and POE-HINTS manpages.

Updated the README to be more readable.  Moved the mailing list and
web site information there.  Should either or both change, stale
information won't rot in a thousand manpages around the world.

Removed design notes from the ends of Kernel and Session, because docs
go there now.  Moved them to POE-TODO, which is now not included.

&POE::Session::create was broken-- I'm not sure how it worked to begin
with.  Fixed.

Revised the POE::Filter::HTTPD documentation to follow the rest of the
manpages' format.

(!!!) Minor interface change.  &POE::Session::option can now fetch
session option values without changing or deleting them in the
process.

Changed $VERSION in POE.pm to not preserve the version's underscore.
This changes the archive name format, so I'll start referring to
versions without the underscore.  Joy.


0.06_08 1999.05.30
------------------

Begin reorganizing POE development.  The tests/ subdirectory is now
samples/.

Added POE-HINTS documentation.

Added POE::Curator, POE::Ojbect and POE::Runtime classes.  These
implement the start of the heretofore "Mythical" Object Layer.

Added samples/olayer.perl to test the current Object Layer features.
The object layer is in early development, so there's no documentation
outside the olayer.perl comments.

Applied Philip Gwyn's serialization patch to Filter::Reference.  Added
his serialization test as samples/ref-type.perl.  Updated
documentation for Filter::Reference to match patch.

Applied Philip Gwyn's updated patches for hot-swappable filters.
Added his filter swapping test as samples/filterchange.perl.  I have
much more confidence in this now that it's tested.

Updated documentation to point to the samples/ directory.

Fixed t/test.t to point to the samples/ directory.

Made dist on a FreeBSD system, so the permissions should be correct.


0.06_07 1999.05.12
------------------

"Crunch time" is sort of over.  An emergency in April put everything
on hold.  I had a lot of time away from working on POE, and I came
back refreshed and with some funky new ideas.  Unfortunately, it sort
of ruined my plans for releasing 0.07, and 0.07 is delayed until I
move development over to CVS.

&POE::Kernel::post() now returns undef for error.  The "success"
return value currently is 1, but this may change.  It's better right
now to check for definedness as success.  On error, $! will be set as
per &POE::Kernel::alias_resolve().

&POE::Kernel::call() has improved return values, similar to &post's.
See the docs.

&POE::Session::create is a new constructor, with some type checking.
It uses a completely different call signature.  See the docs.

Philip Gwyn's patches for hot-swappable filters are in.  They are
highly experimental and untested.  No guarantees, not even that
they'll exist in future releases.  Feedback would be appreciated.


0.06_06 1999.04.28
------------------

Added some defaults to SocketFactory: SocketDomain => AF_INET,
SocketType => SOCK_STREAM, SocketProtocol => 'tcp' (for INET sockets).

Changed SocketFactory semantics.  On Artur's insistence, SocketFactory
now uses RemoteAddress to determine the difference between connecting
and listening sockets.  ListenQueue now defaults to SOMAXCONN.  This
should not break existing programs.

The tests/*.perl programs have been updated to use SocketFactory in
recommended ways.

Added STATE to state (event handler) parameters.


0.06_05 1999.03.23
------------------

Wheel::ReadWrite would sometimes not fire an error event; fixed.

Added PREREQ_PM to Makefile.PL.  Theoretically, CPAN.pm will
automagically install all POE's prerequisites now.  For completeness,
PREREQ_PM requires more than basic POE does.


0.06_04 1999.03.17
------------------

Entering "crunch time" for the 0.07 release.  Expect a lot of quick,
small-fix releases.

Fixed documentation bug.  It said FROM instead of SENDER.

POE::Session and POE::Wheel::* check for a POE::Kernel reference as
the first parameter.  This will detect old code and croak with better
error messages.


0.06_03 1999.03.17
------------------

Incorrect parameters to &POE::Session::new could cause an infinite
loop.  Fixed.

Depreciated posting/calling $_[HEAP] instead of $_[SESSION].

Allow posting to stringified session references.

Sessions will carp on invalid states, if their 'debug' option is set
and they do not have a _default state registered.

Added an event() method to the wheels.  This lets programs change the
events they emit without having to destroy them outright and create
replacements.

Allow packed addresses in SocketFactory's parameters.

Documented the mailing list.

Fixed a race error in tests/proxy.perl.  It would die if the client
sent information before the server connection was made.


0.06_02 1999.02.20
------------------

Fixed POE documentation to stop being silly about => "stringifying"
things that it's not.  Sorry about that.

Updated tests/proxy.perl to queue data sent by the client before the
server connection is fully established.  Previously, the proxy would
try to call SocketFactory::put, and the proxy would die.  Whoops!

Updated SocketFactory to fail on unresolved hostnames.  Previously it
was relying on undef from Socket::sockaddr_in; now it checks the
inet_aton results.

Updated SocketFactory to generate FailureState on failure to connect.

Replaced SocketFactory's hard failures with FailureState events.

Fixed proxy.perl; it wasn't registering the proxy/server ReadWrite
wheel properly.

Assigned EADDRNOTAVAIL to $! if inet_aton fails in SocketFactory.  I
assumed inet_aton (gethostbyname, too) touch $! on failure.  Wrong!


0.06_01 1999.02.16
------------------

Added Kernel::session_create, a semantically sweeter version of C<new
POE::Session>, for people who prefer to think this way.

Added check for pre-packed INET addresses in Wheel::SocketFactory.
Previously it would try to inet_aton() them.

Added check for stringified session references in
Kernel::alias_resolve.  Now you can post/call to hash keys.

Added the event() method to existing POE::Wheel classes.  Now events
can be changed without destroying old wheels and creating new ones.

Made state redefinition warnings optional.  They will not appear
unless a session's 'debug' option is set.

Added tests/fakelogin.perl to test the event() method for ReadWrite.
The other wheels' event() methods are untested.  If they're broken,
let the author know.

Split the TO-DO list out of the main POE.pm file.


0.06 1999.02.03 (!!!)
---------------------

This is a public CPAN release.  It incorporates all the changes since
version 0.05.


0.05_57 1999.02.02 (!!!)
------------------------

(!!!) Renamed POE::Session::debug() as POE::Session::option(), per
feedback from testers.  This changes the original "_debug" semantics
into something like environment variables for sessions.

The ReadWrite wheel's InputState is optional.  This allows for
write-only wheels, which are good for writing logs.  The
followtail.perl test has been updated to use such a wheel for its log
writer sessions.

The FollowTail wheel now has an optional PollInterval parameter, which
tells how long to wait (in seconds) between checking the file for new
data.


0.05_56 1999.02.02
------------------

Crimson found the real cause of Perl's coredumps, which allowed the
0.05_54 change to be rolled back.


0.05_55 1999.02.01
------------------

(!!!) SIGWINCH is unsupported until Perl and/or POE implements safe
signals.  This signal was causing Perl to crash on xterm resizes.

(!!!) Sessions' "_debug" variables have been removed.  Instead,
POE::Session now has a debug() method.  This removes the _debug heap
pollution, and allows for several per-session debug flags.


0.05_54 1999.01.30
------------------

Backed out the change in 0.05_04 where wheels call their event
handlers directly.  This causes some sort of stupid closure or
destructor trick (we're still not sure which) that makes perl SEGV on
some systems.


0.05_52 1999.01.27
------------------

Added Win32 support for non-blocking sockets.  Unfortunately, the
Win32 port's select() doesn't appear to support regular files, so POE
is virtually useless for non-blocking filesystem work.  On the plus
side, sockets seem to function very well.  Thanks to Sean Puckett
(catbear) for tracking this down.


0.05_04 1999.01.15 (!!!)
------------------------

Fixed Reference.pm again.  Storable's nfreeze is portable across
networks and faster than FreezeThaw, so it's preferred.  Thanks to
Artur Bergman for pointing this out.

(!!!) Changed _child parameters.  $from is always the kernel.  ARG0 is
either 'gain' if the parent is being given a child; 'lose' if its
child is being stopped; or 'create' if the new child was created by
this session.  ARG1 is always the child session's reference.  For
created sessions, ARG2 is the return value from the child's _start
event handler.

(!!!) Changed _parent parameters.  $from is always the kernel; ARG0 is
the old parent session; and ARG1 is the new parent session.

(!!!) Changed event handler parameter order, and introduced a way to
avoid future changes in the parameter order from breaking
compatibility.

Updated tests/*.perl examples to work with the new scheme of things.
Added comments, and generally cleaned things up.

Sessions' _start events may now include parameters.  The selects.perl
test is the first program to use this.

Wheels now call event handlers directly instead of posting events.
This should make things substantially faster.

(!!!) Changed filters' return values, to make them more compatible
with block and datagram protocols.  Most people won't notice the
difference, but this will break compatibility for Filter and Driver
writers.


0.05_03 1999.01.14 (!!!)
------------------------

Fixed Kernel select dispatching.  Changing $_ in event handlers would
cause a fatal error.

Fixed Reference.pm.  Frozen references were not being thawed correctly
under two conditions: If packet boundaries split them in certain
places, and later if they contained \n.  Thanks to sky and a-mused for
finding this one.

(!!!) Fixed Kernel.pm signal handlers.  The kernel now waits on
SIGCHLD and only generates a CHLD signal event if the child PID is 0
or more.  The CHLD signal now includes the PID and $? as parameters.
The only programs that break are ones that explicitly wait.  It also
always generates SIGCHLD/SIGCLD events as "CHLD" to simplify handlers.

Fixed Kernel event dispatching so that events generated by select() no
longer outpace Kernel::run's ability to dispatch them.  Thanks to Dave
Paris for finding this.

Fixed SysRW.pm to flush as much data as possible all at once.  This
should reduce events and overhead when sending a lot of data.  Thanks
to Dave Paris for pointing this out.

Added new tests.


0.05_02 1999.01.12 (!!!)
------------------------

Fixed signals.  Now runs garbage collection on sessions after
execution returns from non-terminal signal handlers.

Fixed README, Changes, etc. to be more readable.  I hope.

Added tests/thrash.perl to check for memory leaks and benchmark
"performance".

(!!!) Changed "exception" to "expedite", with regard to Kernel select
functions.

The thrash.perl results look pretty bad, and DProf blamed IO::Select,
so out it went.

Revised internal data structures to be more efficient.

(!!!) Removed support for multiple kernels, each to its own thread.
See the 0.05 SIGPIPE notes.

Rewrote documentation.  Split it from individual packages, and placed
it into its own pod file.

Added return values for Kernel::alias_* functions.

Localized $SIG{'__DIE__'} in "harmless" evals.

Inlined Kernel::_kernel_select().

Added Artur Bergman's support for "package" sessions, and
packagesessions.perl test.

(!!!) Fixed Filter::Line::put() to treat @_ as an array of lines.
This brings Filter::Line::put() into agreement with the documentation.

Added Filter::Stream, a "null" filter that passes data through
unchanged.

Added Kernel::yield.

Removed IO::Handle dependencies in the Kernel.  Now it will work with
plain old files as well.

Added return values for Kernel::state.

Created Wheel::SocketFactory, a replacement for IO::Socket::INET (tcp
only so far) and IO::Socket::UNIX.  All it does in create sockets,
though... the sockets don't have IO::Socket-style methods.

Made FreezeThaw the default for Filter::Reference, and issued a
mandatory warning if Storable is used.  Objects frozen with Storable
are not thawable on different-endian systems.


0.05 1998.12.04
---------------

Delayed garbage collection on new sessions.  Previously, sessions
would be tested for garbage collection immediately after creation.

Fixed a fatal bug in tests/proxy.perl.  Added ability to redirect
multiple ports.  Added more logging information.

Fixed SIGPIPE handling.  Previously, SIGPIPE would be dispatched to
every Session.  Now it is dispatched directly to the session that was
running when the signal occurred.  This probably breaks multithreaded
programs that contain multiple kernels, and I am considering dropping
multi-kernel support.

Fixed SIGRTMIN handling.  At least one system has this signal defined
in %SIG but doesn't support it.  Assigning to $SIG{'RTMIN'} there
causes an "Attempt to free unreferenced scalar" warning, and the test
program hangs.  POE now skips RTMIN and RTMAX when assigning handlers.

Added Filter::Reference, contributed by Artur Bergman
<artur@vogon-solutions.com>.  Filter::References enables POE to pass
copies of referenced data between processes.  It requires C<Storable>
or C<FreezeThaw>.

Fixed Wheel::ReadWrite::put().  It used to send a concatenated version
of @_ to its driver.  This broke Filter::Reference when putting a list
of references.  Now it's up to respective Filter classes to do the
right thing with @_.

Fixed Wheel::ReadWrite.  Now it sends FlushedState events when it
should.


0.04 1998.11.24
---------------

Added $object->can($state) check when registering object methods as
states/event handlers.

Added Session aliases (symbolic references).  See tests/names.perl for
an example.

Added Kernel::signal($session, $name).  This sends signals directly to
POE::Sessions or POE::Kernels without going to the operating system
(which would send the signal to every kernel and session).  The
signals.perl test has been updated to test this.

Added Kernel::call().  Takes the same parameters as Kernel::post, but
dispatches the state/event immediately.  Returns whatever the event
handler did.  The sessions.perl test test has been updated to test
this.


0.031 1998.11.24
----------------

Added tests/objsessions.perl to the manifest.  D'oh!


0.03  1998.11.23
----------------

Added new constructor syntax to POE::Session.  It's now possible to
say: new POE::Session($kernel, $object, \@methods).  See
tests/objsession.perl for an example.

Removed an unnecessary function call in Kernel.pm.

Rearranged Changes so the most recent ones come first.


0.02  1998.11.22
----------------

Rewrote signals.  Signals now propagate from parent to child sessions.
"Terminal" signals now only kill sessions that don't otherwise handle
them.

Added subsecond resolution for alarms if Time::HiRes is available.
See the docs for POE::Kernel::alarm().

Added POE::Kernel::delay() for "time() + $seconds" alarms.  Uses
Kernel's time(), which may be from Time::HiRes.

Parent sessions will now wait around until all child sessions finish,
unless they're explicitly killed off.

Fixed a blessing bleed that caused implicitly returned objects to die
in the wrong scope (confounding resource management).

Added tests/proxy.perl, a simple line-based proxy example.


0.01  1998.08.15
----------------

Initial release.  Implemented Kernel, Session, Wheel, Driver, Filter.


- EOF: Thank you for reading. -
